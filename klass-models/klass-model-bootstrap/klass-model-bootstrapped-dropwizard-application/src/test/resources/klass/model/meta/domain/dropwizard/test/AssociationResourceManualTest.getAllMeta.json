[
  {
    "name": "EnumerationHasLiterals",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "enumeration",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Enumeration"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "enumerationLiterals",
        "multiplicity": "1..*",
        "resultType": {
          "name": "EnumerationLiteral"
        },
        "associationEndModifiers": [
          {
            "keyword": "owned"
          }
        ],
        "orderBys": [
          {
            "thisMemberReferencePath": {
              "klass": {
                "name": "EnumerationLiteral"
              },
              "associationEnds": [],
              "dataTypeProperty": {
                "name": "ordinal"
              }
            },
            "orderByDirection": "ascending"
          }
        ]
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "Enumeration"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "name"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "EnumerationLiteral"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "enumerationName"
        }
      }
    }
  },
  {
    "name": "ClassifierHasClassifierInterfaceMapping",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "subClassifier",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Classifier"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "superInterfaces",
        "multiplicity": "0..*",
        "resultType": {
          "name": "ClassifierInterfaceMapping"
        },
        "associationEndModifiers": [
          {
            "keyword": "owned"
          }
        ],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "Classifier"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "name"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "ClassifierInterfaceMapping"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "classifierName"
        }
      }
    }
  },
  {
    "name": "ClassifierInterfaceMappingHasInterface",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "subClassifiers",
        "multiplicity": "0..*",
        "resultType": {
          "name": "ClassifierInterfaceMapping"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "superInterface",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Interface"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "ClassifierInterfaceMapping"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "interfaceName"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "Interface"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "name"
        }
      }
    }
  },
  {
    "name": "ClassifierHasModifiers",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "owningClassifier",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Classifier"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "classifierModifiers",
        "multiplicity": "0..*",
        "resultType": {
          "name": "ClassifierModifier"
        },
        "associationEndModifiers": [],
        "orderBys": [
          {
            "thisMemberReferencePath": {
              "klass": {
                "name": "ClassifierModifier"
              },
              "associationEnds": [],
              "dataTypeProperty": {
                "name": "ordinal"
              }
            },
            "orderByDirection": "ascending"
          }
        ]
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "Classifier"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "name"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "ClassifierModifier"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "classifierName"
        }
      }
    }
  },
  {
    "name": "ClassHasSuperClass",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "subClasses",
        "multiplicity": "0..*",
        "resultType": {
          "name": "Klass"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "superClass",
        "multiplicity": "0..1",
        "resultType": {
          "name": "Klass"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "Klass"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "superClassName"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "Klass"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "name"
        }
      }
    }
  },
  {
    "name": "EnumerationPropertyHasEnumeration",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "enumerationProperties",
        "multiplicity": "0..*",
        "resultType": {
          "name": "EnumerationProperty"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "enumeration",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Enumeration"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "EnumerationProperty"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "enumerationName"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "Enumeration"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "name"
        }
      }
    }
  },
  {
    "name": "ClassifierHasDataTypeTypeProperties",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "owningClassifier",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Classifier"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "dataTypeProperties",
        "multiplicity": "0..*",
        "resultType": {
          "name": "DataTypeProperty"
        },
        "associationEndModifiers": [
          {
            "keyword": "owned"
          }
        ],
        "orderBys": [
          {
            "thisMemberReferencePath": {
              "klass": {
                "name": "DataTypeProperty"
              },
              "associationEnds": [],
              "dataTypeProperty": {
                "name": "ordinal"
              }
            },
            "orderByDirection": "ascending"
          }
        ]
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "Classifier"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "name"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "DataTypeProperty"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "classifierName"
        }
      }
    }
  },
  {
    "name": "DataTypePropertyHasMinLengthPropertyValidation",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "dataTypeProperty",
        "multiplicity": "1..1",
        "resultType": {
          "name": "DataTypeProperty"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "minLengthValidation",
        "multiplicity": "0..1",
        "resultType": {
          "name": "MinLengthPropertyValidation"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.AndCriteria",
      "left": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "DataTypeProperty"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "classifierName"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "MinLengthPropertyValidation"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "classifierName"
          }
        }
      },
      "right": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "DataTypeProperty"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "name"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "MinLengthPropertyValidation"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "propertyName"
          }
        }
      }
    }
  },
  {
    "name": "DataTypePropertyHasMaxLengthPropertyValidation",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "dataTypeProperty",
        "multiplicity": "1..1",
        "resultType": {
          "name": "DataTypeProperty"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "maxLengthValidation",
        "multiplicity": "0..1",
        "resultType": {
          "name": "MaxLengthPropertyValidation"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.AndCriteria",
      "left": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "DataTypeProperty"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "classifierName"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "MaxLengthPropertyValidation"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "classifierName"
          }
        }
      },
      "right": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "DataTypeProperty"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "name"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "MaxLengthPropertyValidation"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "propertyName"
          }
        }
      }
    }
  },
  {
    "name": "PrimitivePropertyHasMinPropertyValidation",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "primitiveProperty",
        "multiplicity": "1..1",
        "resultType": {
          "name": "PrimitiveProperty"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "minValidation",
        "multiplicity": "0..1",
        "resultType": {
          "name": "MinPropertyValidation"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.AndCriteria",
      "left": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "PrimitiveProperty"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "classifierName"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "MinPropertyValidation"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "classifierName"
          }
        }
      },
      "right": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "PrimitiveProperty"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "name"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "MinPropertyValidation"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "propertyName"
          }
        }
      }
    }
  },
  {
    "name": "PrimitivePropertyHasMaxPropertyValidation",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "primitiveProperty",
        "multiplicity": "1..1",
        "resultType": {
          "name": "PrimitiveProperty"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "maxValidation",
        "multiplicity": "0..1",
        "resultType": {
          "name": "MaxPropertyValidation"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.AndCriteria",
      "left": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "PrimitiveProperty"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "classifierName"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "MaxPropertyValidation"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "classifierName"
          }
        }
      },
      "right": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "PrimitiveProperty"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "name"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "MaxPropertyValidation"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "propertyName"
          }
        }
      }
    }
  },
  {
    "name": "DataTypePropertyHasModifiers",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "dataTypeProperty",
        "multiplicity": "1..1",
        "resultType": {
          "name": "DataTypeProperty"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "propertyModifiers",
        "multiplicity": "0..*",
        "resultType": {
          "name": "PropertyModifier"
        },
        "associationEndModifiers": [],
        "orderBys": [
          {
            "thisMemberReferencePath": {
              "klass": {
                "name": "PropertyModifier"
              },
              "associationEnds": [],
              "dataTypeProperty": {
                "name": "ordinal"
              }
            },
            "orderByDirection": "ascending"
          }
        ]
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.AndCriteria",
      "left": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "DataTypeProperty"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "classifierName"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "PropertyModifier"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "classifierName"
          }
        }
      },
      "right": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "DataTypeProperty"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "name"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "PropertyModifier"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "propertyName"
          }
        }
      }
    }
  },
  {
    "name": "VariableReferenceHasParameter",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "variableReferences",
        "multiplicity": "0..*",
        "resultType": {
          "name": "VariableReference"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "parameter",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Parameter"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "VariableReference"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "parameterId"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "Parameter"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "id"
        }
      }
    }
  },
  {
    "name": "AssociationHasEnds",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "owningAssociation",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Association"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "associationEnds",
        "multiplicity": "0..*",
        "resultType": {
          "name": "AssociationEnd"
        },
        "associationEndModifiers": [
          {
            "keyword": "owned"
          }
        ],
        "orderBys": [
          {
            "thisMemberReferencePath": {
              "klass": {
                "name": "AssociationEnd"
              },
              "associationEnds": [],
              "dataTypeProperty": {
                "name": "direction"
              }
            },
            "orderByDirection": "ascending"
          }
        ]
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "Association"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "name"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "AssociationEnd"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "associationName"
        }
      }
    }
  },
  {
    "name": "ClassHasAssociationEnds",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "owningClass",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Klass"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "associationEnds",
        "multiplicity": "0..*",
        "resultType": {
          "name": "AssociationEnd"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "Klass"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "name"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "AssociationEnd"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "owningClassName"
        }
      }
    }
  },
  {
    "name": "AssociationEndHasResultType",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "associationEndsResultTypeOf",
        "multiplicity": "0..*",
        "resultType": {
          "name": "AssociationEnd"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "resultType",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Klass"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "AssociationEnd"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "resultTypeName"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "Klass"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "name"
        }
      }
    }
  },
  {
    "name": "AssociationEndHasModifiers",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "associationEnd",
        "multiplicity": "1..1",
        "resultType": {
          "name": "AssociationEnd"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "associationEndModifiers",
        "multiplicity": "0..*",
        "resultType": {
          "name": "AssociationEndModifier"
        },
        "associationEndModifiers": [
          {
            "keyword": "owned"
          }
        ],
        "orderBys": [
          {
            "thisMemberReferencePath": {
              "klass": {
                "name": "AssociationEndModifier"
              },
              "associationEnds": [],
              "dataTypeProperty": {
                "name": "ordinal"
              }
            },
            "orderByDirection": "ascending"
          }
        ]
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.AndCriteria",
      "left": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "AssociationEnd"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "owningClassName"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "AssociationEndModifier"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "owningClassName"
          }
        }
      },
      "right": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "AssociationEnd"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "name"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "AssociationEndModifier"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "associationEndName"
          }
        }
      }
    }
  },
  {
    "name": "AssociationHasCriteria",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "association",
        "multiplicity": "0..1",
        "resultType": {
          "name": "Association"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "criteria",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Criteria"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "Association"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "criteriaId"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "Criteria"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "id"
        }
      }
    }
  },
  {
    "name": "OperatorCriteriaHasSourceExpressionValue",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "operatorCriteriaSourceOf",
        "multiplicity": "0..1",
        "resultType": {
          "name": "OperatorCriteria"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "sourceExpressionValue",
        "multiplicity": "1..1",
        "resultType": {
          "name": "ExpressionValue"
        },
        "associationEndModifiers": [
          {
            "keyword": "owned"
          }
        ],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "OperatorCriteria"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "sourceExpressionId"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "ExpressionValue"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "id"
        }
      }
    }
  },
  {
    "name": "OperatorCriteriaHasTargetExpressionValue",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "operatorCriteriaTargetOf",
        "multiplicity": "0..1",
        "resultType": {
          "name": "OperatorCriteria"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "targetExpressionValue",
        "multiplicity": "1..1",
        "resultType": {
          "name": "ExpressionValue"
        },
        "associationEndModifiers": [
          {
            "keyword": "owned"
          }
        ],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "OperatorCriteria"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "targetExpressionId"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "ExpressionValue"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "id"
        }
      }
    }
  },
  {
    "name": "MemberReferencePathHasEdgePointCriteria",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "memberReferencePath",
        "multiplicity": "1..1",
        "resultType": {
          "name": "MemberReferencePath"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "edgePointCriteria",
        "multiplicity": "1..1",
        "resultType": {
          "name": "EdgePointCriteria"
        },
        "associationEndModifiers": [
          {
            "keyword": "owned"
          }
        ],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "MemberReferencePath"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "id"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "EdgePointCriteria"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "memberReferencePathId"
        }
      }
    }
  },
  {
    "name": "EnumerationParameterHasEnumeration",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "enumerationParameters",
        "multiplicity": "0..*",
        "resultType": {
          "name": "EnumerationParameter"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "enumeration",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Enumeration"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "EnumerationParameter"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "enumerationName"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "Enumeration"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "name"
        }
      }
    }
  },
  {
    "name": "MemberReferencePathHasClass",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "memberReferencePaths",
        "multiplicity": "0..*",
        "resultType": {
          "name": "MemberReferencePath"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "klass",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Klass"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "MemberReferencePath"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "className"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "Klass"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "name"
        }
      }
    }
  },
  {
    "name": "MemberReferencePathHasMemberReferencePathAssociationEndMapping",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "memberReferencePath",
        "multiplicity": "1..1",
        "resultType": {
          "name": "MemberReferencePath"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "associationEnds",
        "multiplicity": "0..*",
        "resultType": {
          "name": "MemberReferencePathAssociationEndMapping"
        },
        "associationEndModifiers": [
          {
            "keyword": "owned"
          }
        ],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "MemberReferencePath"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "id"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "MemberReferencePathAssociationEndMapping"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "memberReferencePathId"
        }
      }
    }
  },
  {
    "name": "MemberReferencePathAssociationEndMappingHasAssociationEnd",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "memberReferencePaths",
        "multiplicity": "0..*",
        "resultType": {
          "name": "MemberReferencePathAssociationEndMapping"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "associationEnd",
        "multiplicity": "1..1",
        "resultType": {
          "name": "AssociationEnd"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.AndCriteria",
      "left": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "MemberReferencePathAssociationEndMapping"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "associationOwningClassName"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "AssociationEnd"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "owningClassName"
          }
        }
      },
      "right": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "MemberReferencePathAssociationEndMapping"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "associationEndName"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "AssociationEnd"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "name"
          }
        }
      }
    }
  },
  {
    "name": "DataTypePropertyHasMemberReferencePaths",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "memberReferencePaths",
        "multiplicity": "0..*",
        "resultType": {
          "name": "MemberReferencePath"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "dataTypeProperty",
        "multiplicity": "1..1",
        "resultType": {
          "name": "DataTypeProperty"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.AndCriteria",
      "left": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "MemberReferencePath"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "propertyClassName"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "DataTypeProperty"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "classifierName"
          }
        }
      },
      "right": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "MemberReferencePath"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "propertyName"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "DataTypeProperty"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "name"
          }
        }
      }
    }
  },
  {
    "name": "BinaryCriteriaHasLeft",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "ownerOfLeftCriteria",
        "multiplicity": "0..1",
        "resultType": {
          "name": "BinaryCriteria"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "left",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Criteria"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "BinaryCriteria"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "leftId"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "Criteria"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "id"
        }
      }
    }
  },
  {
    "name": "BinaryCriteriaHasRight",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "ownerOfRightCriteria",
        "multiplicity": "0..1",
        "resultType": {
          "name": "BinaryCriteria"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "right",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Criteria"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "BinaryCriteria"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "rightId"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "Criteria"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "id"
        }
      }
    }
  },
  {
    "name": "ClassHasParameterizedProperties",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "owningClass",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Klass"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "parameterizedProperties",
        "multiplicity": "0..*",
        "resultType": {
          "name": "ParameterizedProperty"
        },
        "associationEndModifiers": [
          {
            "keyword": "owned"
          }
        ],
        "orderBys": [
          {
            "thisMemberReferencePath": {
              "klass": {
                "name": "ParameterizedProperty"
              },
              "associationEnds": [],
              "dataTypeProperty": {
                "name": "ordinal"
              }
            },
            "orderByDirection": "ascending"
          }
        ]
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "Klass"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "name"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "ParameterizedProperty"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "owningClassName"
        }
      }
    }
  },
  {
    "name": "AssociationEndHasOrderBy",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "associationEnd",
        "multiplicity": "1..1",
        "resultType": {
          "name": "AssociationEnd"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "orderBys",
        "multiplicity": "0..*",
        "resultType": {
          "name": "AssociationEndOrderBy"
        },
        "associationEndModifiers": [
          {
            "keyword": "owned"
          }
        ],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.AndCriteria",
      "left": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "AssociationEnd"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "owningClassName"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "AssociationEndOrderBy"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "associationEndClassName"
          }
        }
      },
      "right": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "AssociationEnd"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "name"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "AssociationEndOrderBy"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "associationEndName"
          }
        }
      }
    }
  },
  {
    "name": "AssociationEndOrderByHasMemberReferencePath",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "associationEndOrderBy",
        "multiplicity": "0..1",
        "resultType": {
          "name": "AssociationEndOrderBy"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "thisMemberReferencePath",
        "multiplicity": "1..1",
        "resultType": {
          "name": "ThisMemberReferencePath"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "AssociationEndOrderBy"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "thisMemberReferencePathId"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "ThisMemberReferencePath"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "id"
        }
      }
    }
  },
  {
    "name": "ParameterizedPropertyHasResultType",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "parameterizedPropertiesResultTypeOf",
        "multiplicity": "0..*",
        "resultType": {
          "name": "ParameterizedProperty"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "resultType",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Klass"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "ParameterizedProperty"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "resultTypeName"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "Klass"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "name"
        }
      }
    }
  },
  {
    "name": "ParameterizedPropertyHasOrdering",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "parameterizedProperty",
        "multiplicity": "1..1",
        "resultType": {
          "name": "ParameterizedProperty"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "parameterizedPropertyOrderings",
        "multiplicity": "0..*",
        "resultType": {
          "name": "ParameterizedPropertyOrdering"
        },
        "associationEndModifiers": [
          {
            "keyword": "owned"
          }
        ],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.AndCriteria",
      "left": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "ParameterizedProperty"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "owningClassName"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "ParameterizedPropertyOrdering"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "owningClassName"
          }
        }
      },
      "right": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "ParameterizedProperty"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "name"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "ParameterizedPropertyOrdering"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "name"
          }
        }
      }
    }
  },
  {
    "name": "ParameterizedPropertyHasParameters",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "parameterizedProperty",
        "multiplicity": "1..1",
        "resultType": {
          "name": "ParameterizedProperty"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "parameters",
        "multiplicity": "0..*",
        "resultType": {
          "name": "ParameterizedPropertyParameter"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.AndCriteria",
      "left": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "ParameterizedProperty"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "owningClassName"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "ParameterizedPropertyParameter"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "classifierName"
          }
        }
      },
      "right": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "ParameterizedProperty"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "name"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "ParameterizedPropertyParameter"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "parameterizedPropertyName"
          }
        }
      }
    }
  },
  {
    "name": "NamedProjectionHasRootProjection",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "namedProjection",
        "multiplicity": "1..1",
        "resultType": {
          "name": "NamedProjection"
        },
        "associationEndModifiers": [
          {
            "keyword": "owned"
          }
        ],
        "orderBys": []
      },
      {
        "name": "rootProjection",
        "multiplicity": "1..1",
        "resultType": {
          "name": "RootProjection"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "NamedProjection"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "projectionId"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "RootProjection"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "id"
        }
      }
    }
  },
  {
    "name": "ProjectionElementHasChildren",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "parent",
        "multiplicity": "0..1",
        "resultType": {
          "name": "ProjectionElement"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "children",
        "multiplicity": "0..*",
        "resultType": {
          "name": "ProjectionElement"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "ProjectionElement"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "id"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "ProjectionElement"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "parentId"
        }
      }
    }
  },
  {
    "name": "ProjectionWithAssociationEndHasAssociationEnd",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "projectionsWithAssociationEnd",
        "multiplicity": "0..*",
        "resultType": {
          "name": "ProjectionWithAssociationEnd"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "associationEnd",
        "multiplicity": "1..1",
        "resultType": {
          "name": "AssociationEnd"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.AndCriteria",
      "left": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "ProjectionWithAssociationEnd"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "associationEndClass"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "AssociationEnd"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "owningClassName"
          }
        }
      },
      "right": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "ProjectionWithAssociationEnd"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "associationEndName"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "AssociationEnd"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "name"
          }
        }
      }
    }
  },
  {
    "name": "ProjectionDataTypePropertyHasDataTypeProperty",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "projectionDataTypeProperties",
        "multiplicity": "0..*",
        "resultType": {
          "name": "ProjectionDataTypeProperty"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "dataTypeProperty",
        "multiplicity": "1..1",
        "resultType": {
          "name": "DataTypeProperty"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.AndCriteria",
      "left": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "ProjectionDataTypeProperty"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "propertyClassifierName"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "DataTypeProperty"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "classifierName"
          }
        }
      },
      "right": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "ProjectionDataTypeProperty"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "propertyName"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "DataTypeProperty"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "name"
          }
        }
      }
    }
  },
  {
    "name": "RootProjectionHasClass",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "projections",
        "multiplicity": "0..*",
        "resultType": {
          "name": "RootProjection"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "klass",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Klass"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "RootProjection"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "className"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "Klass"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "name"
        }
      }
    }
  },
  {
    "name": "ProjectionProjectionReferenceHasProjection",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "projectionProjectionReferences",
        "multiplicity": "0..*",
        "resultType": {
          "name": "ProjectionProjectionReference"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "projection",
        "multiplicity": "1..1",
        "resultType": {
          "name": "NamedProjection"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "ProjectionProjectionReference"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "projectionName"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "NamedProjection"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "name"
        }
      }
    }
  },
  {
    "name": "ServiceGroupHasClass",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "serviceGroup",
        "multiplicity": "0..1",
        "resultType": {
          "name": "ServiceGroup"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "owningClass",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Klass"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "ServiceGroup"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "name"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "Klass"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "name"
        }
      }
    }
  },
  {
    "name": "UrlHasUrlParameters",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "url",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Url"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "parameters",
        "multiplicity": "0..*",
        "resultType": {
          "name": "UrlParameter"
        },
        "associationEndModifiers": [
          {
            "keyword": "owned"
          }
        ],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.AndCriteria",
      "left": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "Url"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "className"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "UrlParameter"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "urlClassName"
          }
        }
      },
      "right": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "Url"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "url"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "UrlParameter"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "urlString"
          }
        }
      }
    }
  },
  {
    "name": "UrlParameterHasParameter",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "urlParameter",
        "multiplicity": "0..1",
        "resultType": {
          "name": "UrlParameter"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "parameter",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Parameter"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "UrlParameter"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "parameterId"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "Parameter"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "id"
        }
      }
    }
  },
  {
    "name": "ServiceGroupHasUrls",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "serviceGroup",
        "multiplicity": "1..1",
        "resultType": {
          "name": "ServiceGroup"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "urls",
        "multiplicity": "1..*",
        "resultType": {
          "name": "Url"
        },
        "associationEndModifiers": [
          {
            "keyword": "owned"
          }
        ],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "ServiceGroup"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "name"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "Url"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "className"
        }
      }
    }
  },
  {
    "name": "UrlHasServices",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "url",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Url"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "services",
        "multiplicity": "1..*",
        "resultType": {
          "name": "Service"
        },
        "associationEndModifiers": [
          {
            "keyword": "owned"
          }
        ],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.AndCriteria",
      "left": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "Url"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "className"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "Service"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "className"
          }
        }
      },
      "right": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "Url"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "url"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "Service"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "urlString"
          }
        }
      }
    }
  },
  {
    "name": "ServiceHasProjection",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "services",
        "multiplicity": "0..*",
        "resultType": {
          "name": "Service"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "projection",
        "multiplicity": "0..1",
        "resultType": {
          "name": "NamedProjection"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "Service"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "projectionName"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "NamedProjection"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "name"
        }
      }
    }
  },
  {
    "name": "ServiceHasQueryCriteria",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "queryService",
        "multiplicity": "0..1",
        "resultType": {
          "name": "Service"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "queryCriteria",
        "multiplicity": "0..1",
        "resultType": {
          "name": "Criteria"
        },
        "associationEndModifiers": [
          {
            "keyword": "owned"
          }
        ],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "Service"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "queryCriteriaId"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "Criteria"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "id"
        }
      }
    }
  },
  {
    "name": "ServiceHasAuthorizeCriteria",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "authorizeService",
        "multiplicity": "0..1",
        "resultType": {
          "name": "Service"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "authorizeCriteria",
        "multiplicity": "0..1",
        "resultType": {
          "name": "Criteria"
        },
        "associationEndModifiers": [
          {
            "keyword": "owned"
          }
        ],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "Service"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "authorizeCriteriaId"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "Criteria"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "id"
        }
      }
    }
  },
  {
    "name": "ServiceHasValidateCriteria",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "validateService",
        "multiplicity": "0..1",
        "resultType": {
          "name": "Service"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "validateCriteria",
        "multiplicity": "0..1",
        "resultType": {
          "name": "Criteria"
        },
        "associationEndModifiers": [
          {
            "keyword": "owned"
          }
        ],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "Service"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "validateCriteriaId"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "Criteria"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "id"
        }
      }
    }
  },
  {
    "name": "ServiceHasConflictCriteria",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "conflictService",
        "multiplicity": "0..1",
        "resultType": {
          "name": "Service"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "conflictCriteria",
        "multiplicity": "0..1",
        "resultType": {
          "name": "Criteria"
        },
        "associationEndModifiers": [
          {
            "keyword": "owned"
          }
        ],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "Service"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "conflictCriteriaId"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "Criteria"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "id"
        }
      }
    }
  },
  {
    "name": "ServiceHasOrderBy",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "service",
        "multiplicity": "1..1",
        "resultType": {
          "name": "Service"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "orderBys",
        "multiplicity": "0..*",
        "resultType": {
          "name": "ServiceOrderBy"
        },
        "associationEndModifiers": [
          {
            "keyword": "owned"
          }
        ],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.AndCriteria",
      "left": {
        "__typename": "klass.model.meta.domain.AndCriteria",
        "left": {
          "__typename": "klass.model.meta.domain.OperatorCriteria",
          "operator": "==",
          "sourceExpressionValue": {
            "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
            "klass": {
              "name": "Service"
            },
            "associationEnds": [],
            "dataTypeProperty": {
              "name": "className"
            }
          },
          "targetExpressionValue": {
            "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
            "klass": {
              "name": "ServiceOrderBy"
            },
            "associationEnds": [],
            "dataTypeProperty": {
              "name": "serviceClassName"
            }
          }
        },
        "right": {
          "__typename": "klass.model.meta.domain.OperatorCriteria",
          "operator": "==",
          "sourceExpressionValue": {
            "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
            "klass": {
              "name": "Service"
            },
            "associationEnds": [],
            "dataTypeProperty": {
              "name": "urlString"
            }
          },
          "targetExpressionValue": {
            "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
            "klass": {
              "name": "ServiceOrderBy"
            },
            "associationEnds": [],
            "dataTypeProperty": {
              "name": "serviceUrlString"
            }
          }
        }
      },
      "right": {
        "__typename": "klass.model.meta.domain.OperatorCriteria",
        "operator": "==",
        "sourceExpressionValue": {
          "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
          "klass": {
            "name": "Service"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "verb"
          }
        },
        "targetExpressionValue": {
          "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
          "klass": {
            "name": "ServiceOrderBy"
          },
          "associationEnds": [],
          "dataTypeProperty": {
            "name": "serviceVerb"
          }
        }
      }
    }
  },
  {
    "name": "ServiceOrderByHasMemberReferencePath",
    "packageName": "klass.model.meta.domain",
    "associationEnds": [
      {
        "name": "serviceOrderBy",
        "multiplicity": "0..1",
        "resultType": {
          "name": "ServiceOrderBy"
        },
        "associationEndModifiers": [],
        "orderBys": []
      },
      {
        "name": "thisMemberReferencePath",
        "multiplicity": "1..1",
        "resultType": {
          "name": "ThisMemberReferencePath"
        },
        "associationEndModifiers": [],
        "orderBys": []
      }
    ],
    "criteria": {
      "__typename": "klass.model.meta.domain.OperatorCriteria",
      "operator": "==",
      "sourceExpressionValue": {
        "__typename": "klass.model.meta.domain.ThisMemberReferencePath",
        "klass": {
          "name": "ServiceOrderBy"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "thisMemberReferencePathId"
        }
      },
      "targetExpressionValue": {
        "__typename": "klass.model.meta.domain.TypeMemberReferencePath",
        "klass": {
          "name": "ThisMemberReferencePath"
        },
        "associationEnds": [],
        "dataTypeProperty": {
          "name": "id"
        }
      }
    }
  }
]