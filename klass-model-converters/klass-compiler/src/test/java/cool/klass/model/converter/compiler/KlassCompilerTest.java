package cool.klass.model.converter.compiler;

import javax.annotation.Nonnull;

import cool.klass.model.converter.compiler.error.RootCompilerError;
import cool.klass.model.meta.domain.api.DomainModel;
import cool.klass.test.constants.KlassTestConstants;
import org.apache.commons.text.StringEscapeUtils;
import org.eclipse.collections.api.list.ImmutableList;
import org.eclipse.collections.impl.factory.Lists;
import org.junit.Ignore;
import org.junit.Test;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.CoreMatchers.nullValue;
import static org.junit.Assert.assertThat;

public class KlassCompilerTest
{
    @Test
    public void stackOverflow()
    {
        this.assertNoCompilerErrors(KlassTestConstants.STACK_OVERFLOW_SOURCE_CODE_TEXT);
    }

    @Test
    public void meta()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package klass.model.meta.domain\n"
                + "\n"
                + "interface Element\n"
                + "{\n"
                + "    inferred: Boolean;\n"
                + "    sourceCode: String;\n"
                + "    sourceCodeWithInference: String;\n"
                + "}\n"
                + "\n"
                + "interface NamedElement\n"
                + "    implements Element\n"
                + "{\n"
                + "    name: String;\n"
                + "    ordinal: Integer;\n"
                + "}\n"
                + "\n"
                + "interface PackageableElement\n"
                + "{\n"
                + "    packageName: String;\n"
                + "    // fullyQualifiedName: String = packageName + \".\" + name;\n"
                + "}\n"
                + "\n"
                + "class Classifier\n"
                + "    abstract\n"
                + "    implements PackageableElement\n"
                + "    transient\n"
                + "{\n"
                + "    name: String key;\n"
                + "    inferred: Boolean;\n"
                + "    packageName: String;\n"
                + "\n"
                + "    // TODO: Ordinals should have a syntax and be inferred using macros\n"
                + "    ordinal: Integer;\n"
                + "    sourceCode: String;\n"
                + "}\n"
                + "\n"
                + "// TODO: Error when transient extends non-transient\n"
                + "class Interface\n"
                + "    extends Classifier\n"
                + "    transient\n"
                + "{\n"
                + "}\n"
                + "\n"
                + "class ClassifierInterfaceMapping\n"
                + "{\n"
                + "    classifierName: String key private;\n"
                + "    interfaceName: String key private;\n"
                + "}\n"
                + "\n"
                + "association ClassifierHasClassifierInterfaceMapping\n"
                + "{\n"
                + "    subClassifier: Classifier[1..1];\n"
                + "    superInterfaces: ClassifierInterfaceMapping[0..*] owned;\n"
                + "\n"
                + "    relationship this.name == ClassifierInterfaceMapping.classifierName\n"
                + "}\n"
                + "\n"
                + "association ClassifierInterfaceMappingHasInterface\n"
                + "{\n"
                + "    superInterface: Interface[1..1];\n"
                + "    subClassifiers: ClassifierInterfaceMapping[0..*];\n"
                + "\n"
                + "    relationship this.name == ClassifierInterfaceMapping.interfaceName\n"
                + "}\n"
                + "\n"
                + "class Class\n"
                + "    extends Classifier\n"
                + "    transient\n"
                + "{\n"
                + "    superClassName: String? private;\n"
                + "}\n"
                + "\n"
                + "association ClassHasSuperClass\n"
                + "{\n"
                + "    subClasses: Class[0..*];\n"
                + "    superClass: Class[0..1];\n"
                + "\n"
                + "    relationship this.superClassName == Class.name\n"
                + "}\n"
                + "\n"
                + "enumeration PrimitiveType\n"
                + "{\n"
                + "    INTEGER(\"Integer\"),\n"
                + "    LONG(\"Long\"),\n"
                + "    DOUBLE(\"Double\"),\n"
                + "    FLOAT(\"Float\"),\n"
                + "    BOOLEAN(\"Boolean\"),\n"
                + "    STRING(\"String\"),\n"
                + "    INSTANT(\"Instant\"),\n"
                + "    LOCAL_DATE(\"LocalDate\"),\n"
                + "    TEMPORAL_INSTANT(\"TemporalInstant\"),\n"
                + "    TEMPORAL_RANGE(\"TemporalRange\"),\n"
                + "}\n"
                + "\n"
                + "enumeration Multiplicity\n"
                + "{\n"
                + "    ZERO_TO_ONE(\"0..1\"),\n"
                + "    ONE_TO_ONE(\"1..1\"),\n"
                + "    ZERO_TO_MANY(\"0..*\"),\n"
                + "    ONE_TO_MANY(\"1..*\"),\n"
                + "}\n"
                + "\n"
                + "class PrimitiveProperty\n"
                + "    transient\n"
                + "{\n"
                + "    className                     : String key;\n"
                + "    name                          : String key;\n"
                + "    inferred                      : Boolean;\n"
                + "    primitiveType                 : PrimitiveType;\n"
                + "    optional                      : Boolean;\n"
                + "    key                           : Boolean;\n"
                + "    id                            : Boolean;\n"
                + "    ordinal                       : Integer;\n"
                + "}\n"
                + "\n"
                + "association ClassHasPrimitiveTypeProperties\n"
                + "{\n"
                + "    owningClass: Class[1..1];\n"
                + "    primitiveProperties: PrimitiveProperty[0..*] owned\n"
                + "    // TODO: Change the orderBy syntax to orderBy(this.ordinal)\n"
                + "        orderBy: this.ordinal;\n"
                + "\n"
                + "    relationship this.name == PrimitiveProperty.className\n"
                + "}\n"
                + "\n"
                + "class Enumeration\n"
                + "    transient\n"
                + "{\n"
                + "    name                          : String key;\n"
                + "    inferred                      : Boolean;\n"
                + "    packageName                   : String private;\n"
                + "    ordinal                       : Integer;\n"
                + "    sourceCode                    : String;\n"
                + "}\n"
                + "\n"
                + "class EnumerationLiteral\n"
                + "    transient\n"
                + "{\n"
                + "    enumerationName               : String key;\n"
                + "    name                          : String key;\n"
                + "    inferred                      : Boolean;\n"
                + "    prettyName                    : String;\n"
                + "    ordinal                       : Integer;\n"
                + "}\n"
                + "\n"
                + "association EnumerationHasLiterals\n"
                + "{\n"
                + "    enumeration: Enumeration[1..1];\n"
                + "    enumerationLiterals: EnumerationLiteral[1..*]\n"
                + "        orderBy: this.ordinal;\n"
                + "\n"
                + "    relationship this.name == EnumerationLiteral.enumerationName\n"
                + "}\n"
                + "\n"
                + "class EnumerationProperty\n"
                + "    transient\n"
                + "{\n"
                + "    className                     : String key;\n"
                + "    name                          : String key;\n"
                + "    inferred                      : Boolean;\n"
                + "    enumerationName               : String private;\n"
                + "    optional                      : Boolean;\n"
                + "    key                           : Boolean;\n"
                + "    ordinal                       : Integer;\n"
                + "}\n"
                + "\n"
                + "association EnumerationPropertyHasEnumeration\n"
                + "{\n"
                + "    enumerationProperty: EnumerationProperty[0..*];\n"
                + "    enumeration: Enumeration[1..1];\n"
                + "\n"
                + "    relationship this.enumerationName == Enumeration.name\n"
                + "}\n"
                + "\n"
                + "association ClassHasEnumerationProperties\n"
                + "{\n"
                + "    owningClass: Class[1..1];\n"
                + "    enumerationProperties: EnumerationProperty[0..*]\n"
                + "        orderBy: this.ordinal;\n"
                + "\n"
                + "    relationship this.name == EnumerationProperty.className\n"
                + "}\n"
                + "\n"
                + "class PrimitivePropertyModifier\n"
                + "    transient\n"
                + "{\n"
                + "    className                     : String key;\n"
                + "    propertyName                  : String key;\n"
                + "    name                          : String key;\n"
                + "    inferred                      : Boolean;\n"
                + "    ordinal                       : Integer;\n"
                + "}\n"
                + "\n"
                + "class EnumerationPropertyModifier\n"
                + "    transient\n"
                + "{\n"
                + "    className                     : String key;\n"
                + "    propertyName                  : String key;\n"
                + "    name                          : String key;\n"
                + "    inferred                      : Boolean;\n"
                + "    ordinal                       : Integer;\n"
                + "}\n"
                + "\n"
                + "association PrimitivePropertyHasModifiers\n"
                + "{\n"
                + "    primitiveProperty: PrimitiveProperty[1..1];\n"
                + "    primitivePropertyModifiers: PrimitivePropertyModifier[0..*]\n"
                + "        orderBy: this.ordinal;\n"
                + "\n"
                + "    relationship this.className == PrimitivePropertyModifier.className\n"
                + "            && this.name == PrimitivePropertyModifier.propertyName\n"
                + "}\n"
                + "\n"
                + "association EnumerationPropertyHasModifiers\n"
                + "{\n"
                + "    enumerationProperty: EnumerationProperty[1..1];\n"
                + "    enumerationPropertyModifiers: EnumerationPropertyModifier[0..*]\n"
                + "        orderBy: this.ordinal;\n"
                + "\n"
                + "    relationship this.className == EnumerationPropertyModifier.className\n"
                + "            && this.name == EnumerationPropertyModifier.propertyName\n"
                + "}\n"
                + "\n"
                + "class ClassModifier\n"
                + "    transient\n"
                + "{\n"
                + "    className                     : String key;\n"
                + "    name                          : String key;\n"
                + "    inferred                      : Boolean;\n"
                + "    ordinal                       : Integer;\n"
                + "}\n"
                + "\n"
                + "association ClassHasModifiers\n"
                + "{\n"
                + "    owningClass: Class[1..1];\n"
                + "    classModifiers: ClassModifier[0..*]\n"
                + "        orderBy: this.ordinal;\n"
                + "\n"
                + "    relationship this.name == ClassModifier.className\n"
                + "}\n"
                + "\n"
                + "enumeration AssociationEndDirection\n"
                + "{\n"
                + "    SOURCE(\"source\"),\n"
                + "    TARGET(\"target\"),\n"
                + "}\n"
                + "\n"
                + "class Association\n"
                + "    transient\n"
                + "{\n"
                + "    name                          : String key;\n"
                + "    inferred                      : Boolean;\n"
                + "    packageName                   : String;\n"
                + "    ordinal                       : Integer;\n"
                + "    sourceCode                    : String;\n"
                + "\n"
                + "    source(): AssociationEnd[1..1]\n"
                + "    {\n"
                + "        this.name == AssociationEnd.associationName\n"
                + "            && AssociationEnd.direction == AssociationEndDirection.SOURCE\n"
                + "    }\n"
                + "\n"
                + "    target(): AssociationEnd[1..1]\n"
                + "    {\n"
                + "        this.name == AssociationEnd.associationName\n"
                + "            && AssociationEnd.direction == AssociationEndDirection.TARGET\n"
                + "    }\n"
                + "}\n"
                + "\n"
                + "class AssociationEnd\n"
                + "    transient\n"
                + "{\n"
                + "    owningClassName               : String key private;\n"
                + "    name                          : String key;\n"
                + "    inferred                      : Boolean;\n"
                + "    associationName               : String;\n"
                + "    direction                     : AssociationEndDirection;\n"
                + "    multiplicity                  : Multiplicity;\n"
                + "    resultTypeName                : String private;\n"
                + "    ordinal                       : Integer;\n"
                + "}\n"
                + "\n"
                + "// simplification, ideally we'd model an association as having exactly two ends\n"
                + "association AssociationHasEnds\n"
                + "{\n"
                + "    owningAssociation: Association[1..1];\n"
                + "    associationEnds: AssociationEnd[0..*]\n"
                + "        orderBy: this.direction;\n"
                + "\n"
                + "    relationship this.name == AssociationEnd.associationName\n"
                + "}\n"
                + "\n"
                + "association ClassHasAssociationEnds\n"
                + "{\n"
                + "    owningClass: Class[1..1];\n"
                + "    associationEnds: AssociationEnd[0..*];\n"
                + "    // TODO: Order by this.owningAssociation.ordinal\n"
                + "\n"
                + "    relationship this.name == AssociationEnd.owningClassName\n"
                + "}\n"
                + "\n"
                + "association AssociationEndHasResultType\n"
                + "{\n"
                + "    associationEndsResultTypeOf: AssociationEnd[0..*];\n"
                + "    resultType: Class[1..1];\n"
                + "\n"
                + "    relationship this.resultTypeName == Class.name\n"
                + "}\n"
                + "\n"
                + "class AssociationEndModifier\n"
                + "    transient\n"
                + "{\n"
                + "    owningClassName               : String key;\n"
                + "    associationEndName            : String key;\n"
                + "    name                          : String key;\n"
                + "    inferred                      : Boolean;\n"
                + "    ordinal                       : Integer;\n"
                + "}\n"
                + "\n"
                + "association AssociationEndHasModifiers\n"
                + "{\n"
                + "    associationEnd: AssociationEnd[1..1];\n"
                + "    associationEndModifiers: AssociationEndModifier[0..*]\n"
                + "        orderBy: this.ordinal;\n"
                + "\n"
                + "    relationship this.owningClassName == AssociationEndModifier.owningClassName\n"
                + "            && this.name == AssociationEndModifier.associationEndName\n"
                + "}\n"
                + "\n"
                + "class ParameterizedProperty\n"
                + "    transient\n"
                + "{\n"
                + "    owningClassName               : String key private;\n"
                + "    name                          : String key;\n"
                + "    inferred                      : Boolean;\n"
                + "    multiplicity                  : Multiplicity;\n"
                + "    resultTypeName                : String private;\n"
                + "    ordinal                       : Integer;\n"
                + "}\n"
                + "\n"
                + "association ClassHasParameterizedProperties\n"
                + "{\n"
                + "    owningClass: Class[1..1];\n"
                + "    parameterizedProperties: ParameterizedProperty[0..*] owned\n"
                + "        orderBy: this.ordinal;\n"
                + "\n"
                + "    relationship this.name == ParameterizedProperty.owningClassName\n"
                + "}\n"
                + "\n"
                + "association ParameterizedPropertyHasResultType\n"
                + "{\n"
                + "    parameterizedPropertiesResultTypeOf: ParameterizedProperty[0..*];\n"
                + "    resultType: Class[1..1];\n"
                + "\n"
                + "    relationship this.resultTypeName == Class.name\n"
                + "}\n"
                + "\n"
                + "class AssociationEndOrdering\n"
                + "    transient\n"
                + "{\n"
                + "    associationName               : String key private;\n"
                + "    name                          : String;\n"
                + "    inferred                      : Boolean;\n"
                + "    multiplicity                  : Multiplicity;\n"
                + "    direction                     : AssociationEndDirection key;\n"
                + "    orderingId                    : Long private;\n"
                + "}\n"
                + "\n"
                + "class ParameterizedPropertyOrdering\n"
                + "    transient\n"
                + "{\n"
                + "    owningClassName               : String private key;\n"
                + "    name                          : String key;\n"
                + "    inferred                      : Boolean;\n"
                + "    orderingId                    : Long private;\n"
                + "}\n"
                + "\n"
                + "association AssociationEndHasOrdering\n"
                + "{\n"
                + "    associationEnd: AssociationEnd[1..1];\n"
                + "    associationEndOrdering: AssociationEndOrdering[0..1] owned;\n"
                + "\n"
                + "    relationship this.associationName == AssociationEndOrdering.associationName\n"
                + "            && this.direction == AssociationEndOrdering.direction\n"
                + "}\n"
                + "\n"
                + "association ParameterizedPropertyHasOrdering\n"
                + "{\n"
                + "    parameterizedProperty: ParameterizedProperty[1..1];\n"
                + "    parameterizedPropertyOrdering: ParameterizedPropertyOrdering[0..*];\n"
                + "\n"
                + "    relationship this.owningClassName == ParameterizedPropertyOrdering.owningClassName\n"
                + "            && this.name == ParameterizedPropertyOrdering.name\n"
                + "}\n"
                + "\n"
                + "/*\n"
                + "association AssociationEndOrderingHasParts\n"
                + "{\n"
                + "    associationEndOrdering: AssociationEndOrdering[1..1];\n"
                + "    ordering: Ordering[1..*];\n"
                + "\n"
                + "    relationship this.orderingId == Ordering.id\n"
                + "}\n"
                + "\n"
                + "association ParameterizedPropertyOrderingHasParts\n"
                + "{\n"
                + "    parameterizedPropertyOrdering: ParameterizedPropertyOrdering[1..1] owned;\n"
                + "    ordering: Ordering[1..1];\n"
                + "\n"
                + "    // TODO: error when there's no \"this\"\n"
                + "    // relationship ParameterizedPropertyOrdering.orderingId == Ordering.id\n"
                + "    // TODO: error when the foreign key for a to-many is its entire primary key\n"
                + "    // relationship ParameterizedPropertyOrdering.orderingId == Ordering.id\n"
                + "    relationship this.orderingId == Ordering.id\n"
                + "}\n"
                + "\n"
                + "class Ordering\n"
                + "    transient\n"
                + "{\n"
                + "    id                            : Long id key;\n"
                + "    inferred                      : Boolean;\n"
                + "}\n"
                + "\n"
                + "// Split into data type / enum type order bys?\n"
                + "class OrderingPart\n"
                + "    transient\n"
                + "{\n"
                + "    orderingId                    : Long key;\n"
                + "    inferred                      : Boolean;\n"
                + "\n"
                + "    // TODO: order keyword for properties meant for sorting?\n"
                + "    ordinal                       : Integer key;\n"
                + "    className                     : String private;\n"
                + "    propertyName                  : String private;\n"
                + "    direction                     : OrderingDirection;\n"
                + "}\n"
                + "\n"
                + "association OrderingHasParts\n"
                + "{\n"
                + "    ordering: Ordering[1..1];\n"
                + "    orderingParts: OrderingPart[1..*]\n"
                + "        orderBy: this.ordinal;\n"
                + "\n"
                + "    relationship this.id == OrderingPart.orderingId\n"
                + "}\n"
                + "\n"
                + "enumeration OrderingDirection\n"
                + "{\n"
                + "    ASCENDING(\"ascending\"),\n"
                + "    DESCENDING(\"descending\"),\n"
                + "}\n"
                + "\n"
                + "association OrderingPartHasDataTypeProperty\n"
                + "{\n"
                + "    orderingParts: OrderingPart[0..*];\n"
                + "    dataTypeProperty: PrimitiveProperty[1..1];\n"
                + "\n"
                + "    relationship this.className == PrimitiveProperty.className\n"
                + "            && this.propertyName == PrimitiveProperty.name\n"
                + "}\n"
                + "\n"
                + "association OrderingPartHasEnumerationProperty\n"
                + "{\n"
                + "    orderingParts: OrderingPart[0..*];\n"
                + "    enumerationProperty: EnumerationProperty[1..1];\n"
                + "\n"
                + "    relationship this.className == EnumerationProperty.className\n"
                + "            && this.propertyName == EnumerationProperty.name\n"
                + "}\n"
                + "*/\n"
                + "\n"
                + "association ParameterizedPropertyHasParameters\n"
                + "{\n"
                + "    parameterizedProperty: ParameterizedProperty[1..1];\n"
                + "    parameters: ParameterizedPropertyParameter[0..*];\n"
                + "\n"
                + "    relationship this.owningClassName == ParameterizedPropertyParameter.parameterizedPropertyClassName\n"
                + "            && this.name == ParameterizedPropertyParameter.parameterizedPropertyName\n"
                + "}\n"
                + "\n"
                + "class ParameterizedPropertyParameter\n"
                + "    transient\n"
                + "{\n"
                + "    parameterizedPropertyClassName: String key private;\n"
                + "    parameterizedPropertyName     : String key;\n"
                + "    name                          : String;\n"
                + "    inferred                      : Boolean;\n"
                + "}\n"
                + "\n"
                + "/*\n"
                + "association ParameterizedPropertyHasCriteria\n"
                + "{\n"
                + "\n"
                + "}\n"
                + "*/\n"
                + "\n"
                + "enumeration ServiceMultiplicity\n"
                + "{\n"
                + "    ONE,\n"
                + "    MANY,\n"
                + "}\n"
                + "\n"
                + "enumeration Verb\n"
                + "{\n"
                + "    GET,\n"
                + "    POST,\n"
                + "    PUT,\n"
                + "    PATCH,\n"
                + "    DELETE,\n"
                + "}\n"
                + "\n"
                + "class Service\n"
                + "    transient\n"
                + "{\n"
                + "    className          : String key;\n"
                + "    urlString          : String key;\n"
                + "    verb               : Verb key;\n"
                + "    serviceMultiplicity: ServiceMultiplicity;\n"
                + "}\n"
                + "\n"
                + "class Url\n"
                + "    transient\n"
                + "{\n"
                + "    className          : String key;\n"
                + "    url                : String key;\n"
                + "}\n"
                + "\n"
                + "class ServiceGroup\n"
                + "    transient\n"
                + "{\n"
                + "    className          : String key;\n"
                + "}\n"
                + "\n"
                + "association ServiceGroupHasClass\n"
                + "{\n"
                + "    serviceGroup: ServiceGroup[0..1];\n"
                + "    owningClass: Class[1..1];\n"
                + "\n"
                + "    relationship this.className == Class.name\n"
                + "}\n"
                + "\n"
                + "association ServiceGroupHasUrls\n"
                + "{\n"
                + "    serviceGroup: ServiceGroup[1..1];\n"
                + "    urls: Url[1..*];\n"
                + "\n"
                + "    relationship this.className == Url.className\n"
                + "}\n"
                + "\n"
                + "association UrlHasServices\n"
                + "{\n"
                + "    url: Url[1..1];\n"
                + "    services: Service[1..*];\n"
                + "\n"
                + "    relationship this.className == Service.className && this.url == Service.urlString\n"
                + "}\n"
                + "\n"
                + "projection ClassReadProjection on Class\n"
                + "{\n"
                + "    name                 : \"Class name\",\n"
                + "    inferred             : \"Class inferred\",\n"
                + "    packageName          : \"Class package name\",\n"
                + "    ordinal              : \"Class ordinal\",\n"
                + "    sourceCode           : \"Class source code\",\n"
                + "    superClass           :\n"
                + "    {\n"
                + "        name       : \"Super Class name\",\n"
                + "        packageName: \"Super Class package name\",\n"
                + "    },\n"
                + "    // TODO: flat many-to-many, or parameterized property\n"
                + "    superInterfaces      :\n"
                + "    {\n"
                + "        superInterface:\n"
                + "        {\n"
                + "            name       : \"Class name\",\n"
                + "            packageName: \"Class package name\",\n"
                + "        },\n"
                + "    },\n"
                + "    classModifiers       :\n"
                + "    {\n"
                + "        name    : \"Class modifier name\",\n"
                + "        inferred: \"Class modifier inferred\",\n"
                + "        ordinal : \"Class modifier ordinal\",\n"
                + "    },\n"
                + "    primitiveProperties  :\n"
                + "    {\n"
                + "        name                      : \"Primitive property name\",\n"
                + "        inferred                  : \"Primitive property inferred\",\n"
                + "        primitiveType             : \"Primitive property type\",\n"
                + "        optional                  : \"Primitive property is optional\",\n"
                + "        key                       : \"Primitive property is key\",\n"
                + "        id                        : \"Primitive property is id\",\n"
                + "        ordinal                   : \"Primitive property ordinal\",\n"
                + "        primitivePropertyModifiers:\n"
                + "        {\n"
                + "            name    : \"Primitive property modifier name\",\n"
                + "            inferred: \"Primitive property modifier inferred\",\n"
                + "            ordinal : \"Primitive property modifier ordinal\",\n"
                + "        },\n"
                + "    },\n"
                + "    enumerationProperties:\n"
                + "    {\n"
                + "        name                        : \"Enumeration property name\",\n"
                + "        inferred                    : \"Enumeration property inferred\",\n"
                + "        optional                    : \"Enumeration property is optional\",\n"
                + "        key                         : \"Enumeration property is key\",\n"
                + "        ordinal                     : \"Enumeration property ordinal\",\n"
                + "        enumeration                 :\n"
                + "        {\n"
                + "            name    : \"Enumeration name\",\n"
                + "            inferred: \"Enumeration inferred\",\n"
                + "        },\n"
                + "        enumerationPropertyModifiers:\n"
                + "        {\n"
                + "            name    : \"Enumeration property modifier name\",\n"
                + "            inferred: \"Enumeration property inferred\",\n"
                + "            ordinal : \"Enumeration property modifier ordinal\",\n"
                + "        },\n"
                + "    },\n"
                + "    associationEnds      :\n"
                + "    {\n"
                + "        name                   : \"Association end name\",\n"
                + "        inferred               : \"Association end inferred\",\n"
                + "        direction              : \"Association end direction\",\n"
                + "        multiplicity           : \"Association end multiplicity\",\n"
                + "        resultType             :\n"
                + "        {\n"
                + "            name: \"Association end result type name\",\n"
                + "        },\n"
                + "        owningAssociation      :\n"
                + "        {\n"
                + "            name: \"Association end owning association name\",\n"
                + "        },\n"
                + "        associationEndModifiers:\n"
                + "        {\n"
                + "            name    : \"Association end modifier name\",\n"
                + "            inferred: \"Association end modifier inferred\",\n"
                + "            ordinal : \"Association end modifier ordinal\",\n"
                + "        },\n"
                + "    },\n"
                + "}\n"
                + "\n"
                + "service Class\n"
                + "{\n"
                + "    /api/meta/class/{className: String[1..1]}\n"
                + "        GET\n"
                + "        {\n"
                + "            multiplicity: one;\n"
                + "            criteria    : this.name == className;\n"
                + "            projection  : ClassReadProjection;\n"
                + "        }\n"
                + "    /api/meta/class\n"
                + "        GET\n"
                + "        {\n"
                + "            multiplicity: many;\n"
                + "            criteria    : all;\n"
                + "            projection  : ClassReadProjection;\n"
                + "        }\n"
                + "}\n"
                + "\n"
                + "projection AssociationReadProjection on Association\n"
                + "{\n"
                + "    name           : \"Association name\",\n"
                + "    inferred       : \"Association inferred\",\n"
                + "    packageName    : \"Association package name\",\n"
                + "    ordinal        : \"Association ordinal\",\n"
                + "    sourceCode     : \"Association source code\",\n"
                + "    associationEnds:\n"
                + "    {\n"
                + "        name        : \"Association end name\",\n"
                + "        inferred    : \"Association end inferred\",\n"
                + "        direction   : \"Association end direction\",\n"
                + "        multiplicity: \"Association end multiplicity\",\n"
                + "        ordinal     : \"Association end ordinal\",\n"
                + "        /*\n"
                + "        owningClass :\n"
                + "        {\n"
                + "            name       : \"Association end owning class name\",\n"
                + "            packageName: \"Association end owning class package name\",\n"
                + "        },\n"
                + "        */\n"
                + "        resultType  :\n"
                + "        {\n"
                + "            name       : \"Association end result class name\",\n"
                + "            packageName: \"Association end result class package name\",\n"
                + "        },\n"
                + "    },\n"
                + "}\n"
                + "\n"
                + "service Association\n"
                + "{\n"
                + "    /api/meta/association/{associationName: String[1..1]}\n"
                + "        GET\n"
                + "        {\n"
                + "            multiplicity: one;\n"
                + "            criteria    : this.name == associationName;\n"
                + "            projection  : AssociationReadProjection;\n"
                + "        }\n"
                + "    /api/meta/association\n"
                + "        GET\n"
                + "        {\n"
                + "            multiplicity: many;\n"
                + "            criteria    : all;\n"
                + "            projection  : AssociationReadProjection;\n"
                + "        }\n"
                + "}\n";
        //</editor-fold>

        this.assertNoCompilerErrors(sourceCodeText);
    }

    @Test
    public void doubleOwnedAssociation()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package dummy\n"
                + "\n"
                + "association DoubleOwnedAssociation\n"
                + "{\n"
                + "    source: DoubleOwnedClass[1..1] owned;\n"
                + "    target: DoubleOwnedClass[1..1] owned;\n"
                + "    \n"
                + "    relationship this.id == DoubleOwnedClass.id\n"
                + "}\n"
                + "\n"
                + "class DoubleOwnedClass\n"
                + "{\n"
                + "    id: Long key;\n"
                + "}\n";
        //</editor-fold>

        String error =
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_ASO_OWN\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mBoth associations are owned in association 'DoubleOwnedAssociation'. At most one end may be owned.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:5)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35massociation \u001B[40;97mDoubleOwnedAssociation\n"
                        + "\u001B[40;37m4\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m5\u2551     \u001B[40;97msource\u001B[40;36m: \u001B[40;97mDoubleOwnedClass\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m] \u001B[40;93mowned\u001B[40;36m;\n"
                        + "\u001B[40;37m \u2551                                    \u001B[40;91m^^^^^\n"
                        + "\u001B[40;37m6\u2551     \u001B[40;97mtarget\u001B[40;36m: \u001B[40;97mDoubleOwnedClass\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m] \u001B[40;93mowned\u001B[40;36m;\n"
                        + "\u001B[40;37m \u2551                                    \u001B[40;91m^^^^^\n"
                        + "\u001B[40;37m9\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:5\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m5\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m36\u001B[m\n";

        this.assertCompilerErrors(sourceCodeText, error);
    }

    @Test
    public void doubleVersionAssociation()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package dummy\n"
                + "\n"
                + "association DoubleVersionAssociation\n"
                + "{\n"
                + "    source: ExampleSource[1..1] version owned;\n"
                + "    target: ExampleTarget[1..1] version owned;\n"
                + "\n"
                + "    relationship this.id == ExampleTarget.id\n"
                + "}\n"
                + "\n"
                + "class ExampleSource\n"
                + "{\n"
                + "    id: Long key;\n"
                + "}\n"
                + "\n"
                + "class ExampleTarget\n"
                + "{\n"
                + "    id: Long key;\n"
                + "}\n";
        //</editor-fold>

        String[] errors = {
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_ASO_OWN\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mBoth associations are owned in association 'DoubleVersionAssociation'. At most one end may be owned.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:5)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35massociation \u001B[40;97mDoubleVersionAssociation\n"
                        + "\u001B[40;37m4\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m5\u2551     \u001B[40;97msource\u001B[40;36m: \u001B[40;97mExampleSource\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m] \u001B[40;33mversion \u001B[40;93mowned\u001B[40;36m;\n"
                        + "\u001B[40;37m \u2551                                         \u001B[40;91m^^^^^\n"
                        + "\u001B[40;37m6\u2551     \u001B[40;97mtarget\u001B[40;36m: \u001B[40;97mExampleTarget\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m] \u001B[40;33mversion \u001B[40;93mowned\u001B[40;36m;\n"
                        + "\u001B[40;37m \u2551                                         \u001B[40;91m^^^^^\n"
                        + "\u001B[40;37m9\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:5\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m5\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m41\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_VER_VER\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mClass 'ExampleSource' is a version and has a version.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:11)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m11\u2551 \u001B[40;35mclass \u001B[40;97mExampleSource\n"
                        + "\u001B[40;37m  \u2551       \u001B[40;91m^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:11\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m11\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m7\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_VER_VER\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mClass 'ExampleTarget' is a version and has a version.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:16)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m16\u2551 \u001B[40;35mclass \u001B[40;97mExampleTarget\n"
                        + "\u001B[40;37m  \u2551       \u001B[40;91m^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:16\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m16\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m7\u001B[m\n",
        };

        this.assertCompilerErrors(sourceCodeText, errors);
    }

    @Test
    public void symmetricalAssociation()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package dummy\n"
                + "\n"
                + "association DummyAssociation\n"
                + "{\n"
                + "    source: DummyClass[1..1];\n"
                + "    target: DummyClass[1..1];\n"
                + "    \n"
                + "    relationship this.id == DummyClass.id\n"
                + "}\n"
                + "\n"
                + "class DummyClass\n"
                + "{\n"
                + "    id: Long key;\n"
                + "}\n";
        //</editor-fold>

        String error = ""
                + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_ASO_SYM\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                + "\u001B[31mAssociation 'DummyAssociation' is perfectly symmetrical, so foreign keys cannot be inferred. To break the symmetry, make one end owned, or make one end required and the other end optional.\u001B[m\n"
                + "\n"
                + "Error at location. (example.klass:5)\n"
                + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                + "\u001B[40;37m3\u2551 \u001B[40;35massociation \u001B[40;97mDummyAssociation\n"
                + "\u001B[40;37m4\u2551 \u001B[40;36m{\n"
                + "\u001B[40;37m5\u2551     \u001B[40;97msource\u001B[40;36m: \u001B[40;97mDummyClass\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m;\n"
                + "\u001B[40;37m \u2551                       \u001B[40;91m^^^^^^\n"
                + "\u001B[40;37m6\u2551     \u001B[40;97mtarget\u001B[40;36m: \u001B[40;97mDummyClass\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m;\n"
                + "\u001B[40;37m \u2551                       \u001B[40;91m^^^^^^\n"
                + "\u001B[40;37m9\u2551 \u001B[40;36m}\n"
                + "\u001B[m\n"
                + "\u001B[36mLocation:  \u001B[mexample.klass:5\u001B[m\n"
                + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                + "\u001B[36mLine:      \u001B[m5\u001B[m\n"
                + "\u001B[36mCharacter: \u001B[m23\u001B[m\n";

        this.assertCompilerErrors(sourceCodeText, error);
    }

    @Test
    public void versionOwnsClass()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package example\n"
                + "\n"
                + "association ExampleAssociation\n"
                + "{\n"
                + "    source: ExampleClass[1..1] owned;\n"
                + "    target: ExampleVersion[1..1] version;\n"
                + "\n"
                + "    relationship this.id == ExampleVersion.id\n"
                + "}\n"
                + "\n"
                + "class ExampleClass\n"
                + "{\n"
                + "    id: Long key;\n"
                + "}\n"
                + "\n"
                + "class ExampleVersion\n"
                + "{\n"
                + "    id: Long key;\n"
                + "}\n";
        //</editor-fold>

        String error = ""
                + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_VER_OWN\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                + "\u001B[31mExpected version association end 'ExampleClass.target' to be owned.\u001B[m\n"
                + "\n"
                + "Error at location. (example.klass:6)\n"
                + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                + "\u001B[40;37m3\u2551 \u001B[40;35massociation \u001B[40;97mExampleAssociation\n"
                + "\u001B[40;37m4\u2551 \u001B[40;36m{\n"
                + "\u001B[40;37m6\u2551     \u001B[40;97mtarget\u001B[40;36m: \u001B[40;97mExampleVersion\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m] \u001B[40;33mversion\u001B[40;36m;\n"
                + "\u001B[40;37m \u2551     \u001B[40;91m^^^^^^\n"
                + "\u001B[40;37m9\u2551 \u001B[40;36m}\n"
                + "\u001B[m\n"
                + "\u001B[36mLocation:  \u001B[mexample.klass:6\u001B[m\n"
                + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                + "\u001B[36mLine:      \u001B[m6\u001B[m\n"
                + "\u001B[36mCharacter: \u001B[m5\u001B[m\n";

        this.assertCompilerErrors(sourceCodeText, error);
    }

    @Test
    public void unownedVersion()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package example\n"
                + "\n"
                + "association ExampleAssociation\n"
                + "{\n"
                + "    source: ExampleClass[1..1];\n"
                + "    target: ExampleVersion[0..1] version;\n"
                + "\n"
                + "    relationship this.id == ExampleVersion.id\n"
                + "}\n"
                + "\n"
                + "class ExampleClass\n"
                + "{\n"
                + "    id: Long key;\n"
                + "}\n"
                + "\n"
                + "class ExampleVersion\n"
                + "{\n"
                + "    id: Long key;\n"
                + "}\n";
        //</editor-fold>

        String error = ""
                + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_VER_OWN\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                + "\u001B[31mExpected version association end 'ExampleClass.target' to be owned.\u001B[m\n"
                + "\n"
                + "Error at location. (example.klass:6)\n"
                + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                + "\u001B[40;37m3\u2551 \u001B[40;35massociation \u001B[40;97mExampleAssociation\n"
                + "\u001B[40;37m4\u2551 \u001B[40;36m{\n"
                + "\u001B[40;37m6\u2551     \u001B[40;97mtarget\u001B[40;36m: \u001B[40;97mExampleVersion\u001B[40;36m[\u001B[40;94m0\u001B[40;36m..\u001B[40;94m1\u001B[40;36m] \u001B[40;33mversion\u001B[40;36m;\n"
                + "\u001B[40;37m \u2551     \u001B[40;91m^^^^^^\n"
                + "\u001B[40;37m9\u2551 \u001B[40;36m}\n"
                + "\u001B[m\n"
                + "\u001B[36mLocation:  \u001B[mexample.klass:6\u001B[m\n"
                + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                + "\u001B[36mLine:      \u001B[m6\u001B[m\n"
                + "\u001B[36mCharacter: \u001B[m5\u001B[m\n";

        this.assertCompilerErrors(sourceCodeText, error);
    }

    @Test
    public void duplicateNames()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package dummy\n"
                + "\n"
                + "enumeration DuplicateTopLevelElement\n"
                + "{\n"
                + "    DUPLICATE_ENUM_LITERAL(\"Duplicate pretty name\"),\n"
                + "    DUPLICATE_ENUM_LITERAL(\"Duplicate pretty name\"),\n"
                + "}\n"
                + "\n"
                + "interface DuplicateTopLevelElement\n"
                + "{\n"
                + "    duplicateMember: String key;\n"
                + "    duplicateMember: DuplicateTopLevelElement;\n"
                + "}\n"
                + "\n"
                + "class DuplicateTopLevelElement\n"
                + "{\n"
                + "    duplicateMember: String key;\n"
                + "    duplicateMember: DuplicateTopLevelElement;\n"
                + "\n"
                + "    duplicateMember(duplicateParameter: String[1..1], duplicateParameter: String[1..1]): DuplicateTopLevelElement[1..1]\n"
                + "    {\n"
                + "        this.duplicateMember == duplicateParameter\n"
                + "    }\n"
                + "}\n"
                + "\n"
                + "association DuplicateTopLevelElement\n"
                + "{\n"
                + "    duplicateMember: DuplicateTopLevelElement[1..1];\n"
                + "    duplicateMember: DuplicateTopLevelElement[0..1];\n"
                + "}\n"
                + "\n"
                + "association DuplicateAssociationEnd\n"
                + "{\n"
                + "    duplicateAssociationEnd: DuplicateTopLevelElement[1..1];\n"
                + "    duplicateAssociationEnd: DuplicateTopLevelElement[0..1];\n"
                + "}\n"
                + "\n"
                + "projection DuplicateTopLevelElement on DuplicateTopLevelElement\n"
                + "{\n"
                + "    duplicateMember: \"Duplicate Header\",\n"
                + "    duplicateMember: \"Duplicate Header\",\n"
                + "}\n"
                + "\n"
                + "service DuplicateTopLevelElement\n"
                + "{\n"
                + "    /api/duplicate/duplicate/{duplicate: String[1..1]}/{duplicate: String[1..1]}\n"
                + "        GET\n"
                + "        {\n"
                + "            projection  : DuplicateTopLevelElement;\n"
                + "        }\n"
                + "    /api/duplicate/duplicate/{different: String[1..1]}/{duplicate: String[1..1]}\n"
                + "        GET\n"
                + "        {\n"
                + "            projection  : DuplicateTopLevelElement;\n"
                + "        }\n"
                + "}";
        //</editor-fold>

        // TODO: sort compiler errors by source file name, line number
        // TODO: Duplicate duplicate errors
        // TODO: More error codes?

        String[] errors = {
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_TOP\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate top level item name: 'DuplicateTopLevelElement'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:3)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35menumeration \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m \u2551             \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:3\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m3\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m13\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_ENM\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate enumeration literal: 'DUPLICATE_ENUM_LITERAL'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:5)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35menumeration \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m4\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m5\u2551     \u001B[40;97mDUPLICATE_ENUM_LITERAL\u001B[40;36m(\u001B[40;94m\"Duplicate pretty name\"\u001B[40;36m)\u001B[40;36m,\n"
                        + "\u001B[40;37m \u2551     \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m7\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:5\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m5\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_LIT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate enumeration pretty name: 'Duplicate pretty name'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:5)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35menumeration \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m4\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m5\u2551     \u001B[40;97mDUPLICATE_ENUM_LITERAL\u001B[40;36m(\u001B[40;94m\"Duplicate pretty name\"\u001B[40;36m)\u001B[40;36m,\n"
                        + "\u001B[40;37m \u2551                            \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m7\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:5\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m5\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m28\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_ENM\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate enumeration literal: 'DUPLICATE_ENUM_LITERAL'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:6)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35menumeration \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m4\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m6\u2551     \u001B[40;97mDUPLICATE_ENUM_LITERAL\u001B[40;36m(\u001B[40;94m\"Duplicate pretty name\"\u001B[40;36m)\u001B[40;36m,\n"
                        + "\u001B[40;37m \u2551     \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m7\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:6\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m6\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_LIT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate enumeration pretty name: 'Duplicate pretty name'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:6)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35menumeration \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m4\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m6\u2551     \u001B[40;97mDUPLICATE_ENUM_LITERAL\u001B[40;36m(\u001B[40;94m\"Duplicate pretty name\"\u001B[40;36m)\u001B[40;36m,\n"
                        + "\u001B[40;37m \u2551                            \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m7\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:6\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m6\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m28\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_TOP\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate top level item name: 'DuplicateTopLevelElement'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:9)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m9\u2551 \u001B[40;35minterface \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m \u2551           \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:9\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m9\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m11\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_PRP\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate member: 'DuplicateTopLevelElement.duplicateMember'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:11)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m 9\u2551 \u001B[40;35minterface \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m10\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m11\u2551     \u001B[40;97mduplicateMember\u001B[40;36m: \u001B[40;95mString \u001B[40;33mkey\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551     \u001B[40;91m^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m13\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:11\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m11\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_PRP\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate member: 'DuplicateTopLevelElement.duplicateMember'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:12)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m 9\u2551 \u001B[40;35minterface \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m10\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m12\u2551     \u001B[40;97mduplicateMember\u001B[40;36m: \u001B[40;97mDuplicateTopLevelElement\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551     \u001B[40;91m^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m13\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:12\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m12\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_TOP\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate top level item name: 'DuplicateTopLevelElement'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:15)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m15\u2551 \u001B[40;35mclass \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m  \u2551       \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:15\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m15\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m7\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_PRP\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate member: 'DuplicateTopLevelElement.duplicateMember'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:17)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m15\u2551 \u001B[40;35mclass \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m16\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m17\u2551     \u001B[40;97mduplicateMember\u001B[40;36m: \u001B[40;95mString \u001B[40;33mkey\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551     \u001B[40;91m^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m24\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:17\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m17\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_PRP\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate member: 'DuplicateTopLevelElement.duplicateMember'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:18)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m15\u2551 \u001B[40;35mclass \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m16\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m18\u2551     \u001B[40;97mduplicateMember\u001B[40;36m: \u001B[40;97mDuplicateTopLevelElement\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551     \u001B[40;91m^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m24\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:18\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m18\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_PRP\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate member: 'DuplicateTopLevelElement.duplicateMember'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:20)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m15\u2551 \u001B[40;35mclass \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m16\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m20\u2551     \u001B[40;97mduplicateMember\u001B[40;36m(\u001B[40;97mduplicateParameter\u001B[40;36m: \u001B[40;95mString\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m, \u001B[40;97mduplicateParameter\u001B[40;36m: \u001B[40;95mString\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m)\u001B[40;36m: \u001B[40;97mDuplicateTopLevelElement\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\n"
                        + "\u001B[40;37m  \u2551     \u001B[40;91m^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m24\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:20\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m20\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_TOP\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate top level item name: 'DuplicateTopLevelElement'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:26)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m26\u2551 \u001B[40;35massociation \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m  \u2551             \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:26\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m26\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m13\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_REL_INF\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mRelationship inference not yet supported. 'DuplicateTopLevelElement' must declare a relationship.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:26)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m26\u2551 \u001B[40;35massociation \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m  \u2551             \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:26\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m26\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m13\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_PRP\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate member: 'DuplicateTopLevelElement.duplicateMember'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:28)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m26\u2551 \u001B[40;35massociation \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m27\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m28\u2551     \u001B[40;97mduplicateMember\u001B[40;36m: \u001B[40;97mDuplicateTopLevelElement\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551     \u001B[40;91m^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m30\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:28\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m28\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_PRP\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate member: 'DuplicateTopLevelElement.duplicateMember'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:29)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m26\u2551 \u001B[40;35massociation \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m27\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m29\u2551     \u001B[40;97mduplicateMember\u001B[40;36m: \u001B[40;97mDuplicateTopLevelElement\u001B[40;36m[\u001B[40;94m0\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551     \u001B[40;91m^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m30\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:29\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m29\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_REL_INF\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mRelationship inference not yet supported. 'DuplicateAssociationEnd' must declare a relationship.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:32)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m32\u2551 \u001B[40;35massociation \u001B[40;97mDuplicateAssociationEnd\n"
                        + "\u001B[40;37m  \u2551             \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:32\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m32\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m13\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_PRP\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate member: 'DuplicateTopLevelElement.duplicateAssociationEnd'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:34)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m32\u2551 \u001B[40;35massociation \u001B[40;97mDuplicateAssociationEnd\n"
                        + "\u001B[40;37m33\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m34\u2551     \u001B[40;97mduplicateAssociationEnd\u001B[40;36m: \u001B[40;97mDuplicateTopLevelElement\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551     \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m36\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:34\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m34\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_PRP\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate member: 'DuplicateTopLevelElement.duplicateAssociationEnd'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:35)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m32\u2551 \u001B[40;35massociation \u001B[40;97mDuplicateAssociationEnd\n"
                        + "\u001B[40;37m33\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m35\u2551     \u001B[40;97mduplicateAssociationEnd\u001B[40;36m: \u001B[40;97mDuplicateTopLevelElement\u001B[40;36m[\u001B[40;94m0\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551     \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m36\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:35\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m35\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_TOP\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate top level item name: 'DuplicateTopLevelElement'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:38)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m38\u2551 \u001B[40;35mprojection \u001B[40;97mDuplicateTopLevelElement \u001B[40;95mon \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m  \u2551            \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:38\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m38\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m12\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_PRJ\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate member: 'duplicateMember'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:40)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m38\u2551 \u001B[40;35mprojection \u001B[40;97mDuplicateTopLevelElement \u001B[40;95mon \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m39\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m40\u2551     \u001B[40;97mduplicateMember\u001B[40;36m: \u001B[40;94m\"Duplicate Header\"\u001B[40;36m,\n"
                        + "\u001B[40;37m  \u2551     \u001B[40;91m^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m42\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:40\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m40\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_PRJ\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate member: 'duplicateMember'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:41)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m38\u2551 \u001B[40;35mprojection \u001B[40;97mDuplicateTopLevelElement \u001B[40;95mon \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m39\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m41\u2551     \u001B[40;97mduplicateMember\u001B[40;36m: \u001B[40;94m\"Duplicate Header\"\u001B[40;36m,\n"
                        + "\u001B[40;37m  \u2551     \u001B[40;91m^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m42\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:41\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m41\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_TOP\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate top level item name: 'DuplicateTopLevelElement'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:44)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m44\u2551 \u001B[40;35mservice \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m  \u2551         \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:44\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m44\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m9\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_PAR\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate parameter: 'duplicate'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:46)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m44\u2551 \u001B[40;35mservice \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m45\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m46\u2551     \u001B[40;36m/\u001B[40;97mapi\u001B[40;36m/\u001B[40;97mduplicate\u001B[40;36m/\u001B[40;97mduplicate\u001B[40;36m/\u001B[40;36m{\u001B[40;97mduplicate\u001B[40;36m: \u001B[40;95mString\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m}\u001B[40;36m/\u001B[40;36m{\u001B[40;97mduplicate\u001B[40;36m: \u001B[40;95mString\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m}\n"
                        + "\u001B[40;37m  \u2551                               \u001B[40;91m^^^^^^^^^\n"
                        + "\u001B[40;37m56\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:46\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m46\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m31\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_PAR\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate parameter: 'duplicate'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:46)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m44\u2551 \u001B[40;35mservice \u001B[40;97mDuplicateTopLevelElement\n"
                        + "\u001B[40;37m45\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m46\u2551     \u001B[40;36m/\u001B[40;97mapi\u001B[40;36m/\u001B[40;97mduplicate\u001B[40;36m/\u001B[40;97mduplicate\u001B[40;36m/\u001B[40;36m{\u001B[40;97mduplicate\u001B[40;36m: \u001B[40;95mString\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m}\u001B[40;36m/\u001B[40;36m{\u001B[40;97mduplicate\u001B[40;36m: \u001B[40;95mString\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m}\n"
                        + "\u001B[40;37m  \u2551                                                         \u001B[40;91m^^^^^^^^^\n"
                        + "\u001B[40;37m56\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:46\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m46\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m57\u001B[m\n",
        };

        this.assertCompilerErrors(sourceCodeText, errors);
    }

    @Test
    public void duplicateModifier()
    {
        //language=Klass
        String sourceCodeText = ""
                + "package dummy\n"
                + "\n"
                + "class Dummy\n"
                + "{\n"
                + "    id: Long id key key;\n"
                + "}\n";

        String[] errors = {
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_DUP_MOD\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mDuplicate modifier 'key'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:5)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35mclass \u001B[40;97mDummy\n"
                        + "\u001B[40;37m4\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m5\u2551     \u001B[40;33mid\u001B[40;36m: \u001B[40;95mLong \u001B[40;33mid \u001B[40;33mkey \u001B[40;33mkey\u001B[40;36m;\n"
                        + "\u001B[40;37m \u2551                 \u001B[40;91m^^^\n"
                        + "\u001B[40;37m6\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:5\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m5\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m17\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_DUP_MOD\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mDuplicate modifier 'key'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:5)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35mclass \u001B[40;97mDummy\n"
                        + "\u001B[40;37m4\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m5\u2551     \u001B[40;33mid\u001B[40;36m: \u001B[40;95mLong \u001B[40;33mid \u001B[40;33mkey \u001B[40;33mkey\u001B[40;36m;\n"
                        + "\u001B[40;37m \u2551                     \u001B[40;91m^^^\n"
                        + "\u001B[40;37m6\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:5\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m5\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m21\u001B[m\n",
        };

        this.assertCompilerErrors(sourceCodeText, errors);
    }

    @Test
    public void duplicateValidation()
    {
        //language=Klass
        String sourceCodeText = ""
                + "package dummy\n"
                + "\n"
                + "enumeration DummyEnumeration\n"
                + "{\n"
                + "    EXAMPLE,\n"
                + "}\n"
                + "\n"
                + "class DummyClass\n"
                + "{\n"
                + "    id: Long id key;\n"
                + "    number: Long minimum(1) min(1) maximum(10) max(10);\n"
                + "    string: String minimumLength(1) minLength(1) maximumLength(10) maxLength(10);\n"
                + "    enumeration: DummyEnumeration minimumLength(1) minLength(1) maximumLength(10) maxLength(10);\n"
                + "}\n";

        String[] errors = {
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_VAL\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate validation 'minimum(1)'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:11)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m 8\u2551 \u001B[40;35mclass \u001B[40;97mDummyClass\n"
                        + "\u001B[40;37m 9\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m11\u2551     \u001B[40;97mnumber\u001B[40;36m: \u001B[40;95mLong \u001B[40;33mminimum\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mmin\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mmaximum\u001B[40;36m(\u001B[40;94m10\u001B[40;36m) \u001B[40;33mmax\u001B[40;36m(\u001B[40;94m10\u001B[40;36m)\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551                  \u001B[40;91m^^^^^^^\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:11\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m11\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m18\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_VAL\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate validation 'min(1)'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:11)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m 8\u2551 \u001B[40;35mclass \u001B[40;97mDummyClass\n"
                        + "\u001B[40;37m 9\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m11\u2551     \u001B[40;97mnumber\u001B[40;36m: \u001B[40;95mLong \u001B[40;33mminimum\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mmin\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mmaximum\u001B[40;36m(\u001B[40;94m10\u001B[40;36m) \u001B[40;33mmax\u001B[40;36m(\u001B[40;94m10\u001B[40;36m)\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551                             \u001B[40;91m^^^\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:11\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m11\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m29\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_VAL\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate validation 'maximum(10)'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:11)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m 8\u2551 \u001B[40;35mclass \u001B[40;97mDummyClass\n"
                        + "\u001B[40;37m 9\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m11\u2551     \u001B[40;97mnumber\u001B[40;36m: \u001B[40;95mLong \u001B[40;33mminimum\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mmin\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mmaximum\u001B[40;36m(\u001B[40;94m10\u001B[40;36m) \u001B[40;33mmax\u001B[40;36m(\u001B[40;94m10\u001B[40;36m)\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551                                    \u001B[40;91m^^^^^^^\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:11\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m11\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m36\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_VAL\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate validation 'max(10)'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:11)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m 8\u2551 \u001B[40;35mclass \u001B[40;97mDummyClass\n"
                        + "\u001B[40;37m 9\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m11\u2551     \u001B[40;97mnumber\u001B[40;36m: \u001B[40;95mLong \u001B[40;33mminimum\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mmin\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mmaximum\u001B[40;36m(\u001B[40;94m10\u001B[40;36m) \u001B[40;33mmax\u001B[40;36m(\u001B[40;94m10\u001B[40;36m)\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551                                                \u001B[40;91m^^^\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:11\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m11\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m48\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_VAL\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate validation 'minimumLength(1)'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:12)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m 8\u2551 \u001B[40;35mclass \u001B[40;97mDummyClass\n"
                        + "\u001B[40;37m 9\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m12\u2551     \u001B[40;97mstring\u001B[40;36m: \u001B[40;95mString \u001B[40;33mminimumLength\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mminLength\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mmaximumLength\u001B[40;36m(\u001B[40;94m10\u001B[40;36m) \u001B[40;33mmaxLength\u001B[40;36m(\u001B[40;94m10\u001B[40;36m)\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551                    \u001B[40;91m^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:12\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m12\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m20\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_VAL\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate validation 'minLength(1)'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:12)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m 8\u2551 \u001B[40;35mclass \u001B[40;97mDummyClass\n"
                        + "\u001B[40;37m 9\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m12\u2551     \u001B[40;97mstring\u001B[40;36m: \u001B[40;95mString \u001B[40;33mminimumLength\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mminLength\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mmaximumLength\u001B[40;36m(\u001B[40;94m10\u001B[40;36m) \u001B[40;33mmaxLength\u001B[40;36m(\u001B[40;94m10\u001B[40;36m)\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551                                     \u001B[40;91m^^^^^^^^^\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:12\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m12\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m37\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_VAL\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate validation 'maximumLength(10)'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:12)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m 8\u2551 \u001B[40;35mclass \u001B[40;97mDummyClass\n"
                        + "\u001B[40;37m 9\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m12\u2551     \u001B[40;97mstring\u001B[40;36m: \u001B[40;95mString \u001B[40;33mminimumLength\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mminLength\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mmaximumLength\u001B[40;36m(\u001B[40;94m10\u001B[40;36m) \u001B[40;33mmaxLength\u001B[40;36m(\u001B[40;94m10\u001B[40;36m)\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551                                                  \u001B[40;91m^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:12\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m12\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m50\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_VAL\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate validation 'maxLength(10)'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:12)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m 8\u2551 \u001B[40;35mclass \u001B[40;97mDummyClass\n"
                        + "\u001B[40;37m 9\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m12\u2551     \u001B[40;97mstring\u001B[40;36m: \u001B[40;95mString \u001B[40;33mminimumLength\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mminLength\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mmaximumLength\u001B[40;36m(\u001B[40;94m10\u001B[40;36m) \u001B[40;33mmaxLength\u001B[40;36m(\u001B[40;94m10\u001B[40;36m)\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551                                                                    \u001B[40;91m^^^^^^^^^\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:12\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m12\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m68\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_VAL\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate validation 'minimumLength(1)'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:13)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m 8\u2551 \u001B[40;35mclass \u001B[40;97mDummyClass\n"
                        + "\u001B[40;37m 9\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m13\u2551     \u001B[40;35menumeration\u001B[40;36m: \u001B[40;97mDummyEnumeration \u001B[40;33mminimumLength\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mminLength\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mmaximumLength\u001B[40;36m(\u001B[40;94m10\u001B[40;36m) \u001B[40;33mmaxLength\u001B[40;36m(\u001B[40;94m10\u001B[40;36m)\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551                                   \u001B[40;91m^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:13\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m13\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m35\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_VAL\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate validation 'minLength(1)'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:13)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m 8\u2551 \u001B[40;35mclass \u001B[40;97mDummyClass\n"
                        + "\u001B[40;37m 9\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m13\u2551     \u001B[40;35menumeration\u001B[40;36m: \u001B[40;97mDummyEnumeration \u001B[40;33mminimumLength\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mminLength\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mmaximumLength\u001B[40;36m(\u001B[40;94m10\u001B[40;36m) \u001B[40;33mmaxLength\u001B[40;36m(\u001B[40;94m10\u001B[40;36m)\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551                                                    \u001B[40;91m^^^^^^^^^\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:13\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m13\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m52\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_VAL\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate validation 'maximumLength(10)'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:13)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m 8\u2551 \u001B[40;35mclass \u001B[40;97mDummyClass\n"
                        + "\u001B[40;37m 9\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m13\u2551     \u001B[40;35menumeration\u001B[40;36m: \u001B[40;97mDummyEnumeration \u001B[40;33mminimumLength\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mminLength\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mmaximumLength\u001B[40;36m(\u001B[40;94m10\u001B[40;36m) \u001B[40;33mmaxLength\u001B[40;36m(\u001B[40;94m10\u001B[40;36m)\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551                                                                 \u001B[40;91m^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:13\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m13\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m65\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_VAL\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate validation 'maxLength(10)'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:13)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m 8\u2551 \u001B[40;35mclass \u001B[40;97mDummyClass\n"
                        + "\u001B[40;37m 9\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m13\u2551     \u001B[40;35menumeration\u001B[40;36m: \u001B[40;97mDummyEnumeration \u001B[40;33mminimumLength\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mminLength\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mmaximumLength\u001B[40;36m(\u001B[40;94m10\u001B[40;36m) \u001B[40;33mmaxLength\u001B[40;36m(\u001B[40;94m10\u001B[40;36m)\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551                                                                                   \u001B[40;91m^^^^^^^^^\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:13\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m13\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m83\u001B[m\n",
        };
        this.assertCompilerErrors(sourceCodeText, errors);
    }

    @Test
    public void invalidValidation()
    {
        //language=Klass
        String sourceCodeText = "package dummy\n"
                + "\n"
                + "class Dummy\n"
                + "{\n"
                + "    id: Long id key;\n"
                + "    number: Long minLength(1) maxLength(10);\n"
                + "    string: String min(1) max(10);\n"
                + "}\n";

        String[] errors = {
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_VLD_TYP\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mInvalid validation 'minLength(1)' for type Long.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:6)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35mclass \u001B[40;97mDummy\n"
                        + "\u001B[40;37m4\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m6\u2551     \u001B[40;97mnumber\u001B[40;36m: \u001B[40;95mLong \u001B[40;33mminLength\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mmaxLength\u001B[40;36m(\u001B[40;94m10\u001B[40;36m)\u001B[40;36m;\n"
                        + "\u001B[40;37m \u2551                  \u001B[40;91m^^^^^^^^^\n"
                        + "\u001B[40;37m8\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:6\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m6\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m18\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_VLD_TYP\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mInvalid validation 'maxLength(10)' for type Long.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:6)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35mclass \u001B[40;97mDummy\n"
                        + "\u001B[40;37m4\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m6\u2551     \u001B[40;97mnumber\u001B[40;36m: \u001B[40;95mLong \u001B[40;33mminLength\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mmaxLength\u001B[40;36m(\u001B[40;94m10\u001B[40;36m)\u001B[40;36m;\n"
                        + "\u001B[40;37m \u2551                               \u001B[40;91m^^^^^^^^^\n"
                        + "\u001B[40;37m8\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:6\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m6\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m31\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_VLD_TYP\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mInvalid validation 'min(1)' for type String.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:7)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35mclass \u001B[40;97mDummy\n"
                        + "\u001B[40;37m4\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m7\u2551     \u001B[40;97mstring\u001B[40;36m: \u001B[40;95mString \u001B[40;33mmin\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mmax\u001B[40;36m(\u001B[40;94m10\u001B[40;36m)\u001B[40;36m;\n"
                        + "\u001B[40;37m \u2551                    \u001B[40;91m^^^\n"
                        + "\u001B[40;37m8\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:7\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m7\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m20\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_VLD_TYP\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mInvalid validation 'max(10)' for type String.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:7)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35mclass \u001B[40;97mDummy\n"
                        + "\u001B[40;37m4\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m7\u2551     \u001B[40;97mstring\u001B[40;36m: \u001B[40;95mString \u001B[40;33mmin\u001B[40;36m(\u001B[40;94m1\u001B[40;36m) \u001B[40;33mmax\u001B[40;36m(\u001B[40;94m10\u001B[40;36m)\u001B[40;36m;\n"
                        + "\u001B[40;37m \u2551                           \u001B[40;91m^^^\n"
                        + "\u001B[40;37m8\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:7\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m7\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m27\u001B[m\n",
        };

        this.assertCompilerErrors(sourceCodeText, errors);
    }

    @Test
    public void invalidNames()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package BADPACKAGE\n"
                + "\n"
                + "enumeration badEnumeration\n"
                + "{\n"
                + "    badEnumerationLiteral,\n"
                + "}\n"
                + "\n"
                + "class badInterface\n"
                + "{\n"
                + "    BadPrimitiveProperty  : String key;\n"
                + "    BadEnumerationProperty: badEnumeration;\n"
                + "}\n"
                + "\n"
                + "class badClass\n"
                + "{\n"
                + "    BadPrimitiveProperty  : String key;\n"
                + "    BadEnumerationProperty: badEnumeration;\n"
                + "\n"
                + "    BadParameterizedProperty(BadParameter: String[1..1]): badClass[1..1]\n"
                + "    {\n"
                + "        this.BadPrimitiveProperty == BadParameter\n"
                + "    }\n"
                + "\n"
                + "    badTemporalProperty   : TemporalRange;\n"
                + "    badTemporalFrom       : TemporalInstant;\n"
                + "    badTemporalTo         : TemporalInstant;\n"
                + "    valid                 : String;\n"
                + "    validFrom             : String;\n"
                + "    validTo               : String;\n"
                + "    system                : String;\n"
                + "    systemFrom            : String;\n"
                + "    systemTo              : String;\n"
                + "}\n"
                + "\n"
                + "association badAssociation\n"
                + "{\n"
                + "    BadAssociationEndSource: badClass[1..1];\n"
                + "    BadAssociationEndTarget: badClass[0..1];\n"
                + "    \n"
                + "    relationship this.BadPrimitiveProperty == badClass.BadPrimitiveProperty\n"
                + "}\n"
                + "\n"
                + "projection badProjection on badClass\n"
                + "{\n"
                + "    BadPrimitiveProperty: \"Header\",\n"
                + "}\n"
                + "\n"
                + "service badClass\n"
                + "{\n"
                + "    /api/bad/{BadParameter: String[1..1]}\n"
                + "        GET\n"
                + "        {\n"
                + "            projection  : badProjection;\n"
                + "        }\n"
                + "}";
        //</editor-fold>

        // TODO: Package name still needs an error
        String[] errors = {
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_PKG_PAT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mPackage name must match pattern ^[a-z]+(\\.[a-z][a-z0-9]*)*$ but was 'BADPACKAGE'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:1)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mBADPACKAGE\n"
                        + "\u001B[40;37m \u2551         \u001B[40;91m^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:1\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m1\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m9\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_PKG_PAT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mPackage name must match pattern ^[a-z]+(\\.[a-z][a-z0-9]*)*$ but was 'BADPACKAGE'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:1)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mBADPACKAGE\n"
                        + "\u001B[40;37m \u2551         \u001B[40;91m^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:1\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m1\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m9\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_PKG_PAT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mPackage name must match pattern ^[a-z]+(\\.[a-z][a-z0-9]*)*$ but was 'BADPACKAGE'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:1)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mBADPACKAGE\n"
                        + "\u001B[40;37m \u2551         \u001B[40;91m^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:1\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m1\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m9\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_PKG_PAT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mPackage name must match pattern ^[a-z]+(\\.[a-z][a-z0-9]*)*$ but was 'BADPACKAGE'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:1)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mBADPACKAGE\n"
                        + "\u001B[40;37m \u2551         \u001B[40;91m^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:1\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m1\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m9\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_PKG_PAT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mPackage name must match pattern ^[a-z]+(\\.[a-z][a-z0-9]*)*$ but was 'BADPACKAGE'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:1)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mBADPACKAGE\n"
                        + "\u001B[40;37m \u2551         \u001B[40;91m^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:1\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m1\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m9\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_NME_PAT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mName must match pattern ^[A-Z][a-zA-Z0-9]*$ but was 'badEnumeration'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:3)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mBADPACKAGE\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35menumeration \u001B[40;97mbadEnumeration\n"
                        + "\u001B[40;37m \u2551             \u001B[40;91m^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:3\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m3\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m13\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_NME_PAT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mName must match pattern ^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$ but was 'badEnumerationLiteral'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:5)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mBADPACKAGE\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35menumeration \u001B[40;97mbadEnumeration\n"
                        + "\u001B[40;37m4\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m5\u2551     \u001B[40;97mbadEnumerationLiteral\u001B[40;36m,\n"
                        + "\u001B[40;37m \u2551     \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m6\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:5\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m5\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_NME_PAT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mName must match pattern ^[A-Z][a-zA-Z0-9]*$ but was 'badInterface'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:8)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mBADPACKAGE\n"
                        + "\u001B[40;37m8\u2551 \u001B[40;35mclass \u001B[40;97mbadInterface\n"
                        + "\u001B[40;37m \u2551       \u001B[40;91m^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:8\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m8\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m7\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_NME_PAT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mName must match pattern ^[a-z][a-zA-Z0-9]*$ but was 'BadPrimitiveProperty'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:10)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mBADPACKAGE\n"
                        + "\u001B[40;37m 8\u2551 \u001B[40;35mclass \u001B[40;97mbadInterface\n"
                        + "\u001B[40;37m 9\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m10\u2551     \u001B[40;97mBadPrimitiveProperty  \u001B[40;36m: \u001B[40;95mString \u001B[40;33mkey\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551     \u001B[40;91m^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m12\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:10\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m10\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_NME_PAT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mName must match pattern ^[a-z][a-zA-Z0-9]*$ but was 'BadEnumerationProperty'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:11)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mBADPACKAGE\n"
                        + "\u001B[40;37m 8\u2551 \u001B[40;35mclass \u001B[40;97mbadInterface\n"
                        + "\u001B[40;37m 9\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m11\u2551     \u001B[40;97mBadEnumerationProperty\u001B[40;36m: \u001B[40;97mbadEnumeration\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551     \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m12\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:11\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m11\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_NME_PAT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mName must match pattern ^[A-Z][a-zA-Z0-9]*$ but was 'badClass'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:14)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mBADPACKAGE\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;35mclass \u001B[40;97mbadClass\n"
                        + "\u001B[40;37m  \u2551       \u001B[40;91m^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:14\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m14\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m7\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_NME_PAT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mName must match pattern ^[a-z][a-zA-Z0-9]*$ but was 'BadPrimitiveProperty'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:16)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mBADPACKAGE\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;35mclass \u001B[40;97mbadClass\n"
                        + "\u001B[40;37m15\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m16\u2551     \u001B[40;97mBadPrimitiveProperty  \u001B[40;36m: \u001B[40;95mString \u001B[40;33mkey\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551     \u001B[40;91m^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m33\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:16\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m16\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_NME_PAT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mName must match pattern ^[a-z][a-zA-Z0-9]*$ but was 'BadEnumerationProperty'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:17)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mBADPACKAGE\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;35mclass \u001B[40;97mbadClass\n"
                        + "\u001B[40;37m15\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m17\u2551     \u001B[40;97mBadEnumerationProperty\u001B[40;36m: \u001B[40;97mbadEnumeration\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551     \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m33\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:17\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m17\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_NME_PAT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mName must match pattern ^[a-z][a-zA-Z0-9]*$ but was 'BadParameterizedProperty'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:19)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mBADPACKAGE\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;35mclass \u001B[40;97mbadClass\n"
                        + "\u001B[40;37m15\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m19\u2551     \u001B[40;97mBadParameterizedProperty\u001B[40;36m(\u001B[40;97mBadParameter\u001B[40;36m: \u001B[40;95mString\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m)\u001B[40;36m: \u001B[40;97mbadClass\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\n"
                        + "\u001B[40;37m  \u2551     \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m33\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:19\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m19\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_NME_PAT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mName must match pattern ^[a-z][a-zA-Z0-9]*$ but was 'BadParameter'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:19)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mBADPACKAGE\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;35mclass \u001B[40;97mbadClass\n"
                        + "\u001B[40;37m15\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m19\u2551     \u001B[40;97mBadParameterizedProperty\u001B[40;36m(\u001B[40;97mBadParameter\u001B[40;36m: \u001B[40;95mString\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m)\u001B[40;36m: \u001B[40;97mbadClass\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\n"
                        + "\u001B[40;37m  \u2551                              \u001B[40;91m^^^^^^^^^^^^\n"
                        + "\u001B[40;37m33\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:19\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m19\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m30\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_NME_PAT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mName must match pattern ^[A-Z][a-zA-Z0-9]*$ but was 'badAssociation'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:35)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mBADPACKAGE\n"
                        + "\u001B[40;37m35\u2551 \u001B[40;35massociation \u001B[40;97mbadAssociation\n"
                        + "\u001B[40;37m  \u2551             \u001B[40;91m^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:35\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m35\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m13\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_NME_PAT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mName must match pattern ^[a-z][a-zA-Z0-9]*$ but was 'BadAssociationEndSource'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:37)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mBADPACKAGE\n"
                        + "\u001B[40;37m35\u2551 \u001B[40;35massociation \u001B[40;97mbadAssociation\n"
                        + "\u001B[40;37m36\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m37\u2551     \u001B[40;97mBadAssociationEndSource\u001B[40;36m: \u001B[40;97mbadClass\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551     \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m41\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:37\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m37\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_NME_PAT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mName must match pattern ^[a-z][a-zA-Z0-9]*$ but was 'BadAssociationEndTarget'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:38)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mBADPACKAGE\n"
                        + "\u001B[40;37m35\u2551 \u001B[40;35massociation \u001B[40;97mbadAssociation\n"
                        + "\u001B[40;37m36\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m38\u2551     \u001B[40;97mBadAssociationEndTarget\u001B[40;36m: \u001B[40;97mbadClass\u001B[40;36m[\u001B[40;94m0\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551     \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m41\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:38\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m38\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_NME_PAT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mName must match pattern ^[A-Z][a-zA-Z0-9]*$ but was 'badProjection'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:43)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mBADPACKAGE\n"
                        + "\u001B[40;37m43\u2551 \u001B[40;35mprojection \u001B[40;97mbadProjection \u001B[40;95mon \u001B[40;97mbadClass\n"
                        + "\u001B[40;37m  \u2551            \u001B[40;91m^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:43\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m43\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m12\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_NME_PAT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mName must match pattern ^[A-Z][a-zA-Z0-9]*$ but was 'badClass'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:48)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mBADPACKAGE\n"
                        + "\u001B[40;37m48\u2551 \u001B[40;35mservice \u001B[40;97mbadClass\n"
                        + "\u001B[40;37m  \u2551         \u001B[40;91m^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:48\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m48\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m9\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_NME_PAT\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mName must match pattern ^[a-z][a-zA-Z0-9]*$ but was 'BadParameter'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:50)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mBADPACKAGE\n"
                        + "\u001B[40;37m48\u2551 \u001B[40;35mservice \u001B[40;97mbadClass\n"
                        + "\u001B[40;37m49\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m50\u2551     \u001B[40;36m/\u001B[40;97mapi\u001B[40;36m/\u001B[40;97mbad\u001B[40;36m/\u001B[40;36m{\u001B[40;97mBadParameter\u001B[40;36m: \u001B[40;95mString\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m}\n"
                        + "\u001B[40;37m  \u2551               \u001B[40;91m^^^^^^^^^^^^\n"
                        + "\u001B[40;37m55\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:50\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m50\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m15\u001B[m\n",
        };
        this.assertCompilerErrors(sourceCodeText, errors);
    }

    @Test
    public void unresolvedTypes()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package dummy\n"
                + "\n"
                + "interface InterfaceWithUnresolved implements UnresolvedInterface1, UnresolvedInterface2\n"
                + "{\n"
                + "    unresolvedEnumerationProperty: UnresolvedEnumeration key;\n"
                + "}\n"
                + "\n"
                + "class ClassWithUnresolved extends UnresolvedClass implements UnresolvedInterface1, UnresolvedInterface2\n"
                + "{\n"
                + "    unresolvedEnumerationProperty: UnresolvedEnumeration key;\n"
                + "\n"
                + "    unresolvedParameterizedProperty(): UnresolvedClass[1..1]\n"
                + "    {\n"
                + "        this.unresolvedEnumerationProperty == UnresolvedEnumeration.unresolvedEnumerationLiteral\n"
                + "    }\n"
                + "}\n"
                + "\n"
                + "association AssociationWithUnresolved\n"
                + "{\n"
                + "    parent: UnresolvedClass[0..1];\n"
                + "    children: UnresolvedClass[0..*];\n"
                + "\n"
                + "    relationship this.unresolvedEnumerationProperty == UnresolvedClass.unresolvedEnumerationProperty\n"
                + "}\n"
                + "\n"
                + "projection EmptyProjection on ClassWithUnresolved\n"
                + "{\n"
                + "    unresolvedProjectionMember: \"Header\",\n"
                + "}\n"
                + "\n"
                + "projection ProjectionWithUnresolvedClass on UnresolvedClass\n"
                + "{\n"
                + "}\n"
                + "\n"
                + "service ClassWithUnresolved\n"
                + "{\n"
                + "    /api/unresolved/{unresolvedParameterDeclaration: UnresolvedEnumeration[1..1]}\n"
                + "        GET\n"
                + "        {\n"
                + "            multiplicity: one;\n"
                + "            criteria    : this.unresolvedEnumerationProperty == unresolvedParameter;\n"
                + "            projection  : UnresolvedProjection;\n"
                + "        }\n"
                + "    /api/fake1/\n"
                + "        GET\n"
                + "        {\n"
                + "            multiplicity: one;\n"
                + "            criteria    : all;\n"
                + "            projection  : ProjectionWithUnresolvedClass;\n"
                + "        }\n"
                + "}\n"
                + "\n"
                + "service UnresolvedClass\n"
                + "{\n"
                + "    /api/fake/\n"
                + "        GET\n"
                + "        {\n"
                + "            multiplicity: one;\n"
                + "            criteria    : all;\n"
                + "            projection  : EmptyProjection;\n"
                + "        }\n"
                + "}\n";
        //</editor-fold>

        String[] errors = {
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_IMP_INT\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCannot find interface 'UnresolvedInterface1'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:3)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35minterface \u001B[40;97mInterfaceWithUnresolved \u001B[40;95mimplements \u001B[40;97mUnresolvedInterface1\u001B[40;36m, \u001B[40;97mUnresolvedInterface2\n"
                        + "\u001B[40;37m \u2551                                              \u001B[40;91m^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:3\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m3\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m46\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_IMP_INT\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCannot find interface 'UnresolvedInterface2'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:3)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35minterface \u001B[40;97mInterfaceWithUnresolved \u001B[40;95mimplements \u001B[40;97mUnresolvedInterface1\u001B[40;36m, \u001B[40;97mUnresolvedInterface2\n"
                        + "\u001B[40;37m \u2551                                                                    \u001B[40;91m^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:3\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m3\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m68\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_ENM_PRP\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCannot find enumeration 'UnresolvedEnumeration'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:5)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35minterface \u001B[40;97mInterfaceWithUnresolved \u001B[40;95mimplements \u001B[40;97mUnresolvedInterface1\u001B[40;36m, \u001B[40;97mUnresolvedInterface2\n"
                        + "\u001B[40;37m4\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m5\u2551     \u001B[40;97munresolvedEnumerationProperty\u001B[40;36m: \u001B[40;97mUnresolvedEnumeration \u001B[40;33mkey\u001B[40;36m;\n"
                        + "\u001B[40;37m \u2551                                    \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m6\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:5\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m5\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m36\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_EXT_CLS\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCannot find class 'UnresolvedClass'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:8)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m8\u2551 \u001B[40;35mclass \u001B[40;97mClassWithUnresolved \u001B[40;95mextends \u001B[40;97mUnresolvedClass \u001B[40;95mimplements \u001B[40;97mUnresolvedInterface1\u001B[40;36m, \u001B[40;97mUnresolvedInterface2\n"
                        + "\u001B[40;37m \u2551                                   \u001B[40;91m^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:8\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m8\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m35\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_IMP_INT\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCannot find interface 'UnresolvedInterface1'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:8)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m8\u2551 \u001B[40;35mclass \u001B[40;97mClassWithUnresolved \u001B[40;95mextends \u001B[40;97mUnresolvedClass \u001B[40;95mimplements \u001B[40;97mUnresolvedInterface1\u001B[40;36m, \u001B[40;97mUnresolvedInterface2\n"
                        + "\u001B[40;37m \u2551                                                              \u001B[40;91m^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:8\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m8\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m62\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_IMP_INT\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCannot find interface 'UnresolvedInterface2'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:8)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m8\u2551 \u001B[40;35mclass \u001B[40;97mClassWithUnresolved \u001B[40;95mextends \u001B[40;97mUnresolvedClass \u001B[40;95mimplements \u001B[40;97mUnresolvedInterface1\u001B[40;36m, \u001B[40;97mUnresolvedInterface2\n"
                        + "\u001B[40;37m \u2551                                                                                    \u001B[40;91m^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:8\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m8\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m84\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_ENM_PRP\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCannot find enumeration 'UnresolvedEnumeration'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:10)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m 8\u2551 \u001B[40;35mclass \u001B[40;97mClassWithUnresolved \u001B[40;95mextends \u001B[40;97mUnresolvedClass \u001B[40;95mimplements \u001B[40;97mUnresolvedInterface1\u001B[40;36m, \u001B[40;97mUnresolvedInterface2\n"
                        + "\u001B[40;37m 9\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m10\u2551     \u001B[40;97munresolvedEnumerationProperty\u001B[40;36m: \u001B[40;97mUnresolvedEnumeration \u001B[40;33mkey\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551                                    \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m16\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:10\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m10\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m36\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_PRP_TYP\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCannot find class 'UnresolvedClass'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:12)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m 8\u2551 \u001B[40;35mclass \u001B[40;97mClassWithUnresolved \u001B[40;95mextends \u001B[40;97mUnresolvedClass \u001B[40;95mimplements \u001B[40;97mUnresolvedInterface1\u001B[40;36m, \u001B[40;97mUnresolvedInterface2\n"
                        + "\u001B[40;37m 9\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m12\u2551     \u001B[40;97munresolvedParameterizedProperty\u001B[40;36m(\u001B[40;36m)\u001B[40;36m: \u001B[40;97mUnresolvedClass\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\n"
                        + "\u001B[40;37m  \u2551                                        \u001B[40;91m^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m16\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:12\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m12\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m40\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_PRP_TYP\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCannot find class 'UnresolvedClass'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:20)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m18\u2551 \u001B[40;35massociation \u001B[40;97mAssociationWithUnresolved\n"
                        + "\u001B[40;37m19\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m20\u2551     \u001B[40;97mparent\u001B[40;36m: \u001B[40;97mUnresolvedClass\u001B[40;36m[\u001B[40;94m0\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551             \u001B[40;91m^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m24\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:20\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m20\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m13\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_PRP_TYP\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCannot find class 'UnresolvedClass'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:21)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m18\u2551 \u001B[40;35massociation \u001B[40;97mAssociationWithUnresolved\n"
                        + "\u001B[40;37m19\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m21\u2551     \u001B[40;97mchildren\u001B[40;36m: \u001B[40;97mUnresolvedClass\u001B[40;36m[\u001B[40;94m0\u001B[40;36m..\u001B[40;94m*\u001B[40;36m]\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551               \u001B[40;91m^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m24\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:21\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m21\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m15\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_PRJ_DTP\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCannot find member 'ClassWithUnresolved.unresolvedProjectionMember'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:28)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m26\u2551 \u001B[40;35mprojection \u001B[40;97mEmptyProjection \u001B[40;95mon \u001B[40;97mClassWithUnresolved\n"
                        + "\u001B[40;37m27\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m28\u2551     \u001B[40;97munresolvedProjectionMember\u001B[40;36m: \u001B[40;94m\"Header\"\u001B[40;36m,\n"
                        + "\u001B[40;37m  \u2551     \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m29\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:28\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m28\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_PRJ_TYP\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCannot find class 'UnresolvedClass'\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:31)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m31\u2551 \u001B[40;35mprojection \u001B[40;97mProjectionWithUnresolvedClass \u001B[40;95mon \u001B[40;97mUnresolvedClass\n"
                        + "\u001B[40;37m  \u2551                                             \u001B[40;91m^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:31\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m31\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m45\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_ENM_PAR\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCannot find enumeration 'UnresolvedEnumeration'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:37)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m35\u2551 \u001B[40;35mservice \u001B[40;97mClassWithUnresolved\n"
                        + "\u001B[40;37m36\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m37\u2551     \u001B[40;36m/\u001B[40;97mapi\u001B[40;36m/\u001B[40;97munresolved\u001B[40;36m/\u001B[40;36m{\u001B[40;97munresolvedParameterDeclaration\u001B[40;36m: \u001B[40;97mUnresolvedEnumeration\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m}\n"
                        + "\u001B[40;37m  \u2551                                                      \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m51\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:37\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m37\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m54\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_VAR_REF\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCannot find parameter 'unresolvedParameter'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:41)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m35\u2551 \u001B[40;35mservice \u001B[40;97mClassWithUnresolved\n"
                        + "\u001B[40;37m36\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m37\u2551     \u001B[40;36m/\u001B[40;97mapi\u001B[40;36m/\u001B[40;97munresolved\u001B[40;36m/\u001B[40;36m{\u001B[40;97munresolvedParameterDeclaration\u001B[40;36m: \u001B[40;97mUnresolvedEnumeration\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m}\n"
                        + "\u001B[40;37m38\u2551         \u001B[40;92mGET\n"
                        + "\u001B[40;37m39\u2551         \u001B[40;36m{\n"
                        + "\u001B[40;37m41\u2551             \u001B[40;95mcriteria    \u001B[40;36m: \u001B[40;95mthis\u001B[40;36m.\u001B[40;97munresolvedEnumerationProperty \u001B[40;93m== \u001B[40;97munresolvedParameter\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551                                                                 \u001B[40;91m^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m43\u2551         \u001B[40;36m}\n"
                        + "\u001B[40;37m51\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:41\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m41\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m65\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_SER_PRJ\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCannot find projection 'UnresolvedProjection'\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:42)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m35\u2551 \u001B[40;35mservice \u001B[40;97mClassWithUnresolved\n"
                        + "\u001B[40;37m36\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m37\u2551     \u001B[40;36m/\u001B[40;97mapi\u001B[40;36m/\u001B[40;97munresolved\u001B[40;36m/\u001B[40;36m{\u001B[40;97munresolvedParameterDeclaration\u001B[40;36m: \u001B[40;97mUnresolvedEnumeration\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m}\n"
                        + "\u001B[40;37m38\u2551         \u001B[40;92mGET\n"
                        + "\u001B[40;37m39\u2551         \u001B[40;36m{\n"
                        + "\u001B[40;37m42\u2551             \u001B[40;35mprojection  \u001B[40;36m: \u001B[40;97mUnresolvedProjection\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551                           \u001B[40;91m^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m43\u2551         \u001B[40;36m}\n"
                        + "\u001B[40;37m51\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:42\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m42\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m27\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_SRG_TYP\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCannot find class 'UnresolvedClass'\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:53)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m53\u2551 \u001B[40;35mservice \u001B[40;97mUnresolvedClass\n"
                        + "\u001B[40;37m  \u2551         \u001B[40;91m^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:53\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m53\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m9\u001B[m\n",
        };

        this.assertCompilerErrors(sourceCodeText, errors);
    }

    @Test
    public void duplicateAssociationEndKeyword()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package dummy\n"
                + "\n"
                + "association DummyAssociation\n"
                + "{\n"
                + "    parent: Dummy[0..1];\n"
                + "    children: Dummy[0..*] owned owned;\n"
                + "\n"
                + "    relationship this.id == Dummy.id\n"
                + "}\n"
                + "\n"
                + "class Dummy\n"
                + "{\n"
                + "    id: Long id key;\n"
                + "}\n";
        //</editor-fold>

        this.assertNoCompilerErrors(sourceCodeText);
    }

    @Test
    public void manyOwnsOne()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package dummy\n"
                + "\n"
                + "class Dummy\n"
                + "{\n"
                + "    id: Long id key;\n"
                + "    parentId: Long private;\n"
                + "}\n"
                + "\n"
                + "association DummyAssociation\n"
                + "{\n"
                + "    parent: Dummy[0..1] owned;\n"
                + "    children: Dummy[0..*];\n"
                + "\n"
                + "    relationship this.id == Dummy.parentId\n"
                + "}\n"
                + "\n"
                + "association DummyAssociation2\n"
                + "{\n"
                + "    children2: Dummy[0..*];\n"
                + "    parent2: Dummy[0..1] owned;\n"
                + "\n"
                + "    relationship this.parentId == Dummy.id\n"
                + "}\n";
        //</editor-fold>

        String[] errors = {
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_OWN_ONE\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mAssociation end 'Dummy.parent' is owned, but is on the to-one end of a one-to-many association.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:11)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m 9\u2551 \u001B[40;35massociation \u001B[40;97mDummyAssociation\n"
                        + "\u001B[40;37m10\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m11\u2551     \u001B[40;97mparent\u001B[40;36m: \u001B[40;97mDummy\u001B[40;36m[\u001B[40;94m0\u001B[40;36m..\u001B[40;94m1\u001B[40;36m] \u001B[40;93mowned\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551                         \u001B[40;91m^^^^^\n"
                        + "\u001B[40;37m15\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:11\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m11\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m25\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_OWN_ONE\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mAssociation end 'Dummy.parent2' is owned, but is on the to-one end of a many-to-one association.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:20)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mdummy\n"
                        + "\u001B[40;37m17\u2551 \u001B[40;35massociation \u001B[40;97mDummyAssociation2\n"
                        + "\u001B[40;37m18\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m20\u2551     \u001B[40;97mparent2\u001B[40;36m: \u001B[40;97mDummy\u001B[40;36m[\u001B[40;94m0\u001B[40;36m..\u001B[40;94m1\u001B[40;36m] \u001B[40;93mowned\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551                          \u001B[40;91m^^^^^\n"
                        + "\u001B[40;37m23\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:20\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m20\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m26\u001B[m\n",
        };

        this.assertCompilerErrors(sourceCodeText, errors);
    }

    @Test
    public void serviceErrors()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package dummy\n"
                + "\n"
                + "class DummyClass\n"
                + "{\n"
                + "    id: Long id key;\n"
                + "    parentId: Long private;\n"
                + "}\n"
                + "\n"
                + "association DummyAssociation\n"
                + "{\n"
                + "    parent: DummyClass[0..1];\n"
                + "    children: DummyClass[0..*];\n"
                + "\n"
                + "    relationship this.id == DummyClass.parentId\n"
                + "}\n"
                + "\n"
                + "projection DummyProjection on DummyClass\n"
                + "{\n"
                + "    id: \"Dummy ID\",\n"
                + "}\n"
                + "\n"
                + "service DummyClass\n"
                + "{\n"
                + "    /api/dummy/manyPathParam/{id: Long[1..*]}\n"
                + "        GET\n"
                + "        {\n"
                + "            multiplicity: one;\n"
                + "            criteria    : this.id == 1;\n"
                + "            projection  : DummyProjection;\n"
                + "        }\n"
                + "    /api/equalMany?{id: Long[1..*]}\n"
                + "        GET\n"
                + "        {\n"
                + "            multiplicity: one;\n"
                + "            criteria    : this.id == id;\n"
                + "            projection  : DummyProjection;\n"
                + "        }\n"
                + "    /api/inOne?{id: Long[1..1]}\n"
                + "        GET\n"
                + "        {\n"
                + "            multiplicity: one;\n"
                + "            criteria    : this.id in id;\n"
                + "            projection  : DummyProjection;\n"
                + "        }\n"
                + "}\n";
        //</editor-fold>

        this.assertNoCompilerErrors(sourceCodeText);
    }

    @Ignore("TODO: Implement projection parameterized properties")
    @Test
    public void errors()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package com.errors\n"
                + "\n"
                + "// TODO: Error annotators for all these errors\n"
                + "class DuplicateTopLevelDeclarationName\n"
                + "{\n"
                + "}\n"
                + "\n"
                + "class DuplicateTopLevelDeclarationName\n"
                + "{\n"
                + "}\n"
                + "\n"
                + "enumeration DuplicateTopLevelDeclarationName\n"
                + "{\n"
                + "    EXAMPLE_LITERAL,\n"
                + "}\n"
                + "\n"
                + "enumeration DuplicateTopLevelDeclarationName\n"
                + "{\n"
                + "    EXAMPLE_LITERAL,\n"
                + "}\n"
                + "\n"
                + "enumeration EmptyEnumeration\n"
                + "{\n"
                + "}\n"
                + "\n"
                + "enumeration ExampleEnumeration\n"
                + "{\n"
                + "    EXAMPLE_LITERAL,\n"
                + "}\n"
                + "\n"
                + "enumeration DuplicateEnumerationLiteral\n"
                + "{\n"
                + "    DUPLICATE_LITERAL,\n"
                + "    DUPLICATE_LITERAL,\n"
                + "}\n"
                + "\n"
                + "class DuplicateMemberNames\n"
                + "{\n"
                + "    duplicateMemberName: String;\n"
                + "    duplicateMemberName: String;\n"
                + "    duplicateMemberName: ExampleEnumeration;\n"
                + "\n"
                + "    duplicateMemberName(): DuplicateMemberNames[1..1]\n"
                + "    {\n"
                + "        this.duplicateMemberName == DuplicateMemberNames.duplicateMemberName\n"
                + "    }\n"
                + "}\n"
                + "\n"
                + "class ExampleClassWithDuplicateAssociationEnd\n"
                + "{\n"
                + "}\n"
                + "\n"
                + "association ExampleAssociationWithDuplicateAssociationEnd\n"
                + "{\n"
                + "    exampleClassWithDuplicateAssociationEnd: ExampleClassWithDuplicateAssociationEnd[1..1];\n"
                + "    exampleClassWithDuplicateAssociationEnd: ExampleClassWithDuplicateAssociationEnd[0..1];\n"
                + "}\n"
                + "\n"
                + "class ExampleClass\n"
                + "{\n"
                + "    integerProperty: Integer;\n"
                + "    longProperty: Long;\n"
                + "    stringProperty: String;\n"
                + "\n"
                + "    invalidParameterType(stringParameter: String[1..1]): ExampleClass[1..1]\n"
                + "    {\n"
                + "        this.integerProperty == ExampleClass.stringProperty\n"
                + "            && ExampleClass.integerProperty == stringParameter\n"
                + "    }\n"
                + "\n"
                + "    idParameterType(idParameter: Long[1..1]): ExampleClass[1..1]\n"
                + "    {\n"
                + "        this.longProperty  == idParameter\n"
                + "    }\n"
                + "\n"
                + "    invalidConstantType(): ExampleClass[1..1]\n"
                + "    {\n"
                + "        this.integerProperty == ExampleClass.integerProperty\n"
                + "            && ExampleClass.stringProperty == 1\n"
                + "    }\n"
                + "}\n"
                + "\n"
                + "projection ProjectionWithInvalidParameterType(invalidParameter: Integer[1..1]) on ExampleClass\n"
                + "{\n"
                + "    invalidParameterType(invalidParameter):\n"
                + "    {\n"
                + "        // Also this is empty which doesn't make a lot of sense\n"
                + "    },\n"
                + "}\n"
                + "\n"
                + "service ExampleClass\n"
                + "{\n"
                + "    /api/example/{invalidParameter: Boolean[1..1]}\n"
                + "        GET\n"
                + "        {\n"
                + "            // Better error messages for missing multiplicity, criteria, projection\n"
                + "            multiplicity: one;\n"
                + "            criteria: this.stringProperty == invalidParameter;\n"
                + "            projection: ProjectionWithInvalidParameterType(invalidParameter);\n"
                + "        }\n"
                + "    /api/example/singleParameterInClause?{id: String[1..1]}\n"
                + "        GET\n"
                + "        {\n"
                + "            multiplicity: one;\n"
                + "            criteria: this.stringProperty in id;\n"
                + "\n"
                + "            // Also missing projection parameter\n"
                + "            projection: ProjectionWithInvalidParameterType;\n"
                + "        }\n"
                + "    // Duplicate urls\n"
                + "    /api/example/singleParameterInClause?{id: String[0..*]}\n"
                + "        GET\n"
                + "        {\n"
                + "            multiplicity: one;\n"
                + "            criteria: this.stringProperty == id;\n"
                + "            projection: ProjectionWithInvalidParameterType;\n"
                + "        }\n"
                + "    /api/example/{validParameter: Integer[1..1]}\n"
                + "        GET\n"
                + "        {\n"
                + "            // Better error messages for missing multiplicity, criteria, projection\n"
                + "            multiplicity: one;\n"
                + "            criteria: this.stringProperty == invalidParameter;\n"
                + "            projection: ProjectionWithInvalidParameterType(validParameter, validParameter);\n"
                + "        }\n"
                + "    /api/example/{validParameter: Integer[1..1]}\n"
                + "        GET\n"
                + "        {\n"
                + "            // Better error messages for missing multiplicity, criteria, projection\n"
                + "            multiplicity: one;\n"
                + "            criteria: this.stringProperty == invalidParameter;\n"
                + "            projection: ProjectionWithInvalidParameterType(invalidParameter);\n"
                + "        }\n"
                + "}\n"
                + "\n"
                + "projection EmptyProjection on ExampleClass\n"
                + "{\n"
                + "}\n"
                + "\n"
                + "service ExampleClass\n"
                + "{\n"
                + "    // empty\n"
                + "}\n"
                + "\n"
                + "enumeration String\n"
                + "{\n"
                + "    DUMMY,\n"
                + "}\n"
                + "\n"
                + "enumeration ID\n"
                + "{\n"
                + "    DUMMY,\n"
                + "}\n"
                + "\n"
                + "class style\n"
                + "{\n"
                + "    Style: String;\n"
                + "}\n"
                + "\n"
                + "enumeration styleenum\n"
                + "{\n"
                + "    style,\n"
                + "}\n"
                + "\n"
                + "// TODO many owns one\n";
        //</editor-fold>

        String error = "";

        this.assertCompilerErrors(sourceCodeText, error);
    }

    @Test
    public void emoji()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package com.emoji\n"
                + "\n"
                + "// 😃\n";
        //</editor-fold>

        this.assertNoCompilerErrors(sourceCodeText);
    }

    private void assertCompilerErrors(@Nonnull String sourceCodeText, String... expectedErrors)
    {
        DomainModel domainModel = this.compile(sourceCodeText);
        assertThat("Expected a compile error.", domainModel, nullValue());
        assertThat(this.compilerErrorHolder.hasCompilerErrors(), is(true));
        ImmutableList<String> compilerErrors = this.compilerErrorHolder.getCompilerErrors().collect(CompilerError::toString);

    @Nonnull
    private String wrapSourceCode(String unwrappedSourceCode)
    {
        // https://stackoverflow.com/questions/11125459/java-regex-negative-lookahead
        return StringEscapeUtils.escapeJava(unwrappedSourceCode)
                .replaceAll("\\\\n(?!$)", "\\\\n\"\n                        + \"");
    }

    private void assertNoCompilerErrors(String sourceCodeText)
    {
        DomainModel           domainModel    = this.compile(sourceCodeText);
        ImmutableList<String> compilerErrors = this.compilerErrorHolder.getCompilerErrors().collect(CompilerError::toString);
    }

    private DomainModel compile(@Nonnull String sourceCodeText)
    {
        CompilationUnit compilationUnit = CompilationUnit.createFromText("example.klass", sourceCodeText);
        return this.compiler.compile(compilationUnit);
    }

    @Test
    public void serviceProjectionType()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package com.errors\n"
                + "\n"
                + "class Class1\n"
                + "{\n"
                + "    key: String key;\n"
                + "}\n"
                + "\n"
                + "class Class2\n"
                + "{\n"
                + "    key: String key;\n"
                + "}\n"
                + "\n"
                + "projection ExampleProjection on Class1\n"
                + "{\n"
                + "}\n"
                + "\n"
                + "service Class2\n"
                + "{\n"
                + "    /api/example\n"
                + "        GET\n"
                + "        {\n"
                + "            multiplicity: one;\n"
                + "            projection  : ExampleProjection;\n"
                + "        }\n"
                + "}";
        //</editor-fold>

        String error = ""
                + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_SRV_PRJ\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                + "\u001B[31mExpected projection referencing 'Class2' but projection 'ExampleProjection' references 'Class1'.\u001B[m\n"
                + "\n"
                + "Error at location. (example.klass:23)\n"
                + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mcom\u001B[40;36m.\u001B[40;97merrors\n"
                + "\u001B[40;37m17\u2551 \u001B[40;35mservice \u001B[40;97mClass2\n"
                + "\u001B[40;37m18\u2551 \u001B[40;36m{\n"
                + "\u001B[40;37m19\u2551     \u001B[40;36m/\u001B[40;97mapi\u001B[40;36m/\u001B[40;97mexample\n"
                + "\u001B[40;37m20\u2551         \u001B[40;92mGET\n"
                + "\u001B[40;37m21\u2551         \u001B[40;36m{\n"
                + "\u001B[40;37m23\u2551             \u001B[40;35mprojection  \u001B[40;36m: \u001B[40;97mExampleProjection\u001B[40;36m;\n"
                + "\u001B[40;37m  \u2551                           \u001B[40;91m^^^^^^^^^^^^^^^^^\n"
                + "\u001B[40;37m24\u2551         \u001B[40;36m}\n"
                + "\u001B[40;37m25\u2551 \u001B[40;36m}\n"
                + "\u001B[m\n"
                + "\u001B[36mLocation:  \u001B[mexample.klass:23\u001B[m\n"
                + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                + "\u001B[36mLine:      \u001B[m23\u001B[m\n"
                + "\u001B[36mCharacter: \u001B[m27\u001B[m\n";

        this.assertCompilerErrors(sourceCodeText, error);
    }

    @Test
    public void duplicateVersionClass()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package com.errors\n"
                + "\n"
                + "class ExampleClass systemTemporal versioned\n"
                + "{\n"
                + "    id: Long key;\n"
                + "}\n"
                + "\n"
                + "class SecondClassVersion systemTemporal\n"
                + "{\n"
                + "    id: Long key;\n"
                // TODO: 🔢 Check that version associationEnds point at classes which are versions
                + "    number: Integer version;\n"
                + "}\n"
                + "\n"
                + "association ExampleClassHasVersion\n"
                + "{\n"
                + "    exampleClass: ExampleClass[1..1];\n"
                // TODO: Check that version associationEnds are owned, or infer owned
                + "    version: SecondClassVersion[1..1] owned version;\n"
                + "\n"
                + "    relationship this.id == SecondClassVersion.id\n"
                + "}\n";
        //</editor-fold>

        String[] errors = {
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_TOP\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate top level item name: 'ExampleClassHasVersion'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (Version association macro)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mcom\u001B[40;36m.\u001B[40;97merrors\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35massociation \u001B[40;97mExampleClassHasVersion\n"
                        + "\u001B[40;37m \u2551             \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "Which was generated by macro at location (example.klass:3)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mcom\u001B[40;36m.\u001B[40;97merrors\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35mclass \u001B[40;97mExampleClass \u001B[40;33msystemTemporal \u001B[40;33mversioned\n"
                        + "\u001B[40;37m \u2551                                   \u001B[40;91m^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:3\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m3\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m35\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_PRP\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate member: 'ExampleClass.version'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (Version association macro)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mcom\u001B[40;36m.\u001B[40;97merrors\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35massociation \u001B[40;97mExampleClassHasVersion\n"
                        + "\u001B[40;37m4\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m6\u2551     \u001B[40;33mversion\u001B[40;36m: \u001B[40;97mExampleClassVersion\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m] \u001B[40;93mowned \u001B[40;33mversion\u001B[40;36m;\n"
                        + "\u001B[40;37m \u2551     \u001B[40;91m^^^^^^^\n"
                        + "\u001B[40;37m9\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "Which was generated by macro at location (example.klass:3)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mcom\u001B[40;36m.\u001B[40;97merrors\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35mclass \u001B[40;97mExampleClass \u001B[40;33msystemTemporal \u001B[40;33mversioned\n"
                        + "\u001B[40;37m \u2551                                   \u001B[40;91m^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:3\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m3\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m35\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_VER_END\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mMultiple version properties on 'ExampleClass'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (Version association macro)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mcom\u001B[40;36m.\u001B[40;97merrors\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35massociation \u001B[40;97mExampleClassHasVersion\n"
                        + "\u001B[40;37m4\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m6\u2551     \u001B[40;33mversion\u001B[40;36m: \u001B[40;97mExampleClassVersion\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m] \u001B[40;93mowned \u001B[40;33mversion\u001B[40;36m;\n"
                        + "\u001B[40;37m \u2551                                              \u001B[40;91m^^^^^^^\n"
                        + "\u001B[40;37m9\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "Which was generated by macro at location (example.klass:3)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mcom\u001B[40;36m.\u001B[40;97merrors\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35mclass \u001B[40;97mExampleClass \u001B[40;33msystemTemporal \u001B[40;33mversioned\n"
                        + "\u001B[40;37m \u2551                                   \u001B[40;91m^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:3\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m3\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m35\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_TOP\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate top level item name: 'ExampleClassHasVersion'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:14)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mcom\u001B[40;36m.\u001B[40;97merrors\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;35massociation \u001B[40;97mExampleClassHasVersion\n"
                        + "\u001B[40;37m  \u2551             \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:14\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m14\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m13\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_DUP_PRP\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mDuplicate member: 'ExampleClass.version'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:17)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mcom\u001B[40;36m.\u001B[40;97merrors\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;35massociation \u001B[40;97mExampleClassHasVersion\n"
                        + "\u001B[40;37m15\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m17\u2551     \u001B[40;33mversion\u001B[40;36m: \u001B[40;97mSecondClassVersion\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m] \u001B[40;93mowned \u001B[40;33mversion\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551     \u001B[40;91m^^^^^^^\n"
                        + "\u001B[40;37m20\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:17\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m17\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m════════════════════════════════════════\u001B[m \u001B[35mERR_VER_END\u001B[m \u001B[33m════════════════════════════════════════\u001B[m\n"
                        + "\u001B[31mMultiple version properties on 'ExampleClass'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:17)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mcom\u001B[40;36m.\u001B[40;97merrors\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;35massociation \u001B[40;97mExampleClassHasVersion\n"
                        + "\u001B[40;37m15\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m17\u2551     \u001B[40;33mversion\u001B[40;36m: \u001B[40;97mSecondClassVersion\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m] \u001B[40;93mowned \u001B[40;33mversion\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551                                             \u001B[40;91m^^^^^^^\n"
                        + "\u001B[40;37m20\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:17\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m17\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m45\u001B[m\n",
        };

        this.assertCompilerErrors(sourceCodeText, errors);
    }

    @Test
    public void duplicateVersionAssociation()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package com.errors\n"
                + "\n"
                + "class ExampleClass systemTemporal versioned\n"
                + "{\n"
                + "    id: Long id key;\n"
                + "}\n"
                + "\n"
                + "association ExampleClassVersionAgain\n"
                + "{\n"
                + "    duplicateExampleClass: ExampleClass[1..1];\n"
                + "    duplicateExampleClassVersion: ExampleClassVersion[1..1] owned version;\n"
                + "\n"
                + "    relationship this.id == ExampleClassVersion.id\n"
                + "}\n";
        //</editor-fold>

        String[] errors = {
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_VER_END\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mMultiple versioned properties on 'ExampleClassVersion'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (Version association macro)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mcom\u001B[40;36m.\u001B[40;97merrors\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35massociation \u001B[40;97mExampleClassHasVersion\n"
                        + "\u001B[40;37m4\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m5\u2551     \u001B[40;97mexampleClass\u001B[40;36m: \u001B[40;97mExampleClass\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m;\n"
                        + "\u001B[40;37m \u2551     \u001B[40;91m^^^^^^^^^^^^\n"
                        + "\u001B[40;37m9\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "Which was generated by macro at location (example.klass:3)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mcom\u001B[40;36m.\u001B[40;97merrors\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35mclass \u001B[40;97mExampleClass \u001B[40;33msystemTemporal \u001B[40;33mversioned\n"
                        + "\u001B[40;37m \u2551                                   \u001B[40;91m^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:3\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m3\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m35\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_VER_END\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mMultiple version properties on 'ExampleClass'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (Version association macro)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mcom\u001B[40;36m.\u001B[40;97merrors\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35massociation \u001B[40;97mExampleClassHasVersion\n"
                        + "\u001B[40;37m4\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m6\u2551     \u001B[40;33mversion\u001B[40;36m: \u001B[40;97mExampleClassVersion\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m] \u001B[40;93mowned \u001B[40;33mversion\u001B[40;36m;\n"
                        + "\u001B[40;37m \u2551                                              \u001B[40;91m^^^^^^^\n"
                        + "\u001B[40;37m9\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "Which was generated by macro at location (example.klass:3)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mcom\u001B[40;36m.\u001B[40;97merrors\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35mclass \u001B[40;97mExampleClass \u001B[40;33msystemTemporal \u001B[40;33mversioned\n"
                        + "\u001B[40;37m \u2551                                   \u001B[40;91m^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:3\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m3\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m35\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_VER_END\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mMultiple versioned properties on 'ExampleClassVersion'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:10)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mcom\u001B[40;36m.\u001B[40;97merrors\n"
                        + "\u001B[40;37m 8\u2551 \u001B[40;35massociation \u001B[40;97mExampleClassVersionAgain\n"
                        + "\u001B[40;37m 9\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m10\u2551     \u001B[40;97mduplicateExampleClass\u001B[40;36m: \u001B[40;97mExampleClass\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m]\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551     \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:10\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m10\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m5\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_VER_END\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mMultiple version properties on 'ExampleClass'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:11)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mcom\u001B[40;36m.\u001B[40;97merrors\n"
                        + "\u001B[40;37m 8\u2551 \u001B[40;35massociation \u001B[40;97mExampleClassVersionAgain\n"
                        + "\u001B[40;37m 9\u2551 \u001B[40;36m{\n"
                        + "\u001B[40;37m11\u2551     \u001B[40;97mduplicateExampleClassVersion\u001B[40;36m: \u001B[40;97mExampleClassVersion\u001B[40;36m[\u001B[40;94m1\u001B[40;36m..\u001B[40;94m1\u001B[40;36m] \u001B[40;93mowned \u001B[40;33mversion\u001B[40;36m;\n"
                        + "\u001B[40;37m  \u2551                                                                   \u001B[40;91m^^^^^^^\n"
                        + "\u001B[40;37m14\u2551 \u001B[40;36m}\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:11\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m11\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m67\u001B[m\n",
        };

        this.assertCompilerErrors(sourceCodeText, errors);
    }

    @Ignore("reject non-Integer version types")
    @Test
    public void versionType()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package com.errors\n"
                + "\n"
                + "class ExampleVersion systemTemporal\n"
                + "{\n"
                + "    id: Long key;\n"
                + "    number: String version;\n"
                + "}\n";
        //</editor-fold>

        String[] errors = {};

        this.assertCompilerErrors(sourceCodeText, errors);
    }

    @Ignore("TODO: reject duplicate version properties")
    @Test
    public void duplicateVersionProperty()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package com.errors\n"
                + "\n"
                + "class ExampleVersion systemTemporal\n"
                + "{\n"
                + "    id: Long key;\n"
                + "    number1: Integer version;\n"
                + "    number2: Integer version;\n"
                + "}\n";
        //</editor-fold>

        String[] errors = {
        };

        this.assertCompilerErrors(sourceCodeText, errors);
    }

    @Test
    public void multipleIdProperties()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package example\n"
                + "\n"
                + "class ExampleClass\n"
                + "{\n"
                + "    id1: Long id key;\n"
                + "    id2: Long id key;\n"
                + "}\n";
        //</editor-fold>

        String[] errors = {
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_MNY_IDS\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mClass 'ExampleClass' may only have one id property. Found: id1: Long id key, id2: Long id key.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:3)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35mclass \u001B[40;97mExampleClass\n"
                        + "\u001B[40;37m \u2551       \u001B[40;91m^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:3\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m3\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m7\u001B[m\n",
        };

        this.assertCompilerErrors(sourceCodeText, errors);
    }

    @Test
    public void idAndKeyProperties()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package example\n"
                + "\n"
                + "class ExampleClass\n"
                + "{\n"
                + "    key: Long key;\n"
                + "    id: Long id key;\n"
                + "}\n";
        //</editor-fold>

        String[] errors = {
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_KEY_IDS\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mClass 'ExampleClass' may have id properties or non-id key properties, but not both. Found id properties: id: Long id key. Found non-id key properties: key: Long key.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:3)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35mclass \u001B[40;97mExampleClass\n"
                        + "\u001B[40;37m \u2551       \u001B[40;91m^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:3\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m3\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m7\u001B[m\n",
        };

        this.assertCompilerErrors(sourceCodeText, errors);
    }

    @Test
    public void extendsConcrete()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package example\n"
                + "\n"
                + "class ConcreteSuperclass\n"
                + "{\n"
                + "    key: Long key;\n"
                + "}\n"
                + "\n"
                + "class ConcreteSubclass extends ConcreteSuperclass\n"
                + "{\n"
                + "    key: Long key;\n"
                + "}\n";
        //</editor-fold>

        String[] errors = {
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_EXT_CCT\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mSuperclass must be abstract 'ConcreteSuperclass'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:8)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                        + "\u001B[40;37m8\u2551 \u001B[40;35mclass \u001B[40;97mConcreteSubclass \u001B[40;95mextends \u001B[40;97mConcreteSuperclass\n"
                        + "\u001B[40;37m \u2551                                \u001B[40;91m^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:8\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m8\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m32\u001B[m\n",
        };

        this.assertCompilerErrors(sourceCodeText, errors);
    }

    @Test
    public void circularInheritance()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package example\n"
                + "\n"
                + "interface InterfaceImplementsSelf\n"
                + "    implements InterfaceImplementsSelf\n"
                + "{\n"
                + "    key: Long key;\n"
                + "}\n"
                + "\n"
                + "interface Interface1\n"
                + "    implements Interface2\n"
                + "{\n"
                + "    key: Long key;\n"
                + "}\n"
                + "\n"
                + "interface Interface2\n"
                + "    implements Interface1\n"
                + "{\n"
                + "    key: Long key;\n"
                + "}\n"
                + "\n"
                + "class ClassExtendsSelf\n"
                + "    abstract\n"
                + "    extends ClassExtendsSelf\n"
                + "{\n"
                + "    key: Long key;\n"
                + "}\n"
                + "\n"
                + "class AbstractClass1\n"
                + "    abstract\n"
                + "    extends AbstractClass2\n"
                + "{\n"
                + "    key: Long key;\n"
                + "}\n"
                + "\n"
                + "class AbstractClass2\n"
                + "    abstract\n"
                + "    extends AbstractClass1\n"
                + "{\n"
                + "    key: Long key;\n"
                + "}\n";
        //</editor-fold>

        String[] errors = {
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_IMP_SLF\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCircular inheritance 'InterfaceImplementsSelf'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:4)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                        + "\u001B[40;37m4\u2551     \u001B[40;95mimplements \u001B[40;97mInterfaceImplementsSelf\n"
                        + "\u001B[40;37m \u2551                \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:4\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m4\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m16\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_IMP_SLF\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCircular inheritance 'Interface2'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:10)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                        + "\u001B[40;37m10\u2551     \u001B[40;95mimplements \u001B[40;97mInterface2\n"
                        + "\u001B[40;37m  \u2551                \u001B[40;91m^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:10\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m10\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m16\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_IMP_SLF\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCircular inheritance 'Interface1'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:16)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                        + "\u001B[40;37m16\u2551     \u001B[40;95mimplements \u001B[40;97mInterface1\n"
                        + "\u001B[40;37m  \u2551                \u001B[40;91m^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:16\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m16\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m16\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_EXT_SLF\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCircular inheritance 'ClassExtendsSelf'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:23)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                        + "\u001B[40;37m23\u2551     \u001B[40;95mextends \u001B[40;97mClassExtendsSelf\n"
                        + "\u001B[40;37m  \u2551             \u001B[40;91m^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:23\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m23\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m13\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_EXT_SLF\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCircular inheritance 'AbstractClass2'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:30)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                        + "\u001B[40;37m30\u2551     \u001B[40;95mextends \u001B[40;97mAbstractClass2\n"
                        + "\u001B[40;37m  \u2551             \u001B[40;91m^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:30\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m30\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m13\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_EXT_SLF\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mCircular inheritance 'AbstractClass1'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:37)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                        + "\u001B[40;37m37\u2551     \u001B[40;95mextends \u001B[40;97mAbstractClass1\n"
                        + "\u001B[40;37m  \u2551             \u001B[40;91m^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:37\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m37\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m13\u001B[m\n",
        };

        this.assertCompilerErrors(sourceCodeText, errors);
    }

    @Test
    public void redundantImplements()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package example\n"
                + "\n"
                + "interface RedundantTopInterface\n"
                + "{\n"
                + "    key: Long key;\n"
                + "}\n"
                + "\n"
                + "interface RedundantLeftInterface implements RedundantTopInterface\n"
                + "{\n"
                + "    key: Long key;\n"
                + "}\n"
                + "\n"
                + "interface RedundantRightInterface implements RedundantTopInterface\n"
                + "{\n"
                + "    key: Long key;\n"
                + "}\n"
                + "\n"
                + "interface RedundantBottomInterface implements RedundantTopInterface, RedundantLeftInterface, RedundantRightInterface\n"
                + "{\n"
                + "    key: Long key;\n"
                + "}\n"
                + "\n"
                + "interface RedundantExtraInterface implements RedundantTopInterface, RedundantTopInterface\n"
                + "{\n"
                + "    key: Long key;\n"
                + "}\n"
                + "\n"
                + "class AbstractTopClass\n"
                + "    abstract\n"
                + "    implements RedundantTopInterface\n"
                + "{\n"
                + "    key: Long key;\n"
                + "}\n"
                + "\n"
                + "class AbstractLeftClass\n"
                + "    abstract\n"
                + "    extends AbstractTopClass\n"
                + "    implements RedundantTopInterface, RedundantLeftInterface\n"
                + "{\n"
                + "    key: Long key;\n"
                + "}\n"
                + "\n"
                + "class AbstractBottomClass\n"
                + "    abstract\n"
                + "    extends AbstractLeftClass\n"
                + "    implements RedundantTopInterface, RedundantLeftInterface, RedundantRightInterface\n"
                + "{\n"
                + "    key: Long key;\n"
                + "}\n"
                + "\n"
                + "class ConcreteSubClass\n"
                + "    extends AbstractBottomClass\n"
                + "    implements RedundantTopInterface, RedundantLeftInterface, RedundantRightInterface\n"
                + "{\n"
                + "    key: Long key;\n"
                + "}\n";
        //</editor-fold>

        String[] errors = {
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_RED_INT\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mRedundant interface 'RedundantTopInterface'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:18)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                        + "\u001B[40;37m18\u2551 \u001B[40;35minterface \u001B[40;97mRedundantBottomInterface \u001B[40;95mimplements \u001B[40;97mRedundantTopInterface\u001B[40;36m, \u001B[40;97mRedundantLeftInterface\u001B[40;36m, \u001B[40;97mRedundantRightInterface\n"
                        + "\u001B[40;37m  \u2551                                               \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:18\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m18\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m47\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_DUP_INT\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mDuplicate interface 'RedundantTopInterface'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:23)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                        + "\u001B[40;37m23\u2551 \u001B[40;35minterface \u001B[40;97mRedundantExtraInterface \u001B[40;95mimplements \u001B[40;97mRedundantTopInterface\u001B[40;36m, \u001B[40;97mRedundantTopInterface\n"
                        + "\u001B[40;37m  \u2551                                                                     \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:23\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m23\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m69\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_RED_INT\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mRedundant interface 'RedundantTopInterface'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:38)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                        + "\u001B[40;37m38\u2551     \u001B[40;95mimplements \u001B[40;97mRedundantTopInterface\u001B[40;36m, \u001B[40;97mRedundantLeftInterface\n"
                        + "\u001B[40;37m  \u2551                \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:38\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m38\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m16\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_RED_INT\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mRedundant interface 'RedundantTopInterface'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:46)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                        + "\u001B[40;37m46\u2551     \u001B[40;95mimplements \u001B[40;97mRedundantTopInterface\u001B[40;36m, \u001B[40;97mRedundantLeftInterface\u001B[40;36m, \u001B[40;97mRedundantRightInterface\n"
                        + "\u001B[40;37m  \u2551                \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:46\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m46\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m16\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_RED_INT\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mRedundant interface 'RedundantLeftInterface'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:46)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                        + "\u001B[40;37m46\u2551     \u001B[40;95mimplements \u001B[40;97mRedundantTopInterface\u001B[40;36m, \u001B[40;97mRedundantLeftInterface\u001B[40;36m, \u001B[40;97mRedundantRightInterface\n"
                        + "\u001B[40;37m  \u2551                                       \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:46\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m46\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m39\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_RED_INT\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mRedundant interface 'RedundantTopInterface'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:53)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                        + "\u001B[40;37m53\u2551     \u001B[40;95mimplements \u001B[40;97mRedundantTopInterface\u001B[40;36m, \u001B[40;97mRedundantLeftInterface\u001B[40;36m, \u001B[40;97mRedundantRightInterface\n"
                        + "\u001B[40;37m  \u2551                \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:53\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m53\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m16\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_RED_INT\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mRedundant interface 'RedundantLeftInterface'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:53)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                        + "\u001B[40;37m53\u2551     \u001B[40;95mimplements \u001B[40;97mRedundantTopInterface\u001B[40;36m, \u001B[40;97mRedundantLeftInterface\u001B[40;36m, \u001B[40;97mRedundantRightInterface\n"
                        + "\u001B[40;37m  \u2551                                       \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:53\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m53\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m39\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_RED_INT\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mRedundant interface 'RedundantRightInterface'.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:53)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                        + "\u001B[40;37m53\u2551     \u001B[40;95mimplements \u001B[40;97mRedundantTopInterface\u001B[40;36m, \u001B[40;97mRedundantLeftInterface\u001B[40;36m, \u001B[40;97mRedundantRightInterface\n"
                        + "\u001B[40;37m  \u2551                                                               \u001B[40;91m^^^^^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:53\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m53\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m63\u001B[m\n",
        };

        this.assertCompilerErrors(sourceCodeText, errors);
    }

    @Test
    public void badOverride()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package example\n"
                + "\n"
                + "class AbstractSuperClass\n"
                + "    abstract\n"
                + "{\n"
                + "    key: Long key;\n"
                + "}\n"
                + "\n"
                + "class ConcreteSubClass\n"
                + "    extends AbstractSuperClass\n"
                + "{\n"
                + "    key: String key;\n"
                + "}\n";
        //</editor-fold>

        String[] errors = {
        };

        // TODO
        // this.assertCompilerErrors(sourceCodeText, errors);
    }

    @Test
    public void transientWithId()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package example\n"
                + "\n"
                + "class AbstractSuperClass\n"
                + "    abstract\n"
                + "{\n"
                + "    string: String;\n"
                + "}\n"
                + "\n"
                + "class ConcreteSubClass\n"
                + "    extends AbstractSuperClass\n"
                + "    transient\n"
                + "{\n"
                + "    key: Long key id;\n"
                + "}\n";
        //</editor-fold>

        String[] errors = {
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_TNS_IDP\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mTransient class 'ConcreteSubClass' may not have id properties.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:9)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                        + "\u001B[40;37m9\u2551 \u001B[40;35mclass \u001B[40;97mConcreteSubClass\n"
                        + "\u001B[40;37m \u2551       \u001B[40;91m^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:9\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m9\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m7\u001B[m\n",
        };

        this.assertCompilerErrors(sourceCodeText, errors);
    }

    @Test
    public void transientInheritance()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package example\n"
                + "\n"
                + "class TransientSuperClass\n"
                + "    abstract\n"
                + "    transient\n"
                + "{\n"
                + "    key: Long key id;\n"
                + "}\n"
                + "\n"
                + "class SubClass\n"
                + "    extends TransientSuperClass\n"
                + "{\n"
                + "    string: String;\n"
                + "}\n";
        //</editor-fold>

        String[] errors = {
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_TNS_IDP\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mTransient class 'TransientSuperClass' may not have id properties.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:3)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35mclass \u001B[40;97mTransientSuperClass\n"
                        + "\u001B[40;37m \u2551       \u001B[40;91m^^^^^^^^^^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:3\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m3\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m7\u001B[m\n",
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_TNS_IDP\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mTransient class 'SubClass' may not have id properties.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:10)\n"
                        + "\u001B[40m\u001B[40;37m 1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                        + "\u001B[40;37m10\u2551 \u001B[40;35mclass \u001B[40;97mSubClass\n"
                        + "\u001B[40;37m  \u2551       \u001B[40;91m^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:10\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m10\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m7\u001B[m\n",
        };

        this.assertCompilerErrors(sourceCodeText, errors);
    }

    @Test
    public void tablePerClassWithoutKey()
    {
        //<editor-fold desc="source code">
        //language=Klass
        String sourceCodeText = ""
                + "package example\n"
                + "\n"
                + "class SuperClass\n"
                + "    abstract(table-per-class)\n"
                + "{\n"
                + "    nonKey: String;\n"
                + "}\n"
                + "\n"
                + "class SubClass\n"
                + "    extends SuperClass\n"
                + "{\n"
                + "    alsoNonKey: String;\n"
                + "}";
        //</editor-fold>

        String[] errors = {
                ""
                        + "\u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m \u001B[35mERR_CLS_KEY\u001B[m \u001B[33m\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u001B[m\n"
                        + "\u001B[31mClass 'SuperClass' must have at least one key property.\u001B[m\n"
                        + "\n"
                        + "Error at location. (example.klass:3)\n"
                        + "\u001B[40m\u001B[40;37m1\u2551 \u001B[40;35mpackage \u001B[40;97mexample\n"
                        + "\u001B[40;37m3\u2551 \u001B[40;35mclass \u001B[40;97mSuperClass\n"
                        + "\u001B[40;37m \u2551       \u001B[40;91m^^^^^^^^^^\n"
                        + "\u001B[m\n"
                        + "\u001B[36mLocation:  \u001B[mexample.klass:3\u001B[m\n"
                        + "\u001B[36mFile:      \u001B[mexample.klass\u001B[m\n"
                        + "\u001B[36mLine:      \u001B[m3\u001B[m\n"
                        + "\u001B[36mCharacter: \u001B[m7\u001B[m\n",
        };

        this.assertCompilerErrors(sourceCodeText, errors);
    }
}
