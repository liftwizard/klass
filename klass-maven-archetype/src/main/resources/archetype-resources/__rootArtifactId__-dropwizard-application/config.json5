{
  "server": {
    "detailedJsonProcessingExceptionMapper": true,
    "rootPath": "/api/*",
    "requestLog": {
      "appenders": [
        {
          "type": "console",
          "filterFactories": [
            {
              "type": "url",
              "onMatch": "DENY",
              "urls": [
                "/icons/",
                "/static/",
                "/manifest.json",
                "/assets-manifest.json",
                "/favicon.ico",
                "/service-worker.js",
                "/bootstrap.min.css"
              ]
            }
          ]
        }
      ]
    }
  },
  "logging": {
    "level": "INFO",
    "loggers": {
      "${package}": "DEBUG",
      "com.gs.fw.common.mithra.batch.sqllogs": "DEBUG",
      "com.gs.fw.common.mithra.connectionmanager": "INFO",
      "com.gs.fw.common.mithra.sqllogs": "DEBUG",
      "org.apache.http": "INFO",
      "org.eclipse.jetty": "INFO",
      "org.reflections.Reflections": "INFO",
    },
    "appenders": [
      {
        "type": "console",
        "timeZone": "utc",
        "logFormat": "%highlight(%-5level) %cyan(%date{HH:mm:ss}) [%white(%thread)] %blue(%marker) {%magenta(%mdc)} %green(%logger): %message%n%red(%rootException)",
        "includeCallerData": true
      }
    ]
  },
  "klass": {
    "clock": {
      "type": "system"
    },
    "domainModel": {
      "type": "compiler",
      "sourcePackages": [
        "klass.model.meta.domain",
        "${package}"
      ]
    },
    "dataStore": {
      "type": "reladomo",
      "uuid": {
        "type": "system"
      }
    },
  },
  "configLogging": {
    "enabled": true
  },
  "authFilters": [],
  "h2": {
    "enabled": true,
    "webPort": 8082,
    "tcpPort": 9092,
  },
  "cors": {
    "enabled": false
  },
  "dataSources": [
    {
      "name": "h2-mem",
      "driverClass": "com.p6spy.engine.spy.P6SpyDriver",
      "readOnlyByDefault": false,
      "user": "sa",
      "password": "",
      "url": "jdbc:p6spy:h2:mem:",
      "properties": {
        "charSet": "UTF-8"
      },
      "logValidationErrors": true,
      "maxWaitForConnection": "1 second",
    },
    {
      "name": "h2-tcp",
      "driverClass": "com.p6spy.engine.spy.P6SpyDriver",
      "readOnlyByDefault": false,
      "user": "sa",
      "password": "",
      "url": "jdbc:p6spy:h2:tcp://localhost:9092/${rootArtifactId}-h2",
      "properties": {
        "charSet": "UTF-8"
      },
      "logValidationErrors": true,
      "maxWaitForConnection": "1 second",
    },
    {
      "name": "h2-file",
      "driverClass": "com.p6spy.engine.spy.P6SpyDriver",
      "readOnlyByDefault": false,
      "user": "sa",
      "password": "",
      "url": "jdbc:p6spy:h2:file:./target/h2db/${rootArtifactId}-h2",
      "properties": {
        "charSet": "UTF-8"
      },
      "logValidationErrors": true,
      "maxWaitForConnection": "1 second",
    }
  ],
  "ddlExecutors": [
    {
      "dataSourceName": "h2-tcp"
    }
  ],
  "reladomo": {
    "runtimeConfigurationPaths": [
      "reladomo-runtime-configuration/ReladomoRuntimeConfiguration.xml"
    ]
  },
  "connectionManagers": [
    {
      "connectionManagerName": "h2-mem",
      "dataSourceName": "h2-mem",
      "databaseType": "H2",
      "schemaName": "${rootArtifactId}-h2"
    },
    {
      "connectionManagerName": "h2-tcp",
      "dataSourceName": "h2-tcp",
      "databaseType": "H2",
      "schemaName": "${rootArtifactId}-h2"
    },
    {
      "connectionManagerName": "h2-file",
      "dataSourceName": "h2-file",
      "databaseType": "H2",
      "schemaName": "${rootArtifactId}-h2"
    }
  ],
  "jerseyHttpLogging": {
    "enabled": true,
    "maxEntitySize": "1 kilobyte"
  },
  "bootstrap": {
    "enabled": true
  },
  "graphQL": {
    "enableTracing": false,
    "queryCache": "maximumSize=10000",
    "schemaFiles": [
      "io/liftwizard/graphql/schema/query/QuerySchema.graphqls",
      "io/liftwizard/graphql/schema/attribute/ReladomoAttribute.graphqls",
      "${packageInPathFormat}/graphql/schema/query/GraphQLQuerySchema.graphqls",
      "${packageInPathFormat}/graphql/schema/finder/GraphQLFinders.graphqls",
      "${packageInPathFormat}/graphql/schema/${name}.graphqls",
    ]
  }
}
