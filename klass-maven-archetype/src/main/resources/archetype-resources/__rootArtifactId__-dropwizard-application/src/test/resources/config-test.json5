#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
{
  server: {
    detailedJsonProcessingExceptionMapper: true,
    applicationConnectors: [
      {
        type: "http",
        port: 0,
      },
    ],
    adminConnectors: [
      {
        type: "http",
        port: 0,
      },
    ],
    rootPath: "/api/*",
    requestLog: {
      appenders: [
        {
          type: "console",
          filterFactories: [
            {
              type: "url",
              onMatch: "DENY",
              urls: [
                "/icons/",
                "/static/",
                "/manifest.json",
                "/assets-manifest.json",
                "/favicon.ico",
                "/service-worker.js",
                "/bootstrap.min.css",
              ],
            },
          ],
        },
      ],
    },
  },
  logging: {
    level: "DEBUG",
    loggers: {
      "${package}": "DEBUG",
      "com.gs.fw.common.mithra.batch.sqllogs": "DEBUG",
      "com.gs.fw.common.mithra.connectionmanager": "INFO",
      "com.gs.fw.common.mithra.sqllogs": "DEBUG",
      "org.apache.http": "INFO",
      "org.eclipse.jetty": "INFO",
      "org.reflections.Reflections": "INFO",
    },
    appenders: [
      {
        type: "buffered",
        timeZone: "${symbol_dollar}{LOGGING_TIMEZONE:-system}",
        logFormat: "%highlight(%-5level) %cyan(%date{HH:mm:ss.SSS, %dwTimeZone}) %gray(${symbol_escape}${symbol_escape}(%file:%line${symbol_escape}${symbol_escape})) [%white(%thread)] %blue(%marker) {%magenta(%mdc)} %green(%logger): %message%n%rootException",
        includeCallerData: true,
      },
    ],
  },
  clock: {
    type: "fixed",
    instant: "2000-12-31T23:59:59Z",
  },
  klass: {
    domainModel: {
      type: "compiler",
      sourcePackages: ["klass.model.meta.domain", "${package}"],
      colorScheme: "dark",
    },
    dataStore: {
      type: "reladomo",
      uuid: {
        type: "seed",
        seed: "test seed",
      },
    },
  },
  configLogging: {
    enabled: true,
  },
  authFilters: [
    {
      type: "header",
      header: "Authorization",
      prefix: "Impersonation",
    },
  ],
  h2: {
    enabled: true,
    webPort: 8080,
    tcpPort: 9090,
  },
  cors: {
    enabled: false,
  },
  dataSources: [
    {
      name: "h2-mem",
      driverClass: "com.p6spy.engine.spy.P6SpyDriver",
      readOnlyByDefault: false,
      user: "sa",
      password: "",
      url: "jdbc:p6spy:h2:mem:;NON_KEYWORDS=USER",
      properties: {
        charSet: "UTF-8",
      },
      logValidationErrors: true,
      maxWaitForConnection: "1 second",
    },
    {
      name: "h2-tcp",
      driverClass: "com.p6spy.engine.spy.P6SpyDriver",
      readOnlyByDefault: false,
      user: "sa",
      password: "",
      url: "jdbc:p6spy:h2:tcp://localhost:9090/${rootArtifactId}-h2;NON_KEYWORDS=USER",
      properties: {
        charSet: "UTF-8",
      },
      logValidationErrors: true,
      maxWaitForConnection: "1 second",
    },
    {
      name: "h2-file",
      driverClass: "com.p6spy.engine.spy.P6SpyDriver",
      readOnlyByDefault: false,
      user: "sa",
      password: "",
      url: "jdbc:p6spy:h2:file:./target/h2db/${rootArtifactId}-h2;NON_KEYWORDS=USER",
      properties: {
        charSet: "UTF-8",
      },
      logValidationErrors: true,
      maxWaitForConnection: "1 second",
    },
  ],
  ddlExecutors: [
    {
      dataSourceName: "h2-tcp",
    },
  ],
  reladomo: {
    runtimeConfigurationPaths: [
      "reladomo-runtime-configuration/ReladomoRuntimeConfiguration.xml",
    ],
  },
  connectionManagers: [
    {
      connectionManagerName: "h2-mem",
      dataSourceName: "h2-mem",
      databaseType: "H2",
      schemaName: "${rootArtifactId}-h2",
    },
    {
      connectionManagerName: "h2-tcp",
      dataSourceName: "h2-tcp",
      databaseType: "H2",
      schemaName: "${rootArtifactId}-h2",
    },
    {
      connectionManagerName: "h2-file",
      dataSourceName: "h2-file",
      databaseType: "H2",
      schemaName: "${rootArtifactId}-h2",
    },
  ],
  jerseyHttpLogging: {
    enabled: true,
    maxEntitySize: "1 kilobyte",
  },
  bootstrap: {
    enabled: true,
  },
  graphQL: {
    enableTracing: false,
    queryCache: "maximumSize=10000",
    schemaFiles: [
      "io/liftwizard/graphql/schema/query/QuerySchema.graphqls",
      "io/liftwizard/graphql/schema/attribute/ReladomoAttribute.graphqls",
      "${packageInPathFormat}/graphql/schema/query/GraphQLQuerySchema.graphqls",
      "${packageInPathFormat}/graphql/schema/finder/GraphQLFinders.graphqls",
      "${packageInPathFormat}/graphql/schema/GraphQLSchema.graphqls",
    ],
  },
}
