version: 2.1

orbs:
  heroku: circleci/heroku@0.0.8

workflows:
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master

jobs:
  # runs not using Workflows must have a `build` job as entry point
  build:
    # directory where steps will run
    working_directory: ~/klass
    docker:
      - image: circleci/openjdk:8-jdk-browsers
    steps:
      - checkout

      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: klass-{{ checksum "pom.xml" }}

      - run: mvn -N io.takari:maven:wrapper -Dmaven=3.6.2
      - run: ./mvnw de.qaware.maven:go-offline-maven-plugin:1.1.0:resolve-dependencies --activate-profiles !shade,!run-demo

      - save_cache:
          paths:
            - ~/.m2
          key: klass-{{ checksum "pom.xml" }}

      - run: ./mvnw install --offline --activate-profiles !shade,!run-demo -DforkCount=0

      # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
      - store_test_results:
          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: target/surefire-reports

          # store the uberjar as an artifact
          # - store_artifacts:
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          # path: target/demo-java-spring-0.0.1-SNAPSHOT.jar
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
  deploy:
    executor: heroku/default
    steps:
      - checkout
      # Runs the heroku install command, if necessary.
      - heroku/install
      - heroku/deploy-via-git:
          only-branch: master
