<?xml version="1.0" encoding="UTF-8"?>
<project
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>io.liftwizard</groupId>
        <artifactId>liftwizard-example</artifactId>
        <version>0.1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>liftwizard-example-dropwizard-application</artifactId>

    <name>${app.name} Application</name>

    <build>
        <plugins>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <configuration>
                    <basedir>${project.basedir}</basedir>
                    <workingDirectory>${project.basedir}</workingDirectory>
                    <executable>java</executable>
                    <commandlineArgs>-jar ${project.build.directory}/${project.artifactId}-${project.version}.jar server server-local-demo.json</commandlineArgs>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>${mainClass}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>cool.klass</groupId>
                <artifactId>klass-generator-reladomo-plugin</artifactId>
                <version>${klass.version}</version>

                <configuration>
                    <rootPackageName>${app.rootPackageName}</rootPackageName>
                    <klassSourcePackages>
                        <klassSourcePackage>klass.model.meta.domain</klassSourcePackage>
                        <klassSourcePackage>${app.rootPackageName}</klassSourcePackage>
                    </klassSourcePackages>
                </configuration>

                <executions>

                    <execution>
                        <id>generate-production-runtime-configuration</id>
                        <goals>
                            <goal>generate-reladomo-runtime-configuration</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/generated-resources/reladomo-runtime-configuration
                            </outputDirectory>
                            <outputFilename>ReladomoRuntimeConfiguration.xml</outputFilename>
                            <connectionManagerName>h2-tcp</connectionManagerName>
                            <connectionManagerClassName>
                                io.liftwizard.reladomo.connection.manager.holder.ConnectionManagerHolder
                            </connectionManagerClassName>
                            <isTest>false</isTest>
                        </configuration>
                    </execution>

                    <execution>
                        <id>generate-fully-cached-runtime-configuration</id>
                        <goals>
                            <goal>generate-reladomo-runtime-configuration</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/generated-resources/reladomo-runtime-configuration
                            </outputDirectory>
                            <outputFilename>ReladomoRuntimeFullyCachedConfiguration.xml</outputFilename>
                            <connectionManagerName>h2-tcp</connectionManagerName>
                            <connectionManagerClassName>
                                io.liftwizard.reladomo.connection.manager.holder.ConnectionManagerHolder
                            </connectionManagerClassName>
                            <isTest>false</isTest>
                            <cacheType>full</cacheType>
                        </configuration>
                    </execution>

                </executions>

                <dependencies>

                    <dependency>
                        <groupId>${project.groupId}</groupId>
                        <artifactId>${app.artifactId}-domain-model</artifactId>
                        <version>${project.version}</version>
                    </dependency>

                    <dependency>
                        <groupId>cool.klass</groupId>
                        <artifactId>klass-model-bootstrapped-meta</artifactId>
                        <version>${klass.version}</version>
                    </dependency>

                </dependencies>
            </plugin>

            <plugin>
                <groupId>cool.klass</groupId>
                <artifactId>klass-generator-dropwizard-plugin</artifactId>
                <version>${klass.version}</version>
                <configuration>
                    <rootPackageName>${app.rootPackageName}</rootPackageName>
                    <applicationName>${app.name}</applicationName>
                    <klassSourcePackages>
                        <klassSourcePackage>klass.model.meta.domain</klassSourcePackage>
                        <klassSourcePackage>${app.rootPackageName}</klassSourcePackage>
                    </klassSourcePackages>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate-abstract-application</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>

                    <dependency>
                        <groupId>${project.groupId}</groupId>
                        <artifactId>${app.artifactId}-domain-model</artifactId>
                        <version>${project.version}</version>
                    </dependency>

                    <dependency>
                        <groupId>cool.klass</groupId>
                        <artifactId>klass-model-bootstrapped-meta</artifactId>
                        <version>${klass.version}</version>
                    </dependency>

                </dependencies>
            </plugin>

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <configuration>
                    <ignoreNonCompile>true</ignoreNonCompile>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <dependencies>

        <!--region Project compile dependencies -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>${app.artifactId}-services</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>${app.artifactId}-graphql-runtime-wiring</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!--endregion-->

        <!--region Project runtime dependencies -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>${app.artifactId}-domain-model</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>${app.artifactId}-reladomo-ddls</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>cool.klass</groupId>
            <artifactId>klass-dropwizard-bundle-reladomo-jsonview</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>cool.klass</groupId>
            <artifactId>klass-dropwizard-bundle-reladomo-response</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>${app.artifactId}-graphql-schema</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!--endregion-->

        <!--region Liftwizard compile dependencies -->
        <dependency>
            <groupId>io.liftwizard</groupId>
            <artifactId>liftwizard-config-clock</artifactId>
        </dependency>

        <dependency>
            <groupId>io.liftwizard</groupId>
            <artifactId>liftwizard-application</artifactId>
        </dependency>

        <dependency>
            <groupId>io.liftwizard</groupId>
            <artifactId>liftwizard-bundle-graphql</artifactId>
        </dependency>

        <dependency>
            <groupId>io.liftwizard</groupId>
            <artifactId>liftwizard-config-graphql</artifactId>
        </dependency>
        <!--endregion-->

        <!--region Liftwizard runtime dependencies -->
        <!--region Liftwizard bundles -->
        <dependency>
            <groupId>io.liftwizard</groupId>
            <artifactId>liftwizard-bundle-cors</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>io.liftwizard</groupId>
            <artifactId>liftwizard-bundle-object-mapper</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>io.liftwizard</groupId>
            <artifactId>liftwizard-bundle-auth-filter</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>io.liftwizard</groupId>
            <artifactId>liftwizard-bundle-h2</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>io.liftwizard</groupId>
            <artifactId>liftwizard-bundle-ddl-executor</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>io.liftwizard</groupId>
            <artifactId>liftwizard-bundle-named-data-source</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>io.liftwizard</groupId>
            <artifactId>liftwizard-bundle-connection-manager</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>io.liftwizard</groupId>
            <artifactId>liftwizard-bundle-reladomo</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>io.liftwizard</groupId>
            <artifactId>liftwizard-bundle-connection-manager-holder</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!--endregion-->

        <!--region Liftwizard config-->
        <dependency>
            <groupId>io.liftwizard</groupId>
            <artifactId>liftwizard-config-logging-logstash-file</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>io.liftwizard</groupId>
            <artifactId>liftwizard-config-clock-system</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>io.liftwizard</groupId>
            <artifactId>liftwizard-config-uuid-system</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!--endregion-->

        <dependency>
            <groupId>io.liftwizard</groupId>
            <artifactId>liftwizard-reladomo-simulated-sequence</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>io.liftwizard</groupId>
            <artifactId>liftwizard-reladomo-simulated-sequence-ddls</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!--endregion-->

        <!--region Klass compile dependencies -->
        <dependency>
            <groupId>cool.klass</groupId>
            <artifactId>klass-data-store</artifactId>
            <version>${klass.version}</version>
        </dependency>

        <dependency>
            <groupId>cool.klass</groupId>
            <artifactId>klass-dropwizard-configuration-data-store</artifactId>
            <version>${klass.version}</version>
        </dependency>

        <dependency>
            <groupId>cool.klass</groupId>
            <artifactId>klass-model-bootstrapped-services</artifactId>
            <version>${klass.version}</version>
        </dependency>

        <dependency>
            <groupId>cool.klass</groupId>
            <artifactId>klass-dropwizard-configuration</artifactId>
            <version>${klass.version}</version>
        </dependency>

        <dependency>
            <groupId>cool.klass</groupId>
            <artifactId>klass-servlet-logging-structured-klass-response</artifactId>
            <version>${klass.version}</version>
        </dependency>

        <dependency>
            <groupId>cool.klass</groupId>
            <artifactId>klass-servlet-logging-mdc-jsonview</artifactId>
            <version>${klass.version}</version>
        </dependency>

        <dependency>
            <groupId>cool.klass</groupId>
            <artifactId>klass-serialization-jackson-module-meta-model</artifactId>
            <version>${klass.version}</version>
        </dependency>
        <!--endregion-->

        <!--region Klass runtime dependencies -->
        <dependency>
            <groupId>cool.klass</groupId>
            <artifactId>klass-dropwizard-bundle-sample-data</artifactId>
            <version>${klass.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>cool.klass</groupId>
            <artifactId>klass-dropwizard-configuration-data-store-reladomo</artifactId>
            <version>${klass.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>cool.klass</groupId>
            <artifactId>klass-graphql-schema-scalar-temporal</artifactId>
            <version>${klass.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!--endregion-->

        <!--region Compile dependencies -->
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-core</artifactId>
        </dependency>

        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-jersey</artifactId>
        </dependency>

        <dependency>
            <groupId>com.smoketurner.dropwizard</groupId>
            <artifactId>graphql-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
        </dependency>
        <!--endregion-->

        <!--region Runtime dependencies -->
        <dependency>
            <groupId>io.liftwizard</groupId>
            <artifactId>liftwizard-logging-p6spy</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-core</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!--endregion-->

        <!--region Test dependencies -->
        <dependency>
            <groupId>io.liftwizard</groupId>
            <artifactId>liftwizard-reladomo-test-rule</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.liftwizard</groupId>
            <artifactId>liftwizard-config-auth-filter-impersonation</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-testing</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-client</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.skyscreamer</groupId>
            <artifactId>jsonassert</artifactId>
        </dependency>

        <dependency>
            <groupId>com.vaadin.external.google</groupId>
            <artifactId>android-json</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <scope>test</scope>
        </dependency>
        <!--endregion-->

    </dependencies>

    <profiles>
        <profile>
            <id>shade</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <build>
                <plugins>

                    <plugin>
                        <artifactId>maven-shade-plugin</artifactId>
                        <configuration>
                            <createDependencyReducedPom>true</createDependencyReducedPom>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>reference.conf</resource>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${mainClass}</mainClass>
                                </transformer>
                            </transformers>
                            <!-- exclude signed Manifests -->
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>

        <profile>
            <id>run-demo</id>
            <activation>
                <activeByDefault>true</activeByDefault>

                <!--TODO: There seems to be a bug in maven from using the file-missing trigger together with exec-maven-plugin's working directory-->
                <!--<file>-->
                    <!--<missing>${project.build.directory}/h2db/liftwizard-app-h2.mv.db</missing>-->
                <!--</file>-->
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>exec-maven-plugin</artifactId>
                            <version>1.6.0</version>
                            <executions>
                                <execution>
                                    <phase>install</phase>
                                    <goals>
                                        <goal>exec</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

    </profiles>

</project>
