package cool.klass.xample.coverage.inference

/*
 * Auto-generated by {@link cool.klass.generator.klass.projection.KlassProjectionGenerator}
 */

projection UserProjection on User
{
    userId: "User userId",
    systemFrom: "User systemFrom",
    systemTo: "User systemTo",
    firstName: "User firstName",
    lastName: "User lastName",
    email: "User email",
    version: UserVersionProjection,
}

projection PropertiesRequiredProjection on PropertiesRequired
{
    propertiesRequiredId: "PropertiesRequired propertiesRequiredId",
    systemFrom: "PropertiesRequired systemFrom",
    systemTo: "PropertiesRequired systemTo",
    createdOn: "PropertiesRequired createdOn",
    requiredString: "PropertiesRequired requiredString",
    requiredInteger: "PropertiesRequired requiredInteger",
    requiredLong: "PropertiesRequired requiredLong",
    requiredDouble: "PropertiesRequired requiredDouble",
    requiredFloat: "PropertiesRequired requiredFloat",
    requiredBoolean: "PropertiesRequired requiredBoolean",
    requiredInstant: "PropertiesRequired requiredInstant",
    requiredLocalDate: "PropertiesRequired requiredLocalDate",
    requiredDerived: "PropertiesRequired requiredDerived",
    version: PropertiesRequiredVersionProjection,
    createdBy: UserProjection,
    lastUpdatedBy: UserProjection,
}

projection PropertiesOptionalProjection on PropertiesOptional
{
    propertiesOptionalId: "PropertiesOptional propertiesOptionalId",
    systemFrom: "PropertiesOptional systemFrom",
    systemTo: "PropertiesOptional systemTo",
    createdOn: "PropertiesOptional createdOn",
    optionalString: "PropertiesOptional optionalString",
    optionalInteger: "PropertiesOptional optionalInteger",
    optionalLong: "PropertiesOptional optionalLong",
    optionalDouble: "PropertiesOptional optionalDouble",
    optionalFloat: "PropertiesOptional optionalFloat",
    optionalBoolean: "PropertiesOptional optionalBoolean",
    optionalInstant: "PropertiesOptional optionalInstant",
    optionalLocalDate: "PropertiesOptional optionalLocalDate",
    optionalDerived: "PropertiesOptional optionalDerived",
    version: PropertiesOptionalVersionProjection,
    createdBy: UserProjection,
    lastUpdatedBy: UserProjection,
}

projection EveryTypeKeyPropertyProjection on EveryTypeKeyProperty
{
    keyString: "EveryTypeKeyProperty keyString",
    keyInteger: "EveryTypeKeyProperty keyInteger",
    keyLong: "EveryTypeKeyProperty keyLong",
    keyDouble: "EveryTypeKeyProperty keyDouble",
    keyFloat: "EveryTypeKeyProperty keyFloat",
    keyBoolean: "EveryTypeKeyProperty keyBoolean",
    keyInstant: "EveryTypeKeyProperty keyInstant",
    keyLocalDate: "EveryTypeKeyProperty keyLocalDate",
    systemFrom: "EveryTypeKeyProperty systemFrom",
    systemTo: "EveryTypeKeyProperty systemTo",
    createdOn: "EveryTypeKeyProperty createdOn",
    everyTypeForeignKeyProperties: EveryTypeForeignKeyPropertyProjection,
    version: EveryTypeKeyPropertyVersionProjection,
    createdBy: UserProjection,
    lastUpdatedBy: UserProjection,
}

projection EveryTypeForeignKeyPropertyProjection on EveryTypeForeignKeyProperty
{
    id: "EveryTypeForeignKeyProperty id",
    systemFrom: "EveryTypeForeignKeyProperty systemFrom",
    systemTo: "EveryTypeForeignKeyProperty systemTo",
    data: "EveryTypeForeignKeyProperty data",
}

projection FinalPropertiesProjection on FinalProperties
{
    id: "FinalProperties id",
    data: "FinalProperties data",
}

projection OwnedNaturalOneToManySourceProjection on OwnedNaturalOneToManySource
{
    key: "OwnedNaturalOneToManySource key",
    value: "OwnedNaturalOneToManySource value",
    targets: OwnedNaturalOneToManyTargetProjection,
}

projection OwnedNaturalOneToManyTargetProjection on OwnedNaturalOneToManyTarget
{
    key: "OwnedNaturalOneToManyTarget key",
    value: "OwnedNaturalOneToManyTarget value",
}

projection OwnedNaturalOneToOneSourceProjection on OwnedNaturalOneToOneSource
{
    key: "OwnedNaturalOneToOneSource key",
    value: "OwnedNaturalOneToOneSource value",
    target: OwnedNaturalOneToOneTargetProjection,
}

projection OwnedNaturalOneToOneTargetProjection on OwnedNaturalOneToOneTarget
{
    key: "OwnedNaturalOneToOneTarget key",
    value: "OwnedNaturalOneToOneTarget value",
}

projection OwnedNaturalOneToManySelfProjection on OwnedNaturalOneToManySelf
{
    key: "OwnedNaturalOneToManySelf key",
    value: "OwnedNaturalOneToManySelf value",
    target: OwnedNaturalOneToManySelfProjection,
}

projection OwnedSyntheticOneToManySourceProjection on OwnedSyntheticOneToManySource
{
    id: "OwnedSyntheticOneToManySource id",
    value: "OwnedSyntheticOneToManySource value",
    targets: OwnedSyntheticOneToManyTargetProjection,
}

projection OwnedSyntheticOneToManyTargetProjection on OwnedSyntheticOneToManyTarget
{
    id: "OwnedSyntheticOneToManyTarget id",
    value: "OwnedSyntheticOneToManyTarget value",
}

projection OwnedSyntheticOneToOneSourceProjection on OwnedSyntheticOneToOneSource
{
    id: "OwnedSyntheticOneToOneSource id",
    value: "OwnedSyntheticOneToOneSource value",
    target: OwnedSyntheticOneToOneTargetProjection,
}

projection OwnedSyntheticOneToOneTargetProjection on OwnedSyntheticOneToOneTarget
{
    id: "OwnedSyntheticOneToOneTarget id",
    value: "OwnedSyntheticOneToOneTarget value",
}

projection OwnedSyntheticOneToManySelfProjection on OwnedSyntheticOneToManySelf
{
    id: "OwnedSyntheticOneToManySelf id",
    value: "OwnedSyntheticOneToManySelf value",
    target: OwnedSyntheticOneToManySelfProjection,
}

projection SharedNaturalManyToOneTargetProjection on SharedNaturalManyToOneTarget
{
    key: "SharedNaturalManyToOneTarget key",
    value: "SharedNaturalManyToOneTarget value",
}

projection SharedNaturalManyToOneSourceProjection on SharedNaturalManyToOneSource
{
    key: "SharedNaturalManyToOneSource key",
    value: "SharedNaturalManyToOneSource value",
    target: SharedNaturalManyToOneTargetProjection,
}

projection SharedNaturalOneToManySourceProjection on SharedNaturalOneToManySource
{
    key: "SharedNaturalOneToManySource key",
    value: "SharedNaturalOneToManySource value",
    targets: SharedNaturalOneToManyTargetProjection,
}

projection SharedNaturalOneToManyTargetProjection on SharedNaturalOneToManyTarget
{
    key: "SharedNaturalOneToManyTarget key",
    value: "SharedNaturalOneToManyTarget value",
}

projection SharedNaturalOneToOneSourceProjection on SharedNaturalOneToOneSource
{
    key: "SharedNaturalOneToOneSource key",
    value: "SharedNaturalOneToOneSource value",
    target: SharedNaturalOneToOneTargetProjection,
}

projection SharedNaturalOneToOneTargetProjection on SharedNaturalOneToOneTarget
{
    key: "SharedNaturalOneToOneTarget key",
    value: "SharedNaturalOneToOneTarget value",
}

projection SharedNaturalOneToManySelfProjection on SharedNaturalOneToManySelf
{
    key: "SharedNaturalOneToManySelf key",
    value: "SharedNaturalOneToManySelf value",
    target: SharedNaturalOneToManySelfProjection,
}

projection SharedSyntheticOneToManySourceProjection on SharedSyntheticOneToManySource
{
    id: "SharedSyntheticOneToManySource id",
    value: "SharedSyntheticOneToManySource value",
    targets: SharedSyntheticOneToManyTargetProjection,
}

projection SharedSyntheticOneToManyTargetProjection on SharedSyntheticOneToManyTarget
{
    id: "SharedSyntheticOneToManyTarget id",
    value: "SharedSyntheticOneToManyTarget value",
}

projection SharedSyntheticOneToOneSourceProjection on SharedSyntheticOneToOneSource
{
    id: "SharedSyntheticOneToOneSource id",
    value: "SharedSyntheticOneToOneSource value",
    target: SharedSyntheticOneToOneTargetProjection,
}

projection SharedSyntheticOneToOneTargetProjection on SharedSyntheticOneToOneTarget
{
    id: "SharedSyntheticOneToOneTarget id",
    value: "SharedSyntheticOneToOneTarget value",
}

projection SharedSyntheticOneToManySelfProjection on SharedSyntheticOneToManySelf
{
    id: "SharedSyntheticOneToManySelf id",
    value: "SharedSyntheticOneToManySelf value",
    target: SharedSyntheticOneToManySelfProjection,
}

projection ClassOwningClassWithDerivedPropertyProjection on ClassOwningClassWithDerivedProperty
{
    key: "ClassOwningClassWithDerivedProperty key",
    classWithDerivedProperties: ClassWithDerivedPropertyProjection,
}

projection ClassWithDerivedPropertyProjection on ClassWithDerivedProperty
{
    key: "ClassWithDerivedProperty key",
    derivedRequiredString: "ClassWithDerivedProperty derivedRequiredString",
    derivedRequiredInteger: "ClassWithDerivedProperty derivedRequiredInteger",
    derivedRequiredLong: "ClassWithDerivedProperty derivedRequiredLong",
    derivedRequiredDouble: "ClassWithDerivedProperty derivedRequiredDouble",
    derivedRequiredFloat: "ClassWithDerivedProperty derivedRequiredFloat",
    derivedRequiredBoolean: "ClassWithDerivedProperty derivedRequiredBoolean",
    derivedRequiredInstant: "ClassWithDerivedProperty derivedRequiredInstant",
    derivedRequiredLocalDate: "ClassWithDerivedProperty derivedRequiredLocalDate",
    derivedOptionalString: "ClassWithDerivedProperty derivedOptionalString",
    derivedOptionalInteger: "ClassWithDerivedProperty derivedOptionalInteger",
    derivedOptionalLong: "ClassWithDerivedProperty derivedOptionalLong",
    derivedOptionalDouble: "ClassWithDerivedProperty derivedOptionalDouble",
    derivedOptionalFloat: "ClassWithDerivedProperty derivedOptionalFloat",
    derivedOptionalBoolean: "ClassWithDerivedProperty derivedOptionalBoolean",
    derivedOptionalInstant: "ClassWithDerivedProperty derivedOptionalInstant",
    derivedOptionalLocalDate: "ClassWithDerivedProperty derivedOptionalLocalDate",
}

projection UserVersionProjection on UserVersion
{
    systemFrom: "UserVersion systemFrom",
    systemTo: "UserVersion systemTo",
    number: "UserVersion number",
}

projection PropertiesRequiredVersionProjection on PropertiesRequiredVersion
{
    systemFrom: "PropertiesRequiredVersion systemFrom",
    systemTo: "PropertiesRequiredVersion systemTo",
    createdOn: "PropertiesRequiredVersion createdOn",
    number: "PropertiesRequiredVersion number",
    createdBy: UserProjection,
    lastUpdatedBy: UserProjection,
}

projection PropertiesOptionalVersionProjection on PropertiesOptionalVersion
{
    systemFrom: "PropertiesOptionalVersion systemFrom",
    systemTo: "PropertiesOptionalVersion systemTo",
    createdOn: "PropertiesOptionalVersion createdOn",
    number: "PropertiesOptionalVersion number",
    createdBy: UserProjection,
    lastUpdatedBy: UserProjection,
}

projection EveryTypeKeyPropertyVersionProjection on EveryTypeKeyPropertyVersion
{
    systemFrom: "EveryTypeKeyPropertyVersion systemFrom",
    systemTo: "EveryTypeKeyPropertyVersion systemTo",
    createdOn: "EveryTypeKeyPropertyVersion createdOn",
    number: "EveryTypeKeyPropertyVersion number",
    createdBy: UserProjection,
    lastUpdatedBy: UserProjection,
}
