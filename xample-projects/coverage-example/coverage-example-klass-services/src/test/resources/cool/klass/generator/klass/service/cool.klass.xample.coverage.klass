package cool.klass.xample.coverage.inference

/*
 * Auto-generated by {@link cool.klass.generator.klass.service.KlassServiceGenerator}
 */

service UserResource on User
{
    /user/{userId: String[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.userId == userId;
            projection  : UserProjection;
        }
    /user
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : UserProjection;
        }
}

service PropertiesRequiredResource on PropertiesRequired
{
    /propertiesRequired/{propertiesRequiredId: Long[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.propertiesRequiredId == propertiesRequiredId;
            projection  : PropertiesRequiredProjection;
        }
    /propertiesRequired
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : PropertiesRequiredProjection;
        }
}

service PropertiesOptionalResource on PropertiesOptional
{
    /propertiesOptional/{propertiesOptionalId: Long[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.propertiesOptionalId == propertiesOptionalId;
            projection  : PropertiesOptionalProjection;
        }
    /propertiesOptional
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : PropertiesOptionalProjection;
        }
}

service EveryTypeKeyPropertyResource on EveryTypeKeyProperty
{
    /everyTypeKeyProperty/{keyString: String[1..1]}/{keyInteger: Integer[1..1]}/{keyLong: Long[1..1]}/{keyDouble: Double[1..1]}/{keyFloat: Float[1..1]}/{keyBoolean: Boolean[1..1]}/{keyInstant: Instant[1..1]}/{keyLocalDate: LocalDate[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.keyString == keyString && this.keyInteger == keyInteger && this.keyLong == keyLong && this.keyDouble == keyDouble && this.keyFloat == keyFloat && this.keyBoolean == keyBoolean && this.keyInstant == keyInstant && this.keyLocalDate == keyLocalDate;
            projection  : EveryTypeKeyPropertyProjection;
        }
    /everyTypeKeyProperty
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : EveryTypeKeyPropertyProjection;
        }
}

service FinalPropertiesResource on FinalProperties
{
    /finalProperties/{id: Long[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.id == id;
            projection  : FinalPropertiesProjection;
        }
    /finalProperties
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : FinalPropertiesProjection;
        }
}

service OwnedNaturalOneToManySourceResource on OwnedNaturalOneToManySource
{
    /ownedNaturalOneToManySource/{key: String[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.key == key;
            projection  : OwnedNaturalOneToManySourceProjection;
        }
    /ownedNaturalOneToManySource
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : OwnedNaturalOneToManySourceProjection;
        }
}

service OwnedNaturalOneToOneSourceResource on OwnedNaturalOneToOneSource
{
    /ownedNaturalOneToOneSource/{key: String[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.key == key;
            projection  : OwnedNaturalOneToOneSourceProjection;
        }
    /ownedNaturalOneToOneSource
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : OwnedNaturalOneToOneSourceProjection;
        }
}

service OwnedNaturalOneToManySelfResource on OwnedNaturalOneToManySelf
{
    /ownedNaturalOneToManySelf/{key: String[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.key == key;
            projection  : OwnedNaturalOneToManySelfProjection;
        }
    /ownedNaturalOneToManySelf
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : OwnedNaturalOneToManySelfProjection;
        }
}

service OwnedSyntheticOneToManySourceResource on OwnedSyntheticOneToManySource
{
    /ownedSyntheticOneToManySource/{id: Long[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.id == id;
            projection  : OwnedSyntheticOneToManySourceProjection;
        }
    /ownedSyntheticOneToManySource
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : OwnedSyntheticOneToManySourceProjection;
        }
}

service OwnedSyntheticOneToOneSourceResource on OwnedSyntheticOneToOneSource
{
    /ownedSyntheticOneToOneSource/{id: Long[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.id == id;
            projection  : OwnedSyntheticOneToOneSourceProjection;
        }
    /ownedSyntheticOneToOneSource
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : OwnedSyntheticOneToOneSourceProjection;
        }
}

service OwnedSyntheticOneToManySelfResource on OwnedSyntheticOneToManySelf
{
    /ownedSyntheticOneToManySelf/{id: Long[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.id == id;
            projection  : OwnedSyntheticOneToManySelfProjection;
        }
    /ownedSyntheticOneToManySelf
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : OwnedSyntheticOneToManySelfProjection;
        }
}

service SharedNaturalManyToOneTargetResource on SharedNaturalManyToOneTarget
{
    /sharedNaturalManyToOneTarget/{key: String[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.key == key;
            projection  : SharedNaturalManyToOneTargetProjection;
        }
    /sharedNaturalManyToOneTarget
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : SharedNaturalManyToOneTargetProjection;
        }
}

service SharedNaturalManyToOneSourceResource on SharedNaturalManyToOneSource
{
    /sharedNaturalManyToOneSource/{key: String[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.key == key;
            projection  : SharedNaturalManyToOneSourceProjection;
        }
    /sharedNaturalManyToOneSource
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : SharedNaturalManyToOneSourceProjection;
        }
}

service SharedNaturalOneToManySourceResource on SharedNaturalOneToManySource
{
    /sharedNaturalOneToManySource/{key: String[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.key == key;
            projection  : SharedNaturalOneToManySourceProjection;
        }
    /sharedNaturalOneToManySource
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : SharedNaturalOneToManySourceProjection;
        }
}

service SharedNaturalOneToManyTargetResource on SharedNaturalOneToManyTarget
{
    /sharedNaturalOneToManyTarget/{key: String[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.key == key;
            projection  : SharedNaturalOneToManyTargetProjection;
        }
    /sharedNaturalOneToManyTarget
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : SharedNaturalOneToManyTargetProjection;
        }
}

service SharedNaturalOneToOneSourceResource on SharedNaturalOneToOneSource
{
    /sharedNaturalOneToOneSource/{key: String[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.key == key;
            projection  : SharedNaturalOneToOneSourceProjection;
        }
    /sharedNaturalOneToOneSource
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : SharedNaturalOneToOneSourceProjection;
        }
}

service SharedNaturalOneToOneTargetResource on SharedNaturalOneToOneTarget
{
    /sharedNaturalOneToOneTarget/{key: String[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.key == key;
            projection  : SharedNaturalOneToOneTargetProjection;
        }
    /sharedNaturalOneToOneTarget
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : SharedNaturalOneToOneTargetProjection;
        }
}

service SharedNaturalOneToManySelfResource on SharedNaturalOneToManySelf
{
    /sharedNaturalOneToManySelf/{key: String[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.key == key;
            projection  : SharedNaturalOneToManySelfProjection;
        }
    /sharedNaturalOneToManySelf
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : SharedNaturalOneToManySelfProjection;
        }
}

service SharedSyntheticOneToManySourceResource on SharedSyntheticOneToManySource
{
    /sharedSyntheticOneToManySource/{id: Long[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.id == id;
            projection  : SharedSyntheticOneToManySourceProjection;
        }
    /sharedSyntheticOneToManySource
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : SharedSyntheticOneToManySourceProjection;
        }
}

service SharedSyntheticOneToManyTargetResource on SharedSyntheticOneToManyTarget
{
    /sharedSyntheticOneToManyTarget/{id: Long[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.id == id;
            projection  : SharedSyntheticOneToManyTargetProjection;
        }
    /sharedSyntheticOneToManyTarget
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : SharedSyntheticOneToManyTargetProjection;
        }
}

service SharedSyntheticOneToOneSourceResource on SharedSyntheticOneToOneSource
{
    /sharedSyntheticOneToOneSource/{id: Long[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.id == id;
            projection  : SharedSyntheticOneToOneSourceProjection;
        }
    /sharedSyntheticOneToOneSource
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : SharedSyntheticOneToOneSourceProjection;
        }
}

service SharedSyntheticOneToOneTargetResource on SharedSyntheticOneToOneTarget
{
    /sharedSyntheticOneToOneTarget/{id: Long[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.id == id;
            projection  : SharedSyntheticOneToOneTargetProjection;
        }
    /sharedSyntheticOneToOneTarget
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : SharedSyntheticOneToOneTargetProjection;
        }
}

service SharedSyntheticOneToManySelfResource on SharedSyntheticOneToManySelf
{
    /sharedSyntheticOneToManySelf/{id: Long[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.id == id;
            projection  : SharedSyntheticOneToManySelfProjection;
        }
    /sharedSyntheticOneToManySelf
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : SharedSyntheticOneToManySelfProjection;
        }
}

service ClassOwningClassWithDerivedPropertyResource on ClassOwningClassWithDerivedProperty
{
    /classOwningClassWithDerivedProperty/{key: String[1..1]}
        GET
        {
            multiplicity: one;
            criteria    : this.key == key;
            projection  : ClassOwningClassWithDerivedPropertyProjection;
        }
    /classOwningClassWithDerivedProperty
        GET
        {
            multiplicity: many;
            criteria    : all;
            projection  : ClassOwningClassWithDerivedPropertyProjection;
        }
}

