{
  "server": {
    "detailedJsonProcessingExceptionMapper": true,
    "rootPath": "/api/*",
    "requestLog": {
      "appenders": [
        {
          "type": "console",
          "filterFactories": [
            {
              "type": "url",
              "onMatch": "DENY",
              "urls": [
                "/icons/",
                "/static/",
                "/manifest.json",
                "/assets-manifest.json",
                "/favicon.ico",
                "/service-worker.js",
                "/bootstrap.min.css"
              ]
            }
          ]
        }
      ]
    }
  },
  "logging": {
    "level": "DEBUG",
    "loggers": {
      "com.gs.fw.common.mithra.batch.sqllogs":     "INFO",
      "com.gs.fw.common.mithra.connectionmanager": "INFO",
      "com.gs.fw.common.mithra.sqllogs":           "INFO",
      "cool.klass.xample.coverage":                 "DEBUG",
      "com.smoketurner.dropwizard.graphql":        "INFO",
      "graphql.execution":                         "INFO",
      "io.liftwizard":                             "DEBUG",
      "io.liftwizard.logging.p6spy":               "INFO",
      "klass.model.meta.domain":                   "DEBUG",
      "liquibase.changelog":                       "WARN",
      "liquibase.database":                        "INFO",
      "liquibase.executor":                        "INFO",
      "liquibase.resource":                        "INFO",
      "liquibase.servicelocator":                  "INFO",
      "liquibase.util":                            "INFO",
      "notprivacysafe.graphql":                    "INFO",
      "org.apache.http":                           "INFO",
      "org.eclipse.jetty":                         "INFO",
      "org.hibernate.validator.internal":          "INFO",
      "org.reflections":                           "INFO",
    },
    "appenders": [
      {
        "type": "console",
        "timeZone": "system",
        "logFormat": "%highlight(%-5level) %cyan(%date{HH:mm:ss.S}) %gray(%file:%line) [%white(%thread)] %blue(%marker) {%magenta(%mdc)} %green(%logger): %message%n%red(%rootException)",
        "includeCallerData": true,
      },
      {
        "type": "file-logstash",
        "threshold": "ALL",
        "timeZone": "UTC",
        "currentLogFilename": "./logs/app.json",
        "archivedLogFilenamePattern": "./logs/app-%d.json",
        "encoder": {
          "includeContext": true,
          "includeMdc": true,
          "includeStructuredArguments": true,
          "includedNonStructuredArguments": false,
          "includeTags": true,
          "prettyPrint": false,
          "serializationInclusion": "NON_ABSENT"
        },
      },
    ]
  },
  "klass": {
    "clock": {
      "type": "system"
    },
    "domainModel": {
      "type": "compiler",
      "sourcePackages": [
        "cool.klass.xample.coverage"
      ]
    },
    "dataStore": {
      "type": "reladomo",
      "uuid": {
        "type": "system"
      }
    },
  },
  "configLogging": {
    "enabled": true
  },
  "h2": {
    "enabled": true,
    "webPort": 8079,
    "tcpPort": 9079,
  },
  "dataSources": [
    {
      "name": "h2-tcp",
      "driverClass": "com.p6spy.engine.spy.P6SpyDriver",
      "readOnlyByDefault": false,
      "user": "sa",
      "password": "",
      "url": "jdbc:p6spy:h2:tcp://localhost:9079/coverage-example-h2",
      "properties": {
        "charSet": "UTF-8"
      },
      "logValidationErrors": true,
      "maxWaitForConnection": "1 second",
    },
  ],
  "ddlExecutors": [],
  "reladomo": {
    "runtimeConfigurationPaths": [
      "reladomo-runtime-configuration/ReladomoRuntimeConfiguration.xml"
    ]
  },
  "connectionManagers": [
    {
      "connectionManagerName": "h2-tcp",
      "dataSourceName": "h2-tcp",
      "databaseType": "H2",
      "schemaName": "coverage-example-h2"
    },
  ],
  "jerseyHttpLogging" : {
    "enabled": true
  },
  "sampleData": {
    "enabled": true,
    "dataInstant": "1999-12-31T23:59:00Z",
    "skippedPackages": [
      "klass.model.meta.domain"
    ]
  },
  "bootstrap": {
    "enabled": true
  },
  "liquibase": {
    "enabled": true,
    "dropEntireSchemaOnStartupAndShutdown": true,
    "dataSourceMigrations": [
      {
        "dataSourceName": "h2-tcp",
        "migrationFileName": "migrations.xml",
        "migrationFileLocation": "classpath",
        "contexts": [],
      },
    ],
    "dryRun": false,
  },
  "graphQL": {
    "enableTracing": false,
    "queryCache": "maximumSize=10000",
    "schemaFiles": [
      "cool/klass/xample/coverage/graphql/schema/query/GraphQLQuerySchema.graphqls",
      "cool/klass/xample/coverage/graphql/schema/finder/GraphQLFinders.graphqls",
      "cool/klass/xample/coverage/graphql/schema/GraphQLSchema.graphqls",
      "io/liftwizard/graphql/schema/attribute/ReladomoAttribute.graphqls"
    ]
  },
  "spaRedirectFilter": {
    "enabled": true,
    "redirectSPAPage": "/index.html",
    "cacheControlHeader": "public, max-age=86400",
    "wellKnownPathPrefixes": [
      "/api/",
      "/meta/",
      "/tasks/",
      "/static/",
      "/icons/",
      "/admin/",
      "/h2-console/",
      "/graphql/",
      "/graphiql/",
      "/graphql-playground/"
    ]
  }
}
