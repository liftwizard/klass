package com.stackoverflow.inference

/*
 * Auto-generated by {@link cool.klass.generator.klass.projection.KlassProjectionGenerator}
 */

projection UserProjection on User
{
    userId: "User userId",
    firstName: "User firstName",
    lastName: "User lastName",
    email: "User email",
    systemFrom: "User systemFrom",
    systemTo: "User systemTo",
}

projection DocumentProjection on Document
{
    id: "Document id",
    body: "Document body",
}

projection QuestionProjection on Question
{
    id: "Document id",
    body: "Document body",
    title: "Question title",
    status: "Question status",
    deleted: "Question deleted",
    systemFrom: "Question systemFrom",
    systemTo: "Question systemTo",
    createdOn: "Question createdOn",
    answers: AnswerProjection,
    votes: QuestionVoteProjection,
    tags: QuestionTagMappingProjection,
    version: QuestionVersionProjection,
    createdBy: UserProjection,
    lastUpdatedBy: UserProjection,
}

projection AnswerProjection on Answer
{
    id: "Document id",
    body: "Document body",
    deleted: "Answer deleted",
    systemFrom: "Answer systemFrom",
    systemTo: "Answer systemTo",
    createdOn: "Answer createdOn",
    version: AnswerVersionProjection,
    createdBy: UserProjection,
    lastUpdatedBy: UserProjection,
}

projection VoteProjection on Vote
{
    direction: "Vote direction",
}

projection AbstractVoteProjection on AbstractVote
{
    direction: "Vote direction",
    systemFrom: "AbstractVote systemFrom",
    systemTo: "AbstractVote systemTo",
    createdOn: "AbstractVote createdOn",
    createdBy: UserProjection,
    lastUpdatedBy: UserProjection,
}

projection QuestionVoteProjection on QuestionVote
{
    direction: "Vote direction",
    systemFrom: "AbstractVote systemFrom",
    systemTo: "AbstractVote systemTo",
    createdOn: "AbstractVote createdOn",
    createdBy: UserProjection,
    lastUpdatedBy: UserProjection,
}

projection TagProjection on Tag
{
    name: "Tag name",
    description: "Tag description",
    systemFrom: "Tag systemFrom",
    systemTo: "Tag systemTo",
    createdOn: "Tag createdOn",
    questions: QuestionTagMappingProjection,
    version: TagVersionProjection,
    createdBy: UserProjection,
    lastUpdatedBy: UserProjection,
}

projection QuestionTagMappingProjection on QuestionTagMapping
{
    systemFrom: "QuestionTagMapping systemFrom",
    systemTo: "QuestionTagMapping systemTo",
}

projection QuestionVersionProjection on QuestionVersion
{
    systemFrom: "QuestionVersion systemFrom",
    systemTo: "QuestionVersion systemTo",
    createdOn: "QuestionVersion createdOn",
    number: "QuestionVersion number",
    createdBy: UserProjection,
    lastUpdatedBy: UserProjection,
}

projection AnswerVersionProjection on AnswerVersion
{
    number: "AnswerVersion number",
    systemFrom: "AnswerVersion systemFrom",
    systemTo: "AnswerVersion systemTo",
    createdOn: "AnswerVersion createdOn",
    createdBy: UserProjection,
    lastUpdatedBy: UserProjection,
}

projection TagVersionProjection on TagVersion
{
    number: "TagVersion number",
    systemFrom: "TagVersion systemFrom",
    systemTo: "TagVersion systemTo",
    createdOn: "TagVersion createdOn",
    createdBy: UserProjection,
    lastUpdatedBy: UserProjection,
}
