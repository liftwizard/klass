package cool.klass.generator.service.test;

import java.util.Optional;

import cool.klass.generator.dto.DataTransferObjectsGenerator;
import cool.klass.model.converter.compiler.CompilationResult;
import cool.klass.model.converter.compiler.CompilationUnit;
import cool.klass.model.converter.compiler.DomainModelCompilationResult;
import cool.klass.model.converter.compiler.ErrorsCompilationResult;
import cool.klass.model.converter.compiler.KlassCompiler;
import cool.klass.model.converter.compiler.error.RootCompilerError;
import cool.klass.model.meta.domain.api.DomainModel;
import cool.klass.model.meta.domain.api.Klass;
import cool.klass.test.constants.KlassTestConstants;
import org.eclipse.collections.api.list.ImmutableList;
import org.junit.Test;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.CoreMatchers.notNullValue;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.junit.Assert.fail;

public class DataTransferObjectGeneratorTest
{
    @Test
    public void stackOverflow()
    {
        CompilationUnit compilationUnit = CompilationUnit.createFromText(
                Optional.empty(),
                "example.klass",
                KlassTestConstants.STACK_OVERFLOW_SOURCE_CODE_TEXT);
        KlassCompiler     compiler          = new KlassCompiler(compilationUnit);
        CompilationResult compilationResult = compiler.compile();

        if (compilationResult instanceof ErrorsCompilationResult)
        {
            ErrorsCompilationResult          errorsCompilationResult = (ErrorsCompilationResult) compilationResult;
            ImmutableList<RootCompilerError> compilerErrors          = errorsCompilationResult.getCompilerErrors();
            String                           message                 = compilerErrors.makeString("\n");
            fail(message);
        }
        else if (compilationResult instanceof DomainModelCompilationResult)
        {
            DomainModelCompilationResult domainModelCompilationResult = (DomainModelCompilationResult) compilationResult;
            DomainModel                  domainModel                  = domainModelCompilationResult.getDomainModel();
            assertThat(domainModel, notNullValue());

            DataTransferObjectsGenerator dataTransferObjectsGenerator = new DataTransferObjectsGenerator(domainModel);

            Klass  klass           = domainModel.getClassByName("Question");
            String klassSourceCode = dataTransferObjectsGenerator.getClassSourceCode(klass);

            //<editor-fold desc="expected java code">
            //language=JAVA
            String expectedSourceCode = ""
                    + "package com.stackoverflow.dto;\n"
                    + "\n"
                    + "import java.time.*;\n"
                    + "import java.util.*;\n"
                    + "\n"
                    + "import javax.validation.constraints.*;\n"
                    + "\n"
                    + "/**\n"
                    + " * Auto-generated by {@link cool.klass.generator.dto.DataTransferObjectsGenerator}\n"
                    + " */\n"
                    + "public class QuestionDTO\n"
                    + "{\n"
                    + "    @NotNull\n"
                    + "    private String body;\n"
                    + "    private Long id;\n"
                    + "    @NotNull\n"
                    + "    private String title;\n"
                    + "    @NotNull\n"
                    + "    private StatusDTO status;\n"
                    + "    @NotNull\n"
                    + "    private Boolean deleted;\n"
                    + "    private Instant system;\n"
                    + "    private Instant systemFrom;\n"
                    + "    private Instant systemTo;\n"
                    + "    @NotNull\n"
                    + "    private String createdById;\n"
                    + "    @NotNull\n"
                    + "    private Instant createdOn;\n"
                    + "    @NotNull\n"
                    + "    private String lastUpdatedById;\n"
                    + "\n"
                    + "    private List<AnswerDTO> answers;\n"
                    + "    private List<QuestionVoteDTO> votes;\n"
                    + "    private List<QuestionTagMappingDTO> tags;\n"
                    + "    private QuestionVersionDTO version;\n"
                    + "\n"
                    + "    public String getBody()\n"
                    + "    {\n"
                    + "        return this.body;\n"
                    + "    }\n"
                    + "\n"
                    + "    public void setBody(String body)\n"
                    + "    {\n"
                    + "        this.body = body;\n"
                    + "    }\n"
                    + "\n"
                    + "    public Long getId()\n"
                    + "    {\n"
                    + "        return this.id;\n"
                    + "    }\n"
                    + "\n"
                    + "    public void setId(Long id)\n"
                    + "    {\n"
                    + "        this.id = id;\n"
                    + "    }\n"
                    + "\n"
                    + "    public String getTitle()\n"
                    + "    {\n"
                    + "        return this.title;\n"
                    + "    }\n"
                    + "\n"
                    + "    public void setTitle(String title)\n"
                    + "    {\n"
                    + "        this.title = title;\n"
                    + "    }\n"
                    + "\n"
                    + "    public StatusDTO getStatus()\n"
                    + "    {\n"
                    + "        return this.status;\n"
                    + "    }\n"
                    + "\n"
                    + "    public void setStatus(StatusDTO status)\n"
                    + "    {\n"
                    + "        this.status = status;\n"
                    + "    }\n"
                    + "\n"
                    + "    public Boolean getDeleted()\n"
                    + "    {\n"
                    + "        return this.deleted;\n"
                    + "    }\n"
                    + "\n"
                    + "    public void setDeleted(Boolean deleted)\n"
                    + "    {\n"
                    + "        this.deleted = deleted;\n"
                    + "    }\n"
                    + "\n"
                    + "    public Instant getSystem()\n"
                    + "    {\n"
                    + "        return this.system;\n"
                    + "    }\n"
                    + "\n"
                    + "    public void setSystem(Instant system)\n"
                    + "    {\n"
                    + "        this.system = system;\n"
                    + "    }\n"
                    + "\n"
                    + "    public Instant getSystemFrom()\n"
                    + "    {\n"
                    + "        return this.systemFrom;\n"
                    + "    }\n"
                    + "\n"
                    + "    public void setSystemFrom(Instant systemFrom)\n"
                    + "    {\n"
                    + "        this.systemFrom = systemFrom;\n"
                    + "    }\n"
                    + "\n"
                    + "    public Instant getSystemTo()\n"
                    + "    {\n"
                    + "        return this.systemTo;\n"
                    + "    }\n"
                    + "\n"
                    + "    public void setSystemTo(Instant systemTo)\n"
                    + "    {\n"
                    + "        this.systemTo = systemTo;\n"
                    + "    }\n"
                    + "\n"
                    + "    public String getCreatedById()\n"
                    + "    {\n"
                    + "        return this.createdById;\n"
                    + "    }\n"
                    + "\n"
                    + "    public void setCreatedById(String createdById)\n"
                    + "    {\n"
                    + "        this.createdById = createdById;\n"
                    + "    }\n"
                    + "\n"
                    + "    public Instant getCreatedOn()\n"
                    + "    {\n"
                    + "        return this.createdOn;\n"
                    + "    }\n"
                    + "\n"
                    + "    public void setCreatedOn(Instant createdOn)\n"
                    + "    {\n"
                    + "        this.createdOn = createdOn;\n"
                    + "    }\n"
                    + "\n"
                    + "    public String getLastUpdatedById()\n"
                    + "    {\n"
                    + "        return this.lastUpdatedById;\n"
                    + "    }\n"
                    + "\n"
                    + "    public void setLastUpdatedById(String lastUpdatedById)\n"
                    + "    {\n"
                    + "        this.lastUpdatedById = lastUpdatedById;\n"
                    + "    }\n"
                    + "\n"
                    + "    public List<AnswerDTO> getAnswers()\n"
                    + "    {\n"
                    + "        return this.answers;\n"
                    + "    }\n"
                    + "\n"
                    + "    public void setAnswers(List<AnswerDTO> answers)\n"
                    + "    {\n"
                    + "        this.answers = answers;\n"
                    + "    }\n"
                    + "\n"
                    + "    public List<QuestionVoteDTO> getVotes()\n"
                    + "    {\n"
                    + "        return this.votes;\n"
                    + "    }\n"
                    + "\n"
                    + "    public void setVotes(List<QuestionVoteDTO> votes)\n"
                    + "    {\n"
                    + "        this.votes = votes;\n"
                    + "    }\n"
                    + "\n"
                    + "    public List<QuestionTagMappingDTO> getTags()\n"
                    + "    {\n"
                    + "        return this.tags;\n"
                    + "    }\n"
                    + "\n"
                    + "    public void setTags(List<QuestionTagMappingDTO> tags)\n"
                    + "    {\n"
                    + "        this.tags = tags;\n"
                    + "    }\n"
                    + "\n"
                    + "    public QuestionVersionDTO getVersion()\n"
                    + "    {\n"
                    + "        return this.version;\n"
                    + "    }\n"
                    + "\n"
                    + "    public void setVersion(QuestionVersionDTO version)\n"
                    + "    {\n"
                    + "        this.version = version;\n"
                    + "    }\n"
                    + "}\n";
            //</editor-fold>

            assertThat(klassSourceCode, klassSourceCode, is(expectedSourceCode));
        }
        else
        {
            fail(compilationResult.getClass().getSimpleName());
        }
    }
}
