#!/usr/bin/env bash
#MISE description="Rebase all branches onto configurable upstream/main or matching up-to-date origin branch"
#MISE depends=["git:check-local-modifications", "git:fetch"]
#MISE aliases=["ra"]

set -Eeuo pipefail

source .mise/tasks/console/ansi-colors

upstream_remote="${UPSTREAM_REMOTE:-upstream}"
upstream_branch="${UPSTREAM_BRANCH:-main}"

branches=($(git for-each-ref --format='%(refname:short)' refs/heads/ --sort -committerdate --no-contains ${upstream_remote}/${upstream_branch}))
total=${#branches[@]}
current=0

for branch in "${branches[@]}"
do
    current=$((current + 1))
    included_count=$(git branch --contains "$branch" | wc -l)
    if [ "$included_count" -gt 1 ]; then
        echo "[${ANSI_YELLOW}${current}${ANSI_DEFAULT}/${total}] Skipping branch ${ANSI_BRIGHT_GREEN}${ANSI_BOLD}$branch${ANSI_NORMAL} as it is included in other branches"
        continue
    fi

    git checkout --quiet "$branch"
    rebase_message="[${ANSI_YELLOW}${current}${ANSI_DEFAULT}/${total}] Rebasing branch ${ANSI_BRIGHT_GREEN}${ANSI_BOLD}$branch${ANSI_NORMAL} onto"

    # Check if origin/$branch exists
    if git rev-parse --verify origin/$branch &>/dev/null; then
        # Check if upstream/master is an ancestor of origin/$branch
        if git merge-base --is-ancestor ${upstream_remote}/${upstream_branch} origin/$branch; then
            echo "$rebase_message ${ANSI_BRIGHT_RED}${ANSI_BOLD}origin/$branch${ANSI_NORMAL} (because origin/$branch exists and is up-to-date with ${upstream_remote}/${upstream_branch})"
            git rebase --rebase-merges --update-refs --quiet origin/$branch
        else
            echo "$rebase_message ${ANSI_BRIGHT_RED}${ANSI_BOLD}${upstream_remote}/${upstream_branch}${ANSI_NORMAL} (because origin/$branch exists but is not an ancestor)"
            git rebase --rebase-merges --update-refs --quiet ${upstream_remote}/${upstream_branch}
        fi
    else
        echo "$rebase_message ${ANSI_BRIGHT_RED}${ANSI_BOLD}${upstream_remote}/${upstream_branch}${ANSI_NORMAL} (because origin/$branch does not exist)"
        git rebase --rebase-merges --update-refs --quiet ${upstream_remote}/${upstream_branch}
    fi
done
