package cool.klass.generator.grahql.fragment;

import javax.annotation.Nonnull;

import com.google.common.base.CaseFormat;
import cool.klass.model.meta.domain.api.DomainModel;
import cool.klass.model.meta.domain.api.Klass;
import cool.klass.model.meta.domain.api.property.DataTypeProperty;

public final class GraphQLFragmentSourceCodeGenerator
{
    private GraphQLFragmentSourceCodeGenerator()
    {
        throw new AssertionError("Suppress default constructor for noninstantiability");
    }

    @Nonnull
    public static String getPackageSourceCode(DomainModel domainModel, String packageName)
    {
        String topLevelElementsCode = domainModel
                .getClasses()
                .collect(GraphQLFragmentSourceCodeGenerator::getSourceCode)
                .makeString("");

        return ""
               + "# Auto-generated by " + GraphQLFragmentGenerator.class.getCanonicalName() + "\n"
               + "\n"
               + topLevelElementsCode;
    }

    private static String getSourceCode(@Nonnull Klass klass)
    {
        String lowerCaseName = CaseFormat.UPPER_CAMEL.to(CaseFormat.LOWER_CAMEL, klass.getName());

        String propertiesSourceCode = klass
                .getDataTypeProperties()
                .reject(DataTypeProperty::isDerived)
                .reject(DataTypeProperty::isPrivate)
                .collect(GraphQLFragmentSourceCodeGenerator::getSourceCode)
                .makeString("");
        return "fragment " + lowerCaseName + "Fragment on " + klass.getName() + " {\n"
                + propertiesSourceCode
                + "}\n\n";
    }

    private static String getSourceCode(DataTypeProperty dataTypeProperty)
    {
        return String.format("    %s\n", dataTypeProperty.getName());
    }
}
